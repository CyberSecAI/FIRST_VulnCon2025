Kind: captions Language: en Thank you very much. Hi everyone. So my Thank you very much. Hi everyone. So my Thank you very much. Hi everyone. So my name is Luchi Stanesco. I'm a security name is Luchi Stanesco. I'm a security name is Luchi Stanesco. I'm a security engineering manager at engineering manager at engineering manager at Canonical. And one of the disclaimers I Canonical. And one of the disclaimers I Canonical. And one of the disclaimers I often put out before well whenever often put out before well whenever often put out before well whenever there's a word regulations that comes in there's a word regulations that comes in there's a word regulations that comes in is I have no legal training. So please is I have no legal training. So please is I have no legal training. So please do not take anything I say here as legal do not take anything I say here as legal do not take anything I say here as legal advice. that would be very very advice. that would be very very advice. that would be very very bad. Title of my presentation mentioned bad. Title of my presentation mentioned bad. Title of my presentation mentioned earlier is applying cyber security earlier is applying cyber security earlier is applying cyber security regulations and industry standards to regulations and industry standards to regulations and industry standards to open source projects. And that's a bit open source projects. And that's a bit open source projects. And that's a bit of a mouthful, right? So let's just of a mouthful, right? So let's just of a mouthful, right? So let's just start off with a simpler question here. start off with a simpler question here. start off with a simpler question here. Do we have any fans of regulations here Do we have any fans of regulations here Do we have any fans of regulations here in the room with us now? One, two. Okay, in the room with us now? One, two. Okay, in the room with us now? One, two. Okay, there's a few. What do you like about there's a few. What do you like about there's a few. What do you like about regulations? Just shout out. Okay, they let you know what you have to Okay, they let you know what you have to Okay, they let you know what you have to do. Nice and simple, right? do. Nice and simple, right? do. Nice and simple, right? Um, I'm a fairly nuanced person, so I'm Um, I'm a fairly nuanced person, so I'm Um, I'm a fairly nuanced person, so I'm not I'm going to tell you what I'm not a not I'm going to tell you what I'm not a not I'm going to tell you what I'm not a big fan of instead. I'm not a big fan of big fan of instead. I'm not a big fan of big fan of instead. I'm not a big fan of regulations being treated as tickbox regulations being treated as tickbox regulations being treated as tickbox exercises, right? And I think it's exercises, right? And I think it's exercises, right? And I think it's really important to consider the spirit really important to consider the spirit really important to consider the spirit of any regulation as well. not just the of any regulation as well. not just the of any regulation as well. not just the letter. I'm probably an optimist myself letter. I'm probably an optimist myself letter. I'm probably an optimist myself and that means that I prefer to look at and that means that I prefer to look at and that means that I prefer to look at these from the angle of what can we these from the angle of what can we these from the angle of what can we actually do that is useful that is actually do that is useful that is actually do that is useful that is genuinely useful and not just tick a box genuinely useful and not just tick a box genuinely useful and not just tick a box because that's being imposed on us. because that's being imposed on us. because that's being imposed on us. Right? So what I'm hoping for us to Right? So what I'm hoping for us to Right? So what I'm hoping for us to discuss today is how regulations fit discuss today is how regulations fit discuss today is how regulations fit within the open source ecosystems. And within the open source ecosystems. And within the open source ecosystems. And there have been several presentations there have been several presentations there have been several presentations earlier today here within the same earlier today here within the same earlier today here within the same context talking about the same kind of context talking about the same kind of context talking about the same kind of things here and I'm really glad that things here and I'm really glad that things here and I'm really glad that we're having this conversation. Now there's two conversation. Now there's two conversation. Now there's two perspectives that I think are important perspectives that I think are important perspectives that I think are important here. Now one would here. Now one would here. Now one would be regulated be regulated be regulated environments. You know open source is environments. You know open source is environments. You know open source is ubiquitous. It's everywhere. We use it. ubiquitous. It's everywhere. We use it. ubiquitous. It's everywhere. We use it. Regulated environments use it as Regulated environments use it as Regulated environments use it as well. But the standards, the well. But the standards, the well. But the standards, the regulations, the regulations, the regulations, the different tools that they have at their different tools that they have at their different tools that they have at their disposal are often not tailored to the disposal are often not tailored to the disposal are often not tailored to the specific way that open source specific way that open source specific way that open source regulations actually work. So the regulations actually work. So the regulations actually work. So the question is what can we actually do to question is what can we actually do to question is what can we actually do to you know make these two worlds act fit you know make these two worlds act fit you know make these two worlds act fit well together. The other angle is the well together. The other angle is the well together. The other angle is the open source projects themselves. I open source projects themselves. I open source projects themselves. I mean there are some really great mean there are some really great mean there are some really great initiatives um for example from the open initiatives um for example from the open initiatives um for example from the open SSF foundation um we've got um the SSF foundation um we've got um the SSF foundation um we've got um the scorecard the best practices security scorecard the best practices security scorecard the best practices security baselines um mentioned earlier this baselines um mentioned earlier this baselines um mentioned earlier this foundation has put out advice about the foundation has put out advice about the foundation has put out advice about the CRA and these are specifically tailored CRA and these are specifically tailored CRA and these are specifically tailored to open source projects to open source projects to open source projects right but at the end of the day security right but at the end of the day security right but at the end of the day security regulations are also based on security regulations are also based on security regulations are also based on security best practices that are generic. They best practices that are generic. They best practices that are generic. They are advocated by experts. So is it are advocated by experts. So is it are advocated by experts. So is it really not the case that open source really not the case that open source really not the case that open source projects can also learn something from projects can also learn something from projects can also learn something from what's being imposed on industry as what's being imposed on industry as what's being imposed on industry as well? So this is the conversation I'm well? So this is the conversation I'm well? So this is the conversation I'm hoping that we can have today. hoping that we can have today. hoping that we can have today. And with this in mind, I've just taken And with this in mind, I've just taken And with this in mind, I've just taken some examples of some of the tools that some examples of some of the tools that some examples of some of the tools that are available for us from the sort of are available for us from the sort of are available for us from the sort of two different perspectives. So one is two different perspectives. So one is two different perspectives. So one is the British National Cyber Security the British National Cyber Security the British National Cyber Security Centers vendor security assessment and Centers vendor security assessment and Centers vendor security assessment and the other one is the American vendor the other one is the American vendor the other one is the American vendor supply chain risk management template. supply chain risk management template. supply chain risk management template. These are questionnaires basically. So These are questionnaires basically. So These are questionnaires basically. So these are tools that entities, these are tools that entities, these are tools that entities, organizations have at their disposals to organizations have at their disposals to organizations have at their disposals to evaluate the security of their supply evaluate the security of their supply evaluate the security of their supply chain. They contain criteria and we'll chain. They contain criteria and we'll chain. They contain criteria and we'll have a quick look at them in a moment. have a quick look at them in a moment. have a quick look at them in a moment. On the other hand, we've got OpenSSF On the other hand, we've got OpenSSF On the other hand, we've got OpenSSF best practices and OpenSSF scorecard. best practices and OpenSSF scorecard. best practices and OpenSSF scorecard. These are also criteria or automated These are also criteria or automated These are also criteria or automated tests in the case of the scorecard tests in the case of the scorecard tests in the case of the scorecard project and they are specifically project and they are specifically project and they are specifically tailored to open source projects, right? tailored to open source projects, right? tailored to open source projects, right? But they also are based at the same kind But they also are based at the same kind But they also are based at the same kind of security best practices that the of security best practices that the of security best practices that the industry experts as a whole advocate industry experts as a whole advocate industry experts as a whole advocate anyway. So can we fit these together? Before we answer that together? Before we answer that together? Before we answer that question, let's have a look to see if we question, let's have a look to see if we question, let's have a look to see if we can actually use regulatory tools in the can actually use regulatory tools in the can actually use regulatory tools in the open source context. Now, this is open source context. Now, this is open source context. Now, this is basically me trying to demonstrate that basically me trying to demonstrate that basically me trying to demonstrate that this is actually possible by handpicking this is actually possible by handpicking this is actually possible by handpicking some very simple examples, but bear with some very simple examples, but bear with some very simple examples, but bear with me. So, the me. So, the me. So, the NCSVs has a criteria item that says that NCSVs has a criteria item that says that NCSVs has a criteria item that says that each product has a version controlled each product has a version controlled each product has a version controlled code repository. code repository. code repository. Now I think that it's kind of difficult Now I think that it's kind of difficult Now I think that it's kind of difficult to imagine an open source project that to imagine an open source project that to imagine an open source project that doesn't have a version control doesn't have a version control doesn't have a version control repository, right? So it should be repository, right? So it should be repository, right? So it should be implicit to an extent. But at the same implicit to an extent. But at the same implicit to an extent. But at the same time, if you look at the open SSF best time, if you look at the open SSF best time, if you look at the open SSF best practices, you'll see that the passing practices, you'll see that the passing practices, you'll see that the passing badge also states the project must have badge also states the project must have badge also states the project must have a version control source repository that a version control source repository that a version control source repository that is publicly readable and has a URL. So is publicly readable and has a URL. So is publicly readable and has a URL. So basically takes that same kind of basically takes that same kind of basically takes that same kind of condition and like puts it a bit further condition and like puts it a bit further condition and like puts it a bit further as well like adds a bit extra to it. So as well like adds a bit extra to it. So as well like adds a bit extra to it. So that's great right? So if you're that's great right? So if you're that's great right? So if you're effectively already um adearing to the effectively already um adearing to the effectively already um adearing to the open SSF best practices you open SSF best practices you open SSF best practices you automatically adear that criteria on the automatically adear that criteria on the automatically adear that criteria on the left hand side as well. left hand side as well. left hand side as well. Second example I've got here is the Second example I've got here is the Second example I've got here is the vendor has a process for issuing vendor has a process for issuing vendor has a process for issuing remediation and um you know just for the remediation and um you know just for the remediation and um you know just for the context because I have basically just context because I have basically just context because I have basically just copy pasted from the VSSA but it's a bit copy pasted from the VSSA but it's a bit copy pasted from the VSSA but it's a bit longer the text there so this actually longer the text there so this actually longer the text there so this actually refers to vulnerabilities not any kind refers to vulnerabilities not any kind refers to vulnerabilities not any kind of issues for from the opens best practices issues for from the opens best practices issues for from the opens best practices the silver badge has a criteria item the silver badge has a criteria item the silver badge has a criteria item that says the project must have a that says the project must have a that says the project must have a documented process for responding into documented process for responding into documented process for responding into vulnerability vulnerability vulnerability reports. This is slightly different, reports. This is slightly different, reports. This is slightly different, right? I mean the the angle is the same right? I mean the the angle is the same right? I mean the the angle is the same but one is requesting remediation. Now but one is requesting remediation. Now but one is requesting remediation. Now remediation there's a nuance there. What remediation there's a nuance there. What remediation there's a nuance there. What does it actually mean? Does it mean you does it actually mean? Does it mean you does it actually mean? Does it mean you have to have a patch? Does it mean you have to have a patch? Does it mean you have to have a patch? Does it mean you have to have a mediation? Can you just have to have a mediation? Can you just have to have a mediation? Can you just say just delete the software because say just delete the software because say just delete the software because that's the only remediation possible? that's the only remediation possible? that's the only remediation possible? It's still remediation, right? Actually It's still remediation, right? Actually It's still remediation, right? Actually the VSSA isn't clear on the VSSA isn't clear on the VSSA isn't clear on that. The open best practices says you that. The open best practices says you that. The open best practices says you must respond to vulnerability report. So must respond to vulnerability report. So must respond to vulnerability report. So you must acknowledge them, do something you must acknowledge them, do something you must acknowledge them, do something with them. So I hope that you know from that them. So I hope that you know from that them. So I hope that you know from that last slide it's sort of clear that what last slide it's sort of clear that what last slide it's sort of clear that what you find in regulatory tools does still you find in regulatory tools does still you find in regulatory tools does still make sense for open source projects. make sense for open source projects. make sense for open source projects. So here's the regulatory tools that So here's the regulatory tools that So here's the regulatory tools that we're going to be talking about today. we're going to be talking about today. we're going to be talking about today. The NCSC VSA, it was created in support The NCSC VSA, it was created in support The NCSC VSA, it was created in support of the Telecom Security Act and the of the Telecom Security Act and the of the Telecom Security Act and the accompanying electronic communication accompanying electronic communication accompanying electronic communication security measures security measures security measures regulations. Its state goal is to advise regulations. Its state goal is to advise regulations. Its state goal is to advise on how to assess the security of network on how to assess the security of network on how to assess the security of network equipment. equipment. equipment. The term network equipment is The term network equipment is The term network equipment is actually does not refer to network actually does not refer to network actually does not refer to network equipment as in switches and routters equipment as in switches and routters equipment as in switches and routters but actually to anything that but actually to anything that but actually to anything that processes processes processes telecommunications basically. So it will telecommunications basically. So it will telecommunications basically. So it will servers that process communications are servers that process communications are servers that process communications are going to be within the scope of this. Um going to be within the scope of this. Um going to be within the scope of this. Um it's just language right? All of these it's just language right? All of these it's just language right? All of these regulations are going to have very regulations are going to have very regulations are going to have very specific language that some might find specific language that some might find specific language that some might find bit weird. bit weird. bit weird. It consists of 58 criteria items um and It consists of 58 criteria items um and It consists of 58 criteria items um and those are spread over 10 categories and those are spread over 10 categories and those are spread over 10 categories and they tend to be rather specific right so they tend to be rather specific right so they tend to be rather specific right so here's an example the vendor makes use here's an example the vendor makes use here's an example the vendor makes use of modern hip protection mitigations of modern hip protection mitigations of modern hip protection mitigations now get more specific than that you'd now get more specific than that you'd now get more specific than that you'd actually have to say exactly what hip actually have to say exactly what hip actually have to say exactly what hip protection mitigations you'd have to protection mitigations you'd have to protection mitigations you'd have to implement right implement right implement right so it is so it is so it is quite prescriptive In that quite prescriptive In that quite prescriptive In that regard, the CISA vendor STRM template on regard, the CISA vendor STRM template on regard, the CISA vendor STRM template on the other hand, um this is a that's the other hand, um this is a that's the other hand, um this is a that's quoted right from the actual template. A quoted right from the actual template. A quoted right from the actual template. A standardized template of questions as a standardized template of questions as a standardized template of questions as a means to communicate ICT supply chain means to communicate ICT supply chain means to communicate ICT supply chain risk posture in a consistent way. So the risk posture in a consistent way. So the risk posture in a consistent way. So the purpose is the same, right? The purpose purpose is the same, right? The purpose purpose is the same, right? The purpose is for organizations to be able to is for organizations to be able to is for organizations to be able to assess their supply chain. That's the assess their supply chain. That's the assess their supply chain. That's the main thing. There's eight categories main thing. There's eight categories main thing. There's eight categories there. there. there. Um, we're only going to be focusing on Um, we're only going to be focusing on Um, we're only going to be focusing on one. Some of the others are like one. Some of the others are like one. Some of the others are like personal security, physical security. personal security, physical security. personal security, physical security. It's actually quite larger in scope than It's actually quite larger in scope than It's actually quite larger in scope than the NCSC's the NCSC's the NCSC's VSA. It's also much more generic. So the VSA. It's also much more generic. So the VSA. It's also much more generic. So the closest thing to the VSA's PIP closest thing to the VSA's PIP closest thing to the VSA's PIP protection criteria is the question does protection criteria is the question does protection criteria is the question does your organization configure the your organization configure the your organization configure the compilation and build processes to compilation and build processes to compilation and build processes to improve executable security. It does not improve executable security. It does not improve executable security. It does not go into more detail than go into more detail than go into more detail than that. What would should someone do in that. What would should someone do in that. What would should someone do in order to actually give a right order to actually give a right order to actually give a right answer? That's actually part of the answer? That's actually part of the answer? That's actually part of the nuance, right? There is no right or nuance, right? There is no right or nuance, right? There is no right or wrong answer here. It's about assessing the open source source opens assessing the open source source opens assessing the open source source opens best practices. This is a program that best practices. This is a program that best practices. This is a program that aims to promote security best practices aims to promote security best practices aims to promote security best practices across the ecosystem. And it also has across the ecosystem. And it also has across the ecosystem. And it also has criteria, right? 143 of them. These are criteria, right? 143 of them. These are criteria, right? 143 of them. These are spread over three tiers. They're badges. spread over three tiers. They're badges. spread over three tiers. They're badges. So there's passing silver and gold So there's passing silver and gold So there's passing silver and gold badges. And they'll sort of build on top badges. And they'll sort of build on top badges. And they'll sort of build on top of each other. you have to fulfill all of each other. you have to fulfill all of each other. you have to fulfill all the criteria for the passing badge the criteria for the passing badge the criteria for the passing badge before you even consider the silver before you even consider the silver before you even consider the silver badge. So projects selfcertify for badge. So projects selfcertify for badge. So projects selfcertify for these. There are some automated tests as these. There are some automated tests as these. There are some automated tests as well that are sort of prefill the well that are sort of prefill the well that are sort of prefill the questionnaire. Um but it's generally questionnaire. Um but it's generally questionnaire. Um but it's generally about project self-certifying based on about project self-certifying based on about project self-certifying based on those criteria. they have to, you know, those criteria. they have to, you know, those criteria. they have to, you know, document some evidence of what they do document some evidence of what they do document some evidence of what they do for that, you know, makes people think for that, you know, makes people think for that, you know, makes people think about what you're doing to actually uh about what you're doing to actually uh about what you're doing to actually uh cover those security best cover those security best cover those security best practices. The OpenSF scorecard on the practices. The OpenSF scorecard on the practices. The OpenSF scorecard on the other hand uh is is a set of automated other hand uh is is a set of automated other hand uh is is a set of automated tests. So, its aim is tests. So, its aim is tests. So, its aim is to allow people to make informed to allow people to make informed to allow people to make informed decisions about a project, right? And if decisions about a project, right? And if decisions about a project, right? And if you're it's great for dependency you're it's great for dependency you're it's great for dependency management, right? If you're using an management, right? If you're using an management, right? If you're using an open source open source open source project, you can run these tests and project, you can run these tests and project, you can run these tests and they give you a score, but it's not the they give you a score, but it's not the they give you a score, but it's not the score itself that's relevant. It's you score itself that's relevant. It's you score itself that's relevant. It's you understanding how that's what the score understanding how that's what the score understanding how that's what the score is composed of. And you could consider is composed of. And you could consider is composed of. And you could consider some criteria to be more important. So some criteria to be more important. So some criteria to be more important. So you can customize a bit as you can customize a bit as you can customize a bit as well. And obviously it's also based on well. And obviously it's also based on well. And obviously it's also based on security best practices. Everything that security best practices. Everything that security best practices. Everything that we're talking about today is So first perspective remember two So first perspective remember two So first perspective remember two perspectives one from the radiated perspectives one from the radiated perspectives one from the radiated environments point of view the other environments point of view the other environments point of view the other from the open source projects point of from the open source projects point of from the open source projects point of view can we combine view can we combine view can we combine that if you're using open source that if you're using open source that if you're using open source software you can't exactly go to your software you can't exactly go to your software you can't exactly go to your open source project and say hey could open source project and say hey could open source project and say hey could you please fill in this questionnaire you please fill in this questionnaire you please fill in this questionnaire for me it's not going to happen and if for me it's not going to happen and if for me it's not going to happen and if you're in you know different you're in you know different you're in you know different um Yeah, if you're in different um Yeah, if you're in different um Yeah, if you're in different countries, you're going to have to countries, you're going to have to countries, you're going to have to conform to different regulations and conform to different regulations and conform to different regulations and there's different guidelines about what there's different guidelines about what there's different guidelines about what kind of questions you're supposed to ask kind of questions you're supposed to ask kind of questions you're supposed to ask your supply chain your supply chain your supply chain and nobody's going to do and nobody's going to do and nobody's going to do that. But if you're not doing that and that. But if you're not doing that and that. But if you're not doing that and you are nevertheless you are nevertheless you are nevertheless assessing part of your supply chain assessing part of your supply chain assessing part of your supply chain using these guidelines, it means it using these guidelines, it means it using these guidelines, it means it leads to an inconsistency into how leads to an inconsistency into how leads to an inconsistency into how you're treating different parts of your you're treating different parts of your you're treating different parts of your supply chain. And this makes it really supply chain. And this makes it really supply chain. And this makes it really hard to hard to hard to actually consider risk, compare risk. This is not the solution. This is a This is not the solution. This is a This is not the solution. This is a potential proposal for a potential proposal for a potential proposal for a solution. Step one, we can actually take solution. Step one, we can actually take solution. Step one, we can actually take any regulatory tools or standards and any regulatory tools or standards and any regulatory tools or standards and map them to open source software tools. map them to open source software tools. map them to open source software tools. And I've learned today from Chrome that And I've learned today from Chrome that And I've learned today from Chrome that there's that um crosswalk there's that um crosswalk there's that um crosswalk matrix. I can't remember the name. Wrote matrix. I can't remember the name. Wrote matrix. I can't remember the name. Wrote it down. But as part of security it down. But as part of security it down. But as part of security baseline project, he's actually started baseline project, he's actually started baseline project, he's actually started to map um criteria in the baseline to map um criteria in the baseline to map um criteria in the baseline project. also taking in more stuff from project. also taking in more stuff from project. also taking in more stuff from the best practices program as well and the best practices program as well and the best practices program as well and map these to a set of different map these to a set of different map these to a set of different regulatory standards so that if you're regulatory standards so that if you're regulatory standards so that if you're fulfilling certain criteria you're also fulfilling certain criteria you're also fulfilling certain criteria you're also fulfilling criteria from those standards fulfilling criteria from those standards fulfilling criteria from those standards as well I think that is a brilliant way as well I think that is a brilliant way as well I think that is a brilliant way to approach this right rather than to approach this right rather than to approach this right rather than creating a new standard and saying hey creating a new standard and saying hey creating a new standard and saying hey let's uh have a 15th standard um that is let's uh have a 15th standard um that is let's uh have a 15th standard um that is now applicable to open source and oh now applicable to open source and oh now applicable to open source and oh wait we need another one for this other wait we need another one for this other wait we need another one for this other country another one for this other country another one for this other country another one for this other country. It is much easier to create a country. It is much easier to create a country. It is much easier to create a mapping between existing mapping between existing mapping between existing things. Step two um fun things. Step two um fun things. Step two um fun one. Can we get a stamp of approval from one. Can we get a stamp of approval from one. Can we get a stamp of approval from regulatory agencies? regulatory agencies? regulatory agencies? Can we ask regulatory agencies, are Can we ask regulatory agencies, are Can we ask regulatory agencies, are these these these mappings good enough for an organization mappings good enough for an organization mappings good enough for an organization to prove that they're doing what they're to prove that they're doing what they're to prove that they're doing what they're supposed to be doing when they're using supposed to be doing when they're using supposed to be doing when they're using project open source project open source project open source projects projects projects and again earlier today the Eclipse and again earlier today the Eclipse and again earlier today the Eclipse Foundation um is developing a standard Foundation um is developing a standard Foundation um is developing a standard for the CR well a standard that open for the CR well a standard that open for the CR well a standard that open source projects can adhere to that source projects can adhere to that source projects can adhere to that covers criteria for vulnerability covers criteria for vulnerability covers criteria for vulnerability management according the CRA and they management according the CRA and they management according the CRA and they are then passing the standard on are then passing the standard on are then passing the standard on to the European Commission to to the European Commission to to the European Commission to consider in their consider in their consider in their guidelines. So that would be a brilliant guidelines. So that would be a brilliant guidelines. So that would be a brilliant type of stamp of approval from my point type of stamp of approval from my point type of stamp of approval from my point of view on how to actually address this. of view on how to actually address this. of view on how to actually address this. Right? Step three is the easiest by far. Right? Step three is the easiest by far. Right? Step three is the easiest by far. If you've got step one and two, then all If you've got step one and two, then all If you've got step one and two, then all you have to do is keep track of this and you have to do is keep track of this and you have to do is keep track of this and continuously keep track of this because continuously keep track of this because continuously keep track of this because this is not a one-time exercise, this is not a one-time exercise, this is not a one-time exercise, right? What you have to do is you have right? What you have to do is you have right? What you have to do is you have to keep track of what you're doing. Make to keep track of what you're doing. Make to keep track of what you're doing. Make sure that you're continuing to follow sure that you're continuing to follow sure that you're continuing to follow the best the best the best practices and then publish that data and practices and then publish that data and practices and then publish that data and record it and then everyone can use it. record it and then everyone can use it. record it and then everyone can use it. And this allows a level of And this allows a level of And this allows a level of transparency that transparency that transparency that is allows everyone to make informed is allows everyone to make informed is allows everyone to make informed decisions at the end of the day because decisions at the end of the day because decisions at the end of the day because that's what it really is all about. Not that's what it really is all about. Not that's what it really is all about. Not about comparing projects one to another. about comparing projects one to another. about comparing projects one to another. Are you better than me? or because Are you better than me? or because Are you better than me? or because you're, you know, following more of you're, you know, following more of you're, you know, following more of these best practices, but rather about these best practices, but rather about these best practices, but rather about allowing the user to allowing the user to allowing the user to understand what it is that they're understand what it is that they're understand what it is that they're actually using. Others have already proven that a using. Others have already proven that a using. Others have already proven that a mapping is possible, right? But I've mapping is possible, right? But I've mapping is possible, right? But I've also taken the NCSVSA also taken the NCSVSA also taken the NCSVSA um and CESOS vendor CRM template and um and CESOS vendor CRM template and um and CESOS vendor CRM template and tried to map them to OpenSF best tried to map them to OpenSF best tried to map them to OpenSF best practices criteria and OpenSF scorecard practices criteria and OpenSF scorecard practices criteria and OpenSF scorecard tests. And this is what I've come up tests. And this is what I've come up tests. And this is what I've come up with. So it seems that 32 out of 58 with. So it seems that 32 out of 58 with. So it seems that 32 out of 58 could actually be directly mapped. 26 could actually be directly mapped. 26 could actually be directly mapped. 26 not so much. And for CISA's not so much. And for CISA's not so much. And for CISA's questions, 13 out of 16 could be questions, 13 out of 16 could be questions, 13 out of 16 could be directly mapped to these criteria. Some directly mapped to these criteria. Some directly mapped to these criteria. Some of them are automatable to open SSF of them are automatable to open SSF of them are automatable to open SSF scorecard tests. So, I'm not going to bore you to tests. So, I'm not going to bore you to tests. So, I'm not going to bore you to death with the mapping. I do have these death with the mapping. I do have these death with the mapping. I do have these in my slides here. If you um do enjoy in my slides here. If you um do enjoy in my slides here. If you um do enjoy falling to sleep while reading slides, falling to sleep while reading slides, falling to sleep while reading slides, then feel free to do this at home. Um, then feel free to do this at home. Um, then feel free to do this at home. Um, so I'm going to completely skip over so I'm going to completely skip over so I'm going to completely skip over these. When did you see? Ah, there we these. When did you see? Ah, there we these. When did you see? Ah, there we go. Um, I'm going to stop here for a go. Um, I'm going to stop here for a go. Um, I'm going to stop here for a second just there. These are the hip second just there. These are the hip second just there. These are the hip protection um measures that I mentioned protection um measures that I mentioned protection um measures that I mentioned earlier um in one of the first slides. earlier um in one of the first slides. earlier um in one of the first slides. So we've So we've So we've got from the NCSE VSA, we've got several got from the NCSE VSA, we've got several got from the NCSE VSA, we've got several binary protection criteria. Um key binary protection criteria. Um key binary protection criteria. Um key protection, stack protections, data protection, stack protections, data protection, stack protections, data execution protection, ASLR, memory execution protection, ASLR, memory execution protection, ASLR, memory mapping mapping mapping protections. Um basically these all fall protections. Um basically these all fall protections. Um basically these all fall into that CES question of what are you into that CES question of what are you into that CES question of what are you doing to protect your executable kind of doing to protect your executable kind of doing to protect your executable kind of thing. On the OpenSF best practices, thing. On the OpenSF best practices, thing. On the OpenSF best practices, it's actually less prescriptive. is it's actually less prescriptive. is it's actually less prescriptive. is actually a bit more generic, a bit more actually a bit more generic, a bit more actually a bit more generic, a bit more like CISA really. Hardening mechanisms like CISA really. Hardening mechanisms like CISA really. Hardening mechanisms must be used in the software produced by must be used in the software produced by must be used in the software produced by the project so that software defects are the project so that software defects are the project so that software defects are less likely to result in security less likely to result in security less likely to result in security vulnerabilities. So it's most definitely vulnerabilities. So it's most definitely vulnerabilities. So it's most definitely in the same spirit, right? And the fact in the same spirit, right? And the fact in the same spirit, right? And the fact is that you're not going to have the is that you're not going to have the is that you're not going to have the left hand side the VSA criteria left hand side the VSA criteria left hand side the VSA criteria applicable to all kind of projects. So, applicable to all kind of projects. So, applicable to all kind of projects. So, you know, if you're using a dynamic you know, if you're using a dynamic you know, if you're using a dynamic language such as Python, you're not language such as Python, you're not language such as Python, you're not exactly concerned about heat protections exactly concerned about heat protections exactly concerned about heat protections or stack protections for that or stack protections for that or stack protections for that matter. So, let me continue skipping matter. So, let me continue skipping matter. So, let me continue skipping over these. Okay, now to the fun these. Okay, now to the fun these. Okay, now to the fun part. What can we learn? What can open part. What can we learn? What can open part. What can we learn? What can open source projects learn from these? So remember there were 26 NCS u NCSC VSA So remember there were 26 NCS u NCSC VSA So remember there were 26 NCS u NCSC VSA criteria items that I could not directly criteria items that I could not directly criteria items that I could not directly map to open SSF best practices or map to open SSF best practices or map to open SSF best practices or scorecard scorecard scorecard tests. Are these actually relevant? That tests. Are these actually relevant? That tests. Are these actually relevant? That is the question. Are these simply is the question. Are these simply is the question. Are these simply outside the scope of what you know open outside the scope of what you know open outside the scope of what you know open source the open source ecosystem is source the open source ecosystem is source the open source ecosystem is about or can open source projects about or can open source projects about or can open source projects actually say oh hey that might actually actually say oh hey that might actually actually say oh hey that might actually be interesting to us I've grouped them based on um well us I've grouped them based on um well us I've grouped them based on um well sort of a logical flow right um trying sort of a logical flow right um trying sort of a logical flow right um trying to make sense of them to make sense of them to make sense of them together and these are a bunch of together and these are a bunch of together and these are a bunch of categories that I've named categories that I've named categories that I've named So those names do not come from the So those names do not come from the So those names do not come from the actual regulatory actual regulatory actual regulatory tool. Four criteria items for security tool. Four criteria items for security tool. Four criteria items for security declaration. Um just going to quickly declaration. Um just going to quickly declaration. Um just going to quickly read through them. Product life cycle read through them. Product life cycle read through them. Product life cycle process. The vendor clear identifies process. The vendor clear identifies process. The vendor clear identifies life cycle for each product. Development life cycle for each product. Development life cycle for each product. Development processes and feature development. There processes and feature development. There processes and feature development. There is one primary release train of the is one primary release train of the is one primary release train of the product. International release and product. International release and product. International release and foring. The vendor maintains a single foring. The vendor maintains a single foring. The vendor maintains a single global version line for each product. global version line for each product. global version line for each product. there are minimal number of other there are minimal number of other there are minimal number of other versions or ideally none. Well, good versions or ideally none. Well, good versions or ideally none. Well, good luck stopping open source projects from luck stopping open source projects from luck stopping open source projects from forking, right? Um or thinking that's a forking, right? Um or thinking that's a forking, right? Um or thinking that's a good idea for that matter. Security good idea for that matter. Security good idea for that matter. Security improvement and secure execution improvement and secure execution improvement and secure execution environment. The vendor has plans to environment. The vendor has plans to environment. The vendor has plans to continue to improve its products continue to improve its products continue to improve its products security. Now, that's a very fun one, security. Now, that's a very fun one, security. Now, that's a very fun one, right? Has plans. What plans? Not really defined. I shouldn't have skipped to defined. I shouldn't have skipped to defined. I shouldn't have skipped to this one. this one. this one. This This This is my illustration of the fact that some is my illustration of the fact that some is my illustration of the fact that some of these are really applicable to open of these are really applicable to open of these are really applicable to open source projects right I mean life cycle source projects right I mean life cycle source projects right I mean life cycle communicating your life cycle to your communicating your life cycle to your communicating your life cycle to your users is users is users is important whichever that is this is a important whichever that is this is a important whichever that is this is a screenshot from Python's website about screenshot from Python's website about screenshot from Python's website about its release life cycle so how long each its release life cycle so how long each its release life cycle so how long each release is supported for how long it release is supported for how long it release is supported for how long it receives security updates receives security updates receives security updates for I'm not saying that open source for I'm not saying that open source for I'm not saying that open source projects are now supposed to have stable projects are now supposed to have stable projects are now supposed to have stable releases that they provide security releases that they provide security releases that they provide security maintenance for a number of maintenance for a number of maintenance for a number of years because that's unfeasible but years because that's unfeasible but years because that's unfeasible but communicating what you're doing what communicating what you're doing what communicating what you're doing what users expectations are supposed to be users expectations are supposed to be users expectations are supposed to be that is the important thing so that that is the important thing so that that is the important thing so that communication can simply be hey I'm communication can simply be hey I'm communication can simply be hey I'm going to fix all vulnerabilities in the going to fix all vulnerabilities in the going to fix all vulnerabilities in the latest release only that's where you latest release only that's where you latest release only that's where you find it if you want no known find it if you want no known find it if you want no known vulnerabilities in your version of my vulnerabilities in your version of my vulnerabilities in your version of my product. You have to use the latest product. You have to use the latest product. You have to use the latest release and that is what a lot of release and that is what a lot of release and that is what a lot of projects actually use and that's projects actually use and that's projects actually use and that's perfectly fine but it's very useful to perfectly fine but it's very useful to perfectly fine but it's very useful to communicate that. The reason it's useful communicate that. The reason it's useful communicate that. The reason it's useful to communicate that is education. to communicate that is education. to communicate that is education. Education of the user. So users may not Education of the user. So users may not Education of the user. So users may not actually realize that that is the fact. actually realize that that is the fact. actually realize that that is the fact. As silly as that might As silly as that might As silly as that might sound, by simply stating that you are sound, by simply stating that you are sound, by simply stating that you are automatically educating people that you automatically educating people that you automatically educating people that you need to update because otherwise the need to update because otherwise the need to update because otherwise the older versions might have older versions might have older versions might have vulnerabilities in vulnerabilities in vulnerabilities in them. and is in my opinion something them. and is in my opinion something them. and is in my opinion something really important to do. do. do. Seven, this is what I was saying Seven, this is what I was saying Seven, this is what I was saying earlier, communication, communicating earlier, communication, communicating earlier, communication, communicating expectations. This is a really great expectations. This is a really great expectations. This is a really great benefit of having a security declaration benefit of having a security declaration benefit of having a security declaration that talks about how you're handling that talks about how you're handling that talks about how you're handling security. security. security. There is another benefit to open source There is another benefit to open source There is another benefit to open source projects that doesn't really apply to projects that doesn't really apply to projects that doesn't really apply to closed source projects and that is open closed source projects and that is open closed source projects and that is open source source source projects get contributions right by projects get contributions right by projects get contributions right by definition by being explicit about what definition by being explicit about what definition by being explicit about what how you treat how you treat how you treat security, how you handle it. It also security, how you handle it. It also security, how you handle it. It also sets expectations accordingly to all of sets expectations accordingly to all of sets expectations accordingly to all of the contributors. It makes people think. the contributors. It makes people think. the contributors. It makes people think. It makes people handle things the way It makes people handle things the way It makes people handle things the way you want them to be handled as well. So you want them to be handled as well. So you want them to be handled as well. So I think that's a really good point. And I think that's a really good point. And I think that's a really good point. And just to prove that security declarations just to prove that security declarations just to prove that security declarations are really useful in the context of open are really useful in the context of open are really useful in the context of open source projects, um the OpenSF best source projects, um the OpenSF best source projects, um the OpenSF best practices passing badge has these practices passing badge has these practices passing badge has these criteria items which I would say fall criteria items which I would say fall criteria items which I would say fall under the category of security under the category of security under the category of security declaration. The project must have at declaration. The project must have at declaration. The project must have at least one primary developer who knows least one primary developer who knows least one primary developer who knows how to design secure software and at how to design secure software and at how to design secure software and at least one of the project's primary least one of the project's primary least one of the project's primary developers must know of a common kind of developers must know of a common kind of developers must know of a common kind of common kinds of errors that lead to common kinds of errors that lead to common kinds of errors that lead to vulnerabilities in this kind of software vulnerabilities in this kind of software vulnerabilities in this kind of software as well as at least one method to as well as at least one method to as well as at least one method to counter or mitigate each of them. So is counter or mitigate each of them. So is counter or mitigate each of them. So is a security declaration right saying that a security declaration right saying that a security declaration right saying that you'll be doing that is a security you'll be doing that is a security you'll be doing that is a security declaration. The other ones declaration. The other ones declaration. The other ones uh are also security declarations. uh are also security declarations. uh are also security declarations. Talking about you know I don't want to Talking about you know I don't want to Talking about you know I don't want to have multiple release trains because have multiple release trains because have multiple release trains because that means handling vulnerabilities is that means handling vulnerabilities is that means handling vulnerabilities is going to be more going to be more going to be more difficult is also about having a difficult is also about having a difficult is also about having a security declaration or I want to have security declaration or I want to have security declaration or I want to have just these release traits because it just these release traits because it just these release traits because it makes sense for my project. That's also makes sense for my project. That's also makes sense for my project. That's also fine. Next one, code quality. Um, unsafe Next one, code quality. Um, unsafe Next one, code quality. Um, unsafe functions. So again, these are from the functions. So again, these are from the functions. So again, these are from the NCSSE VSA. There are no unsafe functions NCSSE VSA. There are no unsafe functions NCSSE VSA. There are no unsafe functions used within the vendor's release code. used within the vendor's release code. used within the vendor's release code. Redundant and duplicate code. The vendor Redundant and duplicate code. The vendor Redundant and duplicate code. The vendor source tree is maintained to a level source tree is maintained to a level source tree is maintained to a level that there is a limited redundant or that there is a limited redundant or that there is a limited redundant or duplicate code. The vendor source tree duplicate code. The vendor source tree duplicate code. The vendor source tree is maintained. No code complexity is is maintained. No code complexity is is maintained. No code complexity is minimized. And there are nice comments minimized. And there are nice comments minimized. And there are nice comments throughout it like pretty much what throughout it like pretty much what throughout it like pretty much what every developer wants, right? every developer wants, right? every developer wants, right? So I mean it should come as no So I mean it should come as no So I mean it should come as no surprise the interesting thing is when I surprise the interesting thing is when I surprise the interesting thing is when I search well does code complexity search well does code complexity search well does code complexity actually is actually is it actually actually is actually is it actually actually is actually is it actually relevant to security of I've found some relevant to security of I've found some relevant to security of I've found some interesting papers I've linked to one of interesting papers I've linked to one of interesting papers I've linked to one of them there that seems to correlate code them there that seems to correlate code them there that seems to correlate code complexity with the number of complexity with the number of complexity with the number of vulnerabilities now it makes intuitive vulnerabilities now it makes intuitive vulnerabilities now it makes intuitive sense right the more complex your code sense right the more complex your code sense right the more complex your code base is the easier it is for things to base is the easier it is for things to base is the easier it is for things to slip through. The easier it is to not slip through. The easier it is to not slip through. The easier it is to not quite understand the way something some quite understand the way something some quite understand the way something some part some component interacts with part some component interacts with part some component interacts with another component in a different part of another component in a different part of another component in a different part of your code base and that can lead to your code base and that can lead to your code base and that can lead to vulnerabilities. So code vulnerabilities. So code vulnerabilities. So code complexity bad a benefit to open source projects bad a benefit to open source projects bad a benefit to open source projects again thinking about contributors is again thinking about contributors is again thinking about contributors is well code quality means that people are well code quality means that people are well code quality means that people are more likely to contribute to your more likely to contribute to your more likely to contribute to your project right because it is obviously project right because it is obviously project right because it is obviously much harder if your code is complex or much harder if your code is complex or much harder if your code is complex or if your code is hard to read or it if your code is hard to read or it if your code is hard to read or it doesn't have comments. it's not going to doesn't have comments. it's not going to doesn't have comments. it's not going to encourage people to contribute to it. And I do actually love that it. And I do actually love that it. And I do actually love that criteria. Do not use any unsafe criteria. Do not use any unsafe criteria. Do not use any unsafe functions. Doesn't actually say what functions. Doesn't actually say what functions. Doesn't actually say what unsafe functions are. Um but you know, unsafe functions are. Um but you know, unsafe functions are. Um but you know, think of the term unsafe function like think of the term unsafe function like think of the term unsafe function like don't use them. But it's actually don't use them. But it's actually don't use them. But it's actually important to define what is an unsafe important to define what is an unsafe important to define what is an unsafe function. I don't think there is function. I don't think there is function. I don't think there is actually a clear standard of that and by actually a clear standard of that and by actually a clear standard of that and by that I mean you will find documentation that I mean you will find documentation that I mean you will find documentation that says oh do not use this function or that says oh do not use this function or that says oh do not use this function or this function is not safe or this this function is not safe or this this function is not safe or this function should not be used from a um I function should not be used from a um I function should not be used from a um I know this function is async sig safe know this function is async sig safe know this function is async sig safe this function isn't or or do not use at this function isn't or or do not use at this function isn't or or do not use at all in all in all in Python but do you have these grouped Python but do you have these grouped Python but do you have these grouped together to actually offer guidance to together to actually offer guidance to together to actually offer guidance to the developers. I haven't actually found the developers. I haven't actually found the developers. I haven't actually found this kind this kind this kind of material if you of material if you of material if you like. So here's my answer to what an like. So here's my answer to what an like. So here's my answer to what an unsafe function is. Uh that's a very unsafe function is. Uh that's a very unsafe function is. Uh that's a very short Python script. It simply runs eval short Python script. It simply runs eval short Python script. It simply runs eval on the first argument given to it. on the first argument given to it. on the first argument given to it. Um and that's the output of the bandit Um and that's the output of the bandit Um and that's the output of the bandit tool. So if you don't know what the tool. So if you don't know what the tool. So if you don't know what the bandit tool is, is it's a static code. bandit tool is, is it's a static code. bandit tool is, is it's a static code. analysis tool for Python and it analysis tool for Python and it analysis tool for Python and it specifically emit security has a bunch specifically emit security has a bunch specifically emit security has a bunch of criteria and all of these are then of criteria and all of these are then of criteria and all of these are then reported and one of the criteria items reported and one of the criteria items reported and one of the criteria items is a blacklist of that's exactly why is a blacklist of that's exactly why is a blacklist of that's exactly why it's called it's called it's called uh B307 blacklist use of possibly uh B307 blacklist use of possibly uh B307 blacklist use of possibly insecure function as you can see the insecure function as you can see the insecure function as you can see the eval function is picked up by it. So eval function is picked up by it. So eval function is picked up by it. So this is an example of a tool that has this is an example of a tool that has this is an example of a tool that has its own list of what unsafe functions its own list of what unsafe functions its own list of what unsafe functions are. I wouldn't be surprised if this are. I wouldn't be surprised if this are. I wouldn't be surprised if this list is not necessarily the same list list is not necessarily the same list list is not necessarily the same list that another SCA tool has. All right, moving has. All right, moving has. All right, moving on. Segregation of development on. Segregation of development on. Segregation of development environment. environment. environment. Development environment is segregated Development environment is segregated Development environment is segregated from corporate network and protected from corporate network and protected from corporate network and protected from the internet and testing rigor from the internet and testing rigor from the internet and testing rigor developers cannot modify the build developers cannot modify the build developers cannot modify the build environment to hide or disregard build environment to hide or disregard build environment to hide or disregard build issues. So what do you reckon? Does this issues. So what do you reckon? Does this issues. So what do you reckon? Does this apply to open source projects? Yes. No. Any thoughts? projects? Yes. No. Any thoughts? projects? Yes. No. Any thoughts? Everyone fell asleep. Too much legislation was the corporate network, legislation was the corporate network, legislation was the corporate network, right? I mean the wording just does not right? I mean the wording just does not right? I mean the wording just does not apply apply apply but look behind the words right and look but look behind the words right and look but look behind the words right and look at the spirit of it. I would say this is at the spirit of it. I would say this is at the spirit of it. I would say this is looking at list privilege which I think looking at list privilege which I think looking at list privilege which I think well I hope we can all agree is one of well I hope we can all agree is one of well I hope we can all agree is one of the most important principles in the most important principles in the most important principles in security and this is increasingly security and this is increasingly security and this is increasingly important considering that there are important considering that there are important considering that there are supply chain attacks on open source supply chain attacks on open source supply chain attacks on open source projects happening and happening more frequently an open source project can be frequently an open source project can be frequently an open source project can be targeted targeted targeted because of two reasons or two two angles because of two reasons or two two angles because of two reasons or two two angles if you if you if you like. One, it could be affected as part like. One, it could be affected as part like. One, it could be affected as part of its own supply chain. So we've of its own supply chain. So we've of its own supply chain. So we've recently had a rise in GitHub actions recently had a rise in GitHub actions recently had a rise in GitHub actions being abused to do just that. being abused to do just that. being abused to do just that. So this is not a reflection on GitHub So this is not a reflection on GitHub So this is not a reflection on GitHub actions, but they are part of the supply actions, but they are part of the supply actions, but they are part of the supply chain of projects and projects need to chain of projects and projects need to chain of projects and projects need to realize that offering using different realize that offering using different realize that offering using different tools result tools result tools result in risk. in risk. in risk. Educating projects about what they are Educating projects about what they are Educating projects about what they are and how these are supposed to be and how these are supposed to be and how these are supposed to be configured in a way that that risk is configured in a way that that risk is configured in a way that that risk is reduced is part reduced is part reduced is part of well good practices if you ask of well good practices if you ask of well good practices if you ask me. The other angle is we can have open me. The other angle is we can have open me. The other angle is we can have open source projects targeted directly as source projects targeted directly as source projects targeted directly as part of a larger supply chain attack part of a larger supply chain attack part of a larger supply chain attack because that open source project is because that open source project is because that open source project is um included used by what the actual um included used by what the actual um included used by what the actual target of the attack is. That is not target of the attack is. That is not target of the attack is. That is not unreasonable or unheard of for that unreasonable or unheard of for that unreasonable or unheard of for that matter at all. Any examples? I think the most prominent one was XZ I think the most prominent one was XZ I think the most prominent one was XZ from last year from last year from last year but but but okay now from a corporate point of view okay now from a corporate point of view okay now from a corporate point of view when you're working with intellectual when you're working with intellectual when you're working with intellectual property that's property that's property that's confidential confident I said confidential confident I said confidential confident I said confidential confidentiality is confidential confidentiality is confidential confidentiality is obviously the big thing when you're obviously the big thing when you're obviously the big thing when you're working with open source confidentiality working with open source confidentiality working with open source confidentiality of your codebase is not a concern but of your codebase is not a concern but of your codebase is not a concern but integrity integrity integrity is it is still something to is it is still something to is it is still something to consider. So my point is that those consider. So my point is that those consider. So my point is that those criteria items or that we've seen be the criteria items or that we've seen be the criteria items or that we've seen be the other way around we've seen before can other way around we've seen before can other way around we've seen before can be interpreted from the point of view of be interpreted from the point of view of be interpreted from the point of view of protecting code integrity. So bear with me here. integrity. So bear with me here. integrity. So bear with me here. Security best practices. We only have a Security best practices. We only have a Security best practices. We only have a couple more to go. Actually, there's not couple more to go. Actually, there's not couple more to go. Actually, there's not that many run board. No. Okay. List privilege code. The vendor Okay. List privilege code. The vendor Okay. List privilege code. The vendor follows a list privilege methodology. We follows a list privilege methodology. We follows a list privilege methodology. We mentioned this before when developing mentioned this before when developing mentioned this before when developing and executing code within their and executing code within their and executing code within their products. No undocumented administrative products. No undocumented administrative products. No undocumented administrative mechanisms, hard-coded passwords or mechanisms, hard-coded passwords or mechanisms, hard-coded passwords or access keys. Now, good luck hiding these access keys. Now, good luck hiding these access keys. Now, good luck hiding these in open source projects, right? No in open source projects, right? No in open source projects, right? No undocumented administrative features. undocumented administrative features. undocumented administrative features. Um, no default credentials. No default Um, no default credentials. No default Um, no default credentials. No default passwords are left on the device after passwords are left on the device after passwords are left on the device after initial setup and product hardening. The initial setup and product hardening. The initial setup and product hardening. The product can eas be easily hardened into product can eas be easily hardened into product can eas be easily hardened into a secure configuration. These are best practices configuration. These are best practices configuration. These are best practices generically speaking, right? I mean some generically speaking, right? I mean some generically speaking, right? I mean some of them like you can't hide a password of them like you can't hide a password of them like you can't hide a password and not expect everyone to be able to and not expect everyone to be able to and not expect everyone to be able to find it um like a back door into an open find it um like a back door into an open find it um like a back door into an open source project unless you like obfiscate source project unless you like obfiscate source project unless you like obfiscate things. things. things. Anyway, um but they make a lot of sense. Anyway, um but they make a lot of sense. Anyway, um but they make a lot of sense. They make a lot of sense because you They make a lot of sense because you They make a lot of sense because you know there's a lot of hype between know there's a lot of hype between know there's a lot of hype between behind this secure by default term. behind this secure by default term. behind this secure by default term. Um but the fact Um but the fact Um but the fact is when a deployment is very rarely is when a deployment is very rarely is when a deployment is very rarely hardened by taking the full hardened by taking the full hardened by taking the full documentation of the product, documentation of the product, documentation of the product, understanding how different understanding how different understanding how different configuration options fit together configuration options fit together configuration options fit together and choosing your configuration options and choosing your configuration options and choosing your configuration options that are best for security. People want that are best for security. People want that are best for security. People want things to things to things to work, right? and they get something to work, right? and they get something to work, right? and they get something to work and they might need to customize a work and they might need to customize a work and they might need to customize a few bits here and there, but security few bits here and there, but security few bits here and there, but security and even if they want to harden their and even if they want to harden their and even if they want to harden their configuration, they're not necessarily configuration, they're not necessarily configuration, they're not necessarily going to dig and it's going to be a lot going to dig and it's going to be a lot going to dig and it's going to be a lot of effort to dig deep into all of the of effort to dig deep into all of the of effort to dig deep into all of the possible configuration options. So possible configuration options. So possible configuration options. So secure by default is best for the end secure by default is best for the end secure by default is best for the end user. An interesting benefit in my point user. An interesting benefit in my point user. An interesting benefit in my point of view of a secure by default approach of view of a secure by default approach of view of a secure by default approach is that it means that the deployments is that it means that the deployments is that it means that the deployments configurations are actually a bit more configurations are actually a bit more configurations are actually a bit more harmonized. It means that you don't have harmonized. It means that you don't have harmonized. It means that you don't have different kinds of configuration spread different kinds of configuration spread different kinds of configuration spread around. Whether you're talking about you around. Whether you're talking about you around. Whether you're talking about you one organization having different one organization having different one organization having different deployments or if you're talking about a deployments or if you're talking about a deployments or if you're talking about a project having to support different use project having to support different use project having to support different use cases because of very different types of cases because of very different types of cases because of very different types of configurations. So having more harmony configurations. So having more harmony configurations. So having more harmony between these would be beneficial. For those that do actually want hardened For those that do actually want hardened For those that do actually want hardened configurations, it is very useful to configurations, it is very useful to configurations, it is very useful to have documentation that clearly have documentation that clearly have documentation that clearly specifies this. Um, tomorrow I actually specifies this. Um, tomorrow I actually specifies this. Um, tomorrow I actually have another talk on lessons learned have another talk on lessons learned have another talk on lessons learned from cononical zone secure software from cononical zone secure software from cononical zone secure software development life cycle processes. And development life cycle processes. And development life cycle processes. And one of the things that um we asked all one of the things that um we asked all one of the things that um we asked all of the projects um under Clonical's of the projects um under Clonical's of the projects um under Clonical's umbrella to do is to privatize security umbrella to do is to privatize security umbrella to do is to privatize security documentation and within that security documentation and within that security documentation and within that security documentation we identified certain documentation we identified certain documentation we identified certain items which are useful to document and items which are useful to document and items which are useful to document and hardening configurations like what hardening configurations like what hardening configurations like what specific knobs are relevant to security specific knobs are relevant to security specific knobs are relevant to security and how they impact usability or how and how they impact usability or how and how they impact usability or how they impact security obviously is the they impact security obviously is the they impact security obviously is the thing that we've asked all projects to thing that we've asked all projects to thing that we've asked all projects to do. So this kind do. So this kind do. So this kind of configuration is useful because it of configuration is useful because it of configuration is useful because it allows users to go straight to it, allows users to go straight to it, allows users to go straight to it, right? Instead of having to read all of right? Instead of having to read all of right? Instead of having to read all of the manual if they're interested like I the manual if they're interested like I the manual if they're interested like I want to get it to work and then I want want to get it to work and then I want want to get it to work and then I want to write it. Getting it to work is to write it. Getting it to work is to write it. Getting it to work is easier. I don't want to have to read easier. I don't want to have to read easier. I don't want to have to read through the entire manual to understand through the entire manual to understand through the entire manual to understand everything in order to harden my everything in order to harden my everything in order to harden my deployment. So having specific sections deployment. So having specific sections deployment. So having specific sections for that is very beneficial beneficial beneficial testing security functionality is testing security functionality is testing security functionality is tested and negative testing. These are interesting, right? testing. These are interesting, right? testing. These are interesting, right? Because Because Because often testing is focused on things that often testing is focused on things that often testing is focused on things that work, right? Things that users actually work, right? Things that users actually work, right? Things that users actually do, the flows, the data flows, the use do, the flows, the data flows, the use do, the flows, the data flows, the use cases that are cases that are cases that are normal. But your security actually normal. But your security actually normal. But your security actually relies relies relies on the exceptional data flows. on the exceptional data flows. on the exceptional data flows. So having explicit tests to make sure So having explicit tests to make sure So having explicit tests to make sure that any sort of security check, any that any sort of security check, any that any sort of security check, any sort of um validation is still there sort of um validation is still there sort of um validation is still there after features are introduced or after after features are introduced or after after features are introduced or after bugs are fixed. Ensures there are no bugs are fixed. Ensures there are no bugs are fixed. Ensures there are no regressions from the point of view of regressions from the point of view of regressions from the point of view of security, not from the point of view of security, not from the point of view of security, not from the point of view of of usability. And you know users use the happy paths And you know users use the happy paths And you know users use the happy paths but it's the attackers that actually use but it's the attackers that actually use but it's the attackers that actually use the the the error paths because this is what is error paths because this is what is error paths because this is what is natural to want to exploit right that is natural to want to exploit right that is natural to want to exploit right that is how you exploit software by following how you exploit software by following how you exploit software by following the unusual code paths paths paths response Issue comprehension. For response Issue comprehension. For response Issue comprehension. For issues, the vendor identifies the root issues, the vendor identifies the root issues, the vendor identifies the root cause cause cause analysis and issue transparency. The analysis and issue transparency. The analysis and issue transparency. The vendor is transparent about their vendor is transparent about their vendor is transparent about their patching of security patching of security patching of security issues. Here's another one. There's a issues. Here's another one. There's a issues. Here's another one. There's a PERT team within the organization. You might think that it's hard to You might think that it's hard to You might think that it's hard to actually have a piece or team within a actually have a piece or team within a actually have a piece or team within a small open source small open source small open source project, but it's again it's not about project, but it's again it's not about project, but it's again it's not about letter here. It's about having a having letter here. It's about having a having letter here. It's about having a having a set of processes that make sense and a set of processes that make sense and a set of processes that make sense and that are that are that are coherent and that are reproducible and coherent and that are reproducible and coherent and that are reproducible and that allow people to not run around like that allow people to not run around like that allow people to not run around like headless chicken whenever there's a huge headless chicken whenever there's a huge headless chicken whenever there's a huge vulnerability being reported to them not vulnerability being reported to them not vulnerability being reported to them not knowing how to handle it. The fact The fact The fact is open source from my experience open is open source from my experience open is open source from my experience open source projects care deeply about source projects care deeply about source projects care deeply about security. So they will be affected when security. So they will be affected when security. So they will be affected when there is a serious vulnerability there is a serious vulnerability there is a serious vulnerability reported them. They will want to get it reported them. They will want to get it reported them. They will want to get it fixed. fixed. fixed. But we need to shift the way But we need to shift the way But we need to shift the way vulnerabilities are handled from being vulnerabilities are handled from being vulnerabilities are handled from being an exceptional thing that makes people an exceptional thing that makes people an exceptional thing that makes people panic to being business as usual because panic to being business as usual because panic to being business as usual because it is business as usual because it is business as usual because it is business as usual because vulnerabilities exist. It's just a fact vulnerabilities exist. It's just a fact vulnerabilities exist. It's just a fact unfortunately and we don't have to treat unfortunately and we don't have to treat unfortunately and we don't have to treat them as them as them as failures just as failures just as failures just as consequences consequences consequences of technology. Right. The root cause thing is I hope Right. The root cause thing is I hope Right. The root cause thing is I hope pretty obvious in the open source case. pretty obvious in the open source case. pretty obvious in the open source case. If you don't address the root cause and If you don't address the root cause and If you don't address the root cause and you know you come with a patch and that you know you come with a patch and that you know you come with a patch and that patch clearly references a patch clearly references a patch clearly references a vulnerability and it doesn't address the vulnerability and it doesn't address the vulnerability and it doesn't address the root cause, it's going to take minutes root cause, it's going to take minutes root cause, it's going to take minutes before it's being picked up and the root before it's being picked up and the root before it's being picked up and the root cause is exploited again. cause is exploited again. cause is exploited again. So sure maybe closed source projects So sure maybe closed source projects So sure maybe closed source projects have it easy because they can actually have it easy because they can actually have it easy because they can actually get away with not handling the root get away with not handling the root get away with not handling the root cause. Open source projects not so much. I've mentioned before that open I've mentioned before that open I've mentioned before that open source really goes hand inhand with source really goes hand inhand with source really goes hand inhand with transparency and a lot of the activity transparency and a lot of the activity transparency and a lot of the activity that opens source projects do is out that opens source projects do is out that opens source projects do is out there in the open. That is great that is there in the open. That is great that is there in the open. That is great that is great for security security security but question. Okay. Oh 15 minutes I'm but question. Okay. Oh 15 minutes I'm but question. Okay. Oh 15 minutes I'm actually almost done. Um, Um, Um, so that's great for security, right? But so that's great for security, right? But so that's great for security, right? But users can't follow all of the users can't follow all of the users can't follow all of the discussions. They can't follow all of discussions. They can't follow all of discussions. They can't follow all of the commits. They can't understand the commits. They can't understand the commits. They can't understand everything that happens with all of the everything that happens with all of the everything that happens with all of the projects that they're using. So allowing projects that they're using. So allowing projects that they're using. So allowing them to make informed decisions by them to make informed decisions by them to make informed decisions by providing all of the necessary providing all of the necessary providing all of the necessary information about how a project is information about how a project is information about how a project is handling security really empowers them. handling security really empowers them. handling security really empowers them. And I think this really is very much And I think this really is very much And I think this really is very much aligned with the ethos of open source. So this was the last category. source. So this was the last category. source. So this was the last category. These were actually all of the remaining These were actually all of the remaining These were actually all of the remaining criteria that aren't covered. Um criteria that aren't covered. Um criteria that aren't covered. Um actually no I'm lying. There were about actually no I'm lying. There were about actually no I'm lying. There were about three or four which pretty much refer to three or four which pretty much refer to three or four which pretty much refer to firmware and secure boot and stuff like firmware and secure boot and stuff like firmware and secure boot and stuff like that which I completely skipped. I that which I completely skipped. I that which I completely skipped. I thought it were relevant and I did not thought it were relevant and I did not thought it were relevant and I did not want to bore you to death with those as want to bore you to death with those as want to bore you to death with those as well. But these are the actual remaining well. But these are the actual remaining well. But these are the actual remaining ones. I haven't covered the ones. I haven't covered the ones. I haven't covered the CISA vendor CRM template and I'm not CISA vendor CRM template and I'm not CISA vendor CRM template and I'm not going to go through the same kind of going to go through the same kind of going to go through the same kind of exercise with CISA's questions as well. exercise with CISA's questions as well. exercise with CISA's questions as well. But I'm going to ask this. Do these But I'm going to ask this. Do these But I'm going to ask this. Do these actually sound actually sound actually sound familiar? Does your organization reuse familiar? Does your organization reuse familiar? Does your organization reuse existing well secured software and existing well secured software and existing well secured software and hardware components when feasible hardware components when feasible hardware components when feasible instead of duplicating functionality? instead of duplicating functionality? instead of duplicating functionality? Does your organization maintain and Does your organization maintain and Does your organization maintain and manage the product security incident manage the product security incident manage the product security incident reporting and response program? And does reporting and response program? And does reporting and response program? And does your organization analyze your organization analyze your organization analyze vulnerabilities threat and fire root vulnerabilities threat and fire root vulnerabilities threat and fire root cause? cause? cause? These are three of the 16 questions These are three of the 16 questions These are three of the 16 questions under category three of the CISA vendor under category three of the CISA vendor under category three of the CISA vendor CRM CRM CRM template. They are based on security template. They are based on security template. They are based on security best practices, right? best practices, right? best practices, right? They the same collective body of They the same collective body of They the same collective body of knowledge of security experts throughout knowledge of security experts throughout knowledge of security experts throughout the world is used to create all of these the world is used to create all of these the world is used to create all of these standards. There are going to be nuance standards. There are going to be nuance standards. There are going to be nuance differences. There are going to be differences. There are going to be differences. There are going to be people that focus more on one aspect people that focus more on one aspect people that focus more on one aspect than the other. But overall that you are than the other. But overall that you are than the other. But overall that you are going to find a lot of similarity going to find a lot of similarity going to find a lot of similarity between them and these are some interesting ones them and these are some interesting ones them and these are some interesting ones I want to highlight. Does your organization highlight. Does your organization highlight. Does your organization document and communicate security document and communicate security document and communicate security control requirements for your hardware control requirements for your hardware control requirements for your hardware software or solution offering? software or solution offering? software or solution offering? security documentation telling people security documentation telling people security documentation telling people how to use your product how what control how to use your product how what control how to use your product how what control what measures are implemented right as what measures are implemented right as what measures are implemented right as if it's if it's if it's um I don't know if it's a web portal um I don't know if it's a web portal um I don't know if it's a web portal like how is it storing its data is it like how is it storing its data is it like how is it storing its data is it protecting its data somehow how is it protecting its data somehow how is it protecting its data somehow how is it doing authentication how is it doing doing authentication how is it doing doing authentication how is it doing authorization how is it validating data authorization how is it validating data authorization how is it validating data this kind of documentation allows users this kind of documentation allows users this kind of documentation allows users to understand how a product to understand how a product to understand how a product works. Does your organization verify works. Does your organization verify works. Does your organization verify that third party software provides that third party software provides that third party software provides required security required security required security requirements or requirements or requirements or controls? Dependency management. We have a huge amount of management. We have a huge amount of management. We have a huge amount of open source software out there and that open source software out there and that open source software out there and that is absolutely brilliant. But is not all is absolutely brilliant. But is not all is absolutely brilliant. But is not all maintained at the same level. maintained at the same level. maintained at the same level. You if you want to rely on something You if you want to rely on something You if you want to rely on something else, you need to understand how that else, you need to understand how that else, you need to understand how that something what kind something what kind something what kind of maintenance that something else is of maintenance that something else is of maintenance that something else is being offered. being offered. being offered. It's it's It's it's It's it's not not not a mandate, right? So you can't a mandate, right? So you can't a mandate, right? So you can't impose maintainers to do work. impose maintainers to do work. impose maintainers to do work. question is you you still need to rely question is you you still need to rely question is you you still need to rely on your dependencies. So you need to on your dependencies. So you need to on your dependencies. So you need to evaluate how good it evaluate how good it evaluate how good it is what impact it would have for you to is what impact it would have for you to is what impact it would have for you to have a dependency for each have a dependency for each have a dependency for each dependency and unifying having a dependency and unifying having a dependency and unifying having a unifying framework and the open source unifying framework and the open source unifying framework and the open source tools that exist that are being built tools that exist that are being built tools that exist that are being built allow people to do that. using them allow people to do that. using them allow people to do that. using them means that you can also understand what means that you can also understand what means that you can also understand what your dependencies are your dependencies are your dependencies are like. Last one, does your organization like. Last one, does your organization like. Last one, does your organization configure offerings to implement secure configure offerings to implement secure configure offerings to implement secure settings by default? I just wanted to settings by default? I just wanted to settings by default? I just wanted to add this here because well, I talked add this here because well, I talked add this here because well, I talked about secure by default earlier a fair about secure by default earlier a fair about secure by default earlier a fair bit. Everyone cares about it. It's not bit. Everyone cares about it. It's not bit. Everyone cares about it. It's not just hype. It does make sense. So here are my key takeaways from So here are my key takeaways from So here are my key takeaways from today. Regulations, they are not imposed today. Regulations, they are not imposed today. Regulations, they are not imposed on open source projects. Don't get me on open source projects. Don't get me on open source projects. Don't get me wrong. What I was trying to say today is wrong. What I was trying to say today is wrong. What I was trying to say today is not that we should have regulations not that we should have regulations not that we should have regulations created for open-source projects, but created for open-source projects, but created for open-source projects, but whether we can use regulations in the whether we can use regulations in the whether we can use regulations in the context of open-source projects. not context of open-source projects. not context of open-source projects. not saying that maintainers should have saying that maintainers should have saying that maintainers should have regulatory obligations. The use of open-source obligations. The use of open-source obligations. The use of open-source projects like I said is projects like I said is projects like I said is ubiquitous and even highly regulated ubiquitous and even highly regulated ubiquitous and even highly regulated environments use it. environments use it. environments use it. So we can actually en encourage these So we can actually en encourage these So we can actually en encourage these organizations to use open source organizations to use open source organizations to use open source by by by having by by communicating right by having by by communicating right by having by by communicating right by communicating expectations by allowing communicating expectations by allowing communicating expectations by allowing them to them to them to assess by speaking the same language. And the last takeaway is that And the last takeaway is that And the last takeaway is that regulations because they're based regulations because they're based regulations because they're based on common best practices that make sense on common best practices that make sense on common best practices that make sense for everyone, open source projects can for everyone, open source projects can for everyone, open source projects can look at them as well and can learn look at them as well and can learn look at them as well and can learn something and can have interesting something and can have interesting something and can have interesting takeaways that they can apply in their takeaways that they can apply in their takeaways that they can apply in their own own own context. So that's it for context. So that's it for context. So that's it for me. Thank you very much.