Kind: captions Language: en Thank you so much Steve. Hey guys uh Thank you so much Steve. Hey guys uh Thank you so much Steve. Hey guys uh this is Mayur. A little bit about our this is Mayur. A little bit about our this is Mayur. A little bit about our background. Uh so I lead two teams. One background. Uh so I lead two teams. One background. Uh so I lead two teams. One that actually writes detections in our that actually writes detections in our that actually writes detections in our call guard platform and then the other call guard platform and then the other call guard platform and then the other which also mitigates these uh detections which also mitigates these uh detections which also mitigates these uh detections that that are found. Uh Goro he's my that that are found. Uh Goro he's my that that are found. Uh Goro he's my colleague. He is a part of the second colleague. He is a part of the second colleague. He is a part of the second team that writes mitigation. That's a team that writes mitigation. That's a team that writes mitigation. That's a bit about our uh background and so so bit about our uh background and so so bit about our uh background and so so that you can know where are we coming that you can know where are we coming that you can know where are we coming from. from. from. Um so this is the problem statement Um so this is the problem statement Um so this is the problem statement right? What are the challenges in our right? What are the challenges in our right? What are the challenges in our current attack surface discovery methods current attack surface discovery methods current attack surface discovery methods and then how are we going to uh you know and then how are we going to uh you know and then how are we going to uh you know help remediate these attack surfaces uh help remediate these attack surfaces uh help remediate these attack surfaces uh you know weaknesses and then what are you know weaknesses and then what are you know weaknesses and then what are the benefits of our uh approaches. Um so the benefits of our uh approaches. Um so the benefits of our uh approaches. Um so when we talk about attack surface it is when we talk about attack surface it is when we talk about attack surface it is to to us it is more like anything it can to to us it is more like anything it can to to us it is more like anything it can be a device it can be a hardware be a device it can be a hardware be a device it can be a hardware software even people uh anything that software even people uh anything that software even people uh anything that can be quantified uh that can be an can be quantified uh that can be an can be quantified uh that can be an attack surface. But once it is attack surface. But once it is attack surface. But once it is quantified to us and it and once it has quantified to us and it and once it has quantified to us and it and once it has been given an identifier you can call it been given an identifier you can call it been given an identifier you can call it as a vulnerability because now that as a vulnerability because now that as a vulnerability because now that attack surface has uh a quantifier which attack surface has uh a quantifier which attack surface has uh a quantifier which can be remediated and can be identified can be remediated and can be identified can be remediated and can be identified uniquely identified. So now it becomes a uniquely identified. So now it becomes a uniquely identified. So now it becomes a vulnerability. So with that uh vulnerability. So with that uh vulnerability. So with that uh information let's take it ahead. These information let's take it ahead. These information let's take it ahead. These are the uh couple of points that we try are the uh couple of points that we try are the uh couple of points that we try to make uh where we are saying that you to make uh where we are saying that you to make uh where we are saying that you know why is attack surface know why is attack surface know why is attack surface uh difficult. Uh it's because not all uh difficult. Uh it's because not all uh difficult. Uh it's because not all vulnerabilities or uh remediation vulnerabilities or uh remediation vulnerabilities or uh remediation workflows are equal. Um say for example workflows are equal. Um say for example workflows are equal. Um say for example every organization organization has every organization organization has every organization organization has their own um you know driveways to their own um you know driveways to their own um you know driveways to remediating a vulnerability. For remediating a vulnerability. For remediating a vulnerability. For example, there are customers who say example, there are customers who say example, there are customers who say that okay you know severity five and that okay you know severity five and that okay you know severity five and above they'll fix everything but what above they'll fix everything but what above they'll fix everything but what happens to 4 happens to 4 happens to 4 uh CVS uh CVS uh CVS score but any you know such problems uh score but any you know such problems uh score but any you know such problems uh and then not all attack surface and then not all attack surface and then not all attack surface discovery scans are equal um you know discovery scans are equal um you know discovery scans are equal um you know some can launch authenticated scans some some can launch authenticated scans some some can launch authenticated scans some will be just uh remote scans they'll will be just uh remote scans they'll will be just uh remote scans they'll give you they in some cases they also give you they in some cases they also give you they in some cases they also give different results. What happens to give different results. What happens to give different results. What happens to that differences? Uh and then what that differences? Uh and then what that differences? Uh and then what happens to the to the vulnerabilities happens to the to the vulnerabilities happens to the to the vulnerabilities that don't have a CV at all? Does that that don't have a CV at all? Does that that don't have a CV at all? Does that vulnerability not exist on your vulnerability not exist on your vulnerability not exist on your operating systems or how how do you find operating systems or how how do you find operating systems or how how do you find it? Right? And then look at this uh it? Right? And then look at this uh it? Right? And then look at this uh graph. So these so these are the graph. So these so these are the graph. So these so these are the vulnerabilities number of vulnerabilities number of vulnerabilities number of vulnerabilities starting right from vulnerabilities starting right from vulnerabilities starting right from 1999. 1999. 1999. uh if you look at uh if you look at uh if you look at 321 to uh you know last 2024 is where we 321 to uh you know last 2024 is where we 321 to uh you know last 2024 is where we have an in excess of 40,000 CVEes. Um so have an in excess of 40,000 CVEes. Um so have an in excess of 40,000 CVEes. Um so these numbers of vulnerabilities being these numbers of vulnerabilities being these numbers of vulnerabilities being discovered is growing exponentially. Uh discovered is growing exponentially. Uh discovered is growing exponentially. Uh just a short tidbit polis was also just a short tidbit polis was also just a short tidbit polis was also discovered in n uh you know we founded discovered in n uh you know we founded discovered in n uh you know we founded in 1999. So you can just uh include that in 1999. So you can just uh include that in 1999. So you can just uh include that part of it because we already we are part of it because we already we are part of it because we already we are also a part of uh good number of also a part of uh good number of also a part of uh good number of vulnerabilities. Um and then who can vulnerabilities. Um and then who can vulnerabilities. Um and then who can tell me uh who has not dealt with any tell me uh who has not dealt with any tell me uh who has not dealt with any log forj you know vulnerabilities? It's log forj you know vulnerabilities? It's log forj you know vulnerabilities? It's a very well-known talked about a very well-known talked about a very well-known talked about vulnerability but can someone tell me vulnerability but can someone tell me vulnerability but can someone tell me that it was very easy to detect and that it was very easy to detect and that it was very easy to detect and mitigate? Uh I guess everybody agrees mitigate? Uh I guess everybody agrees mitigate? Uh I guess everybody agrees that it is difficult to detect and that it is difficult to detect and that it is difficult to detect and difficult to mitigate at the same time difficult to mitigate at the same time difficult to mitigate at the same time because it was a shared because it was a shared because it was a shared library. It could be used as an object library. It could be used as an object library. It could be used as an object or it could be included anywhere in the or it could be included anywhere in the or it could be included anywhere in the project or it could you know sit project or it could you know sit project or it could you know sit anywhere on the operating system. So anywhere on the operating system. So anywhere on the operating system. So traditional tools would find difficulty traditional tools would find difficulty traditional tools would find difficulty finding finding finding them. And then what about the famous XZ them. And then what about the famous XZ them. And then what about the famous XZ uh supply chain vulnerability from two uh supply chain vulnerability from two uh supply chain vulnerability from two two last two last two last year in infosc you know it feels like a year in infosc you know it feels like a year in infosc you know it feels like a long time but for XZ vulnerability from long time but for XZ vulnerability from long time but for XZ vulnerability from last year. So detecting a small change last year. So detecting a small change last year. So detecting a small change in a binary which was uh installed on a in a binary which was uh installed on a in a binary which was uh installed on a lot of operating systems. lot of operating systems. lot of operating systems. uh just imagine the attack surface that uh just imagine the attack surface that uh just imagine the attack surface that it provides you. So with all these uh it provides you. So with all these uh it provides you. So with all these uh you know you know you know challenges are there any more challenges are there any more challenges are there any more challenges? Yes, there are definitely challenges? Yes, there are definitely challenges? Yes, there are definitely more more more challenges with all these shared challenges with all these shared challenges with all these shared libraries uh applications programs. What libraries uh applications programs. What libraries uh applications programs. What happens is you can why why why do these happens is you can why why why do these happens is you can why why why do these exist? These exist because you can exist? These exist because you can exist? These exist because you can install them in multiple places. they install them in multiple places. they install them in multiple places. they you can install them at multiple you can install them at multiple you can install them at multiple locations. You know, package managers locations. You know, package managers locations. You know, package managers for say example Google Chrome. Uh you for say example Google Chrome. Uh you for say example Google Chrome. Uh you can install it using a package manager. can install it using a package manager. can install it using a package manager. You can just double click on the Debian You can just double click on the Debian You can just double click on the Debian uh uh binary and just install it or you uh uh binary and just install it or you uh uh binary and just install it or you can even compile it from source code, can even compile it from source code, can even compile it from source code, right? Each time uh you'll get some right? Each time uh you'll get some right? Each time uh you'll get some variability in the type depending on the variability in the type depending on the variability in the type depending on the type of installation. type of installation. type of installation. uh what happens then? Are you going to uh what happens then? Are you going to uh what happens then? Are you going to be able to detect that attack surface be able to detect that attack surface be able to detect that attack surface that you know say a certain version of that you know say a certain version of that you know say a certain version of Google Chrome uh is existing on your Google Chrome uh is existing on your Google Chrome uh is existing on your operating system? How are you going to operating system? How are you going to operating system? How are you going to find that? So, and then what happens to that? So, and then what happens to that? So, and then what happens to uh those go Google Chrome uh binaries uh those go Google Chrome uh binaries uh those go Google Chrome uh binaries when you want to uh you know patch them, when you want to uh you know patch them, when you want to uh you know patch them, right? because once you rename them or right? because once you rename them or right? because once you rename them or once you you don't find them what you I once you you don't find them what you I once you you don't find them what you I mean you can't patch what you can't see mean you can't patch what you can't see mean you can't patch what you can't see uh so there is no visibility that you uh so there is no visibility that you uh so there is no visibility that you have a loss of uh the meanantime to have a loss of uh the meanantime to have a loss of uh the meanantime to patch or meanantime to detect increases patch or meanantime to detect increases patch or meanantime to detect increases exponentially because of which again exponentially because of which again exponentially because of which again there is no visibility and there is no visibility and there is no visibility and then sometimes it may happen that a then sometimes it may happen that a then sometimes it may happen that a vulnerability was detected uh say 6 vulnerability was detected uh say 6 vulnerability was detected uh say 6 months ago but the vendor chose to patch months ago but the vendor chose to patch months ago but the vendor chose to patch it only uh one one of those classes of it only uh one one of those classes of it only uh one one of those classes of vulnerabilities what happens to that and vulnerabilities what happens to that and vulnerabilities what happens to that and what happens to those vulnerabilities what happens to those vulnerabilities what happens to those vulnerabilities which have which are eol which have you which have which are eol which have you which have which are eol which have you know there is no patch there's no know there is no patch there's no know there is no patch there's no support from the vendor um so we're support from the vendor um so we're support from the vendor um so we're trying trying trying to solve one part of the problem uh no to solve one part of the problem uh no to solve one part of the problem uh no in fact both the part of problems by not in fact both the part of problems by not in fact both the part of problems by not being uh the vendors themselves but being uh the vendors themselves but being uh the vendors themselves but helping uh everybody detect and uh helping uh everybody detect and uh helping uh everybody detect and uh detect and mitigate these uh type of detect and mitigate these uh type of detect and mitigate these uh type of vulnerabilities. How uh vulnerabilities. How uh vulnerabilities. How uh so we so the system that we call we came so we so the system that we call we came so we so the system that we call we came up with is called as Veda uh it's a up with is called as Veda uh it's a up with is called as Veda uh it's a vulnerability elimination through deep vulnerability elimination through deep vulnerability elimination through deep analysis. So it includes four different analysis. So it includes four different analysis. So it includes four different methods uh which are used in conjunction methods uh which are used in conjunction methods uh which are used in conjunction with each other. Uh very basically we with each other. Uh very basically we with each other. Uh very basically we use feature use feature use feature extraction from uh multiple locations, extraction from uh multiple locations, extraction from uh multiple locations, multiple sources. Now it can be your uh multiple sources. Now it can be your uh multiple sources. Now it can be your uh it not uh it it is your uh security it not uh it it is your uh security it not uh it it is your uh security bulletins and we correlate that with the bulletins and we correlate that with the bulletins and we correlate that with the information in the binary to uh pinpoint information in the binary to uh pinpoint information in the binary to uh pinpoint that you know the vulnerability is in that you know the vulnerability is in that you know the vulnerability is in some certain code block or a function or some certain code block or a function or some certain code block or a function or wherever. uh and then we will be able to wherever. uh and then we will be able to wherever. uh and then we will be able to pinpoint that this vulnerability exists pinpoint that this vulnerability exists pinpoint that this vulnerability exists in this binary. in this binary. in this binary. uh so the first method that I'm going to uh so the first method that I'm going to uh so the first method that I'm going to talk about is the feature extraction talk about is the feature extraction talk about is the feature extraction method. So in this method we use about method. So in this method we use about method. So in this method we use about 1,300 so there are since we this is a 1,300 so there are since we this is a 1,300 so there are since we this is a project that we're still working on uh project that we're still working on uh project that we're still working on uh and thinking of productizing there are and thinking of productizing there are and thinking of productizing there are 1300 plus features uh that we currently 1300 plus features uh that we currently 1300 plus features uh that we currently extract from binaries extract from binaries extract from binaries um both binaries because that's a data um both binaries because that's a data um both binaries because that's a data set for us uh both uh patched and set for us uh both uh patched and set for us uh both uh patched and vulnerable binaries and then we extract vulnerable binaries and then we extract vulnerable binaries and then we extract features from CV identifiers uh what features from CV identifiers uh what features from CV identifiers uh what features uh oh okay so so the features features uh oh okay so so the features features uh oh okay so so the features are I'll get to in a second but so these are I'll get to in a second but so these are I'll get to in a second but so these are the sample size so we collected data are the sample size so we collected data are the sample size so we collected data from NVD jitub advisories nuclei from NVD jitub advisories nuclei from NVD jitub advisories nuclei template uh you know folders and all of template uh you know folders and all of template uh you know folders and all of that all of these were fed into our that all of these were fed into our that all of these were fed into our system and then this is what we look at system and then this is what we look at system and then this is what we look at so we use classic uh supervised machine so we use classic uh supervised machine so we use classic uh supervised machine learning based learning based learning based uh topic modeling on the uh topic modeling on the uh topic modeling on the information we take into consideration information we take into consideration information we take into consideration CPE we extract uh if C CW is not there CPE we extract uh if C CW is not there CPE we extract uh if C CW is not there we extract it we we have the ability to we extract it we we have the ability to we extract it we we have the ability to extract it uh we also take into extract it uh we also take into extract it uh we also take into consideration CVS 2 3 4 um there was a consideration CVS 2 3 4 um there was a consideration CVS 2 3 4 um there was a talk by uh the Korean search guys talk by uh the Korean search guys talk by uh the Korean search guys yesterday uh that where they beautifully yesterday uh that where they beautifully yesterday uh that where they beautifully showed that there's a difference between showed that there's a difference between showed that there's a difference between CVSS 3 and CVSS 4 calculations. So that CVSS 3 and CVSS 4 calculations. So that CVSS 3 and CVSS 4 calculations. So that shows how important all uh considering shows how important all uh considering shows how important all uh considering all these classes are CVSs uh classes all these classes are CVSs uh classes all these classes are CVSs uh classes are and then these are and then these are and then these uh uh this part of information we marry uh uh this part of information we marry uh uh this part of information we marry with the information from binary. Now with the information from binary. Now with the information from binary. Now why is this important is as you can see why is this important is as you can see why is this important is as you can see on the right side this is published by on the right side this is published by on the right side this is published by uh MITER. These are the 2024 KV uh list uh MITER. These are the 2024 KV uh list uh MITER. These are the 2024 KV uh list of CPEs high uh uh you know we know that of CPEs high uh uh you know we know that of CPEs high uh uh you know we know that K is a well regarded um uh metric for uh K is a well regarded um uh metric for uh K is a well regarded um uh metric for uh vulnerability management guys. Now uh so vulnerability management guys. Now uh so vulnerability management guys. Now uh so this information we use it and then in this information we use it and then in this information we use it and then in uh we extract the code blocks from the uh we extract the code blocks from the uh we extract the code blocks from the binaries. So simple information such as binaries. So simple information such as binaries. So simple information such as what are the sys calls being used um what are the sys calls being used um what are the sys calls being used um what are the uh register so we execute what are the uh register so we execute what are the uh register so we execute the binaries what are the uh how do the the binaries what are the uh how do the the binaries what are the uh how do the registers move in certain cases for registers move in certain cases for registers move in certain cases for example if uh in case a vulnerable example if uh in case a vulnerable example if uh in case a vulnerable binary responds to a p is there a binary responds to a p is there a binary responds to a p is there a difference between that and a difference between that and a difference between that and a nonvulnerable binary uh if uh there's a nonvulnerable binary uh if uh there's a nonvulnerable binary uh if uh there's a difference in uh metadata, simple difference in uh metadata, simple difference in uh metadata, simple metadata, uh things like ASLR, um DP, metadata, uh things like ASLR, um DP, metadata, uh things like ASLR, um DP, CFG, all of these we take into CFG, all of these we take into CFG, all of these we take into consideration, marry this and this is consideration, marry this and this is consideration, marry this and this is how we send it to u uh a trained how we send it to u uh a trained how we send it to u uh a trained classifier. Using all of this classifier. Using all of this classifier. Using all of this information, uh we send it to a trained information, uh we send it to a trained information, uh we send it to a trained classifier. We have a short demo for classifier. We have a short demo for classifier. We have a short demo for you. uh we couldn't really get the whole you. uh we couldn't really get the whole you. uh we couldn't really get the whole uh you know uh you know uh you know uh appliance here but this is a short 20 uh appliance here but this is a short 20 uh appliance here but this is a short 20 second demo uh let's hope okay so what we are showing here is hope okay so what we are showing here is hope okay so what we are showing here is we are comparing two Linux binaries we are comparing two Linux binaries we are comparing two Linux binaries uh this is a short video so over here uh this is a short video so over here uh this is a short video so over here you can see there's a difference between you can see there's a difference between you can see there's a difference between uh so you see that you saw that we have uh so you see that you saw that we have uh so you see that you saw that we have found the difference between uh assembly found the difference between uh assembly found the difference between uh assembly and then we we were with a confidence and then we we were with a confidence and then we we were with a confidence level we were able to find out the CWE level we were able to find out the CWE level we were able to find out the CWE information from uh this binary and what information from uh this binary and what information from uh this binary and what we were able to find here was that this we were able to find here was that this we were able to find here was that this binary possibly or with a in this case binary possibly or with a in this case binary possibly or with a in this case with a confidence of 100% is a variant with a confidence of 100% is a variant with a confidence of 100% is a variant of shell shock vulnerability. So we are of shell shock vulnerability. So we are of shell shock vulnerability. So we are still improving this still improving this still improving this um whole system but we are we are here um whole system but we are we are here um whole system but we are we are here now. So this is it. Uh to explain more now. So this is it. Uh to explain more now. So this is it. Uh to explain more about the second method uh I'll have about the second method uh I'll have about the second method uh I'll have Goro talk about this second method. Goro talk about this second method. Goro talk about this second method. Thank you Mish. So we discussed the Thank you Mish. So we discussed the Thank you Mish. So we discussed the challenges that that we are facing in challenges that that we are facing in challenges that that we are facing in discovering uh vulnerabilities and how discovering uh vulnerabilities and how discovering uh vulnerabilities and how our new innovative approaches are our new innovative approaches are our new innovative approaches are helping us find vulnerabilities from helping us find vulnerabilities from helping us find vulnerabilities from from binaries and using this uh these from binaries and using this uh these from binaries and using this uh these two new methods. I'll be discussing the two new methods. I'll be discussing the two new methods. I'll be discussing the deep learning method method that we're deep learning method method that we're deep learning method method that we're using and how it is slightly different using and how it is slightly different using and how it is slightly different from the feature extraction method that from the feature extraction method that from the feature extraction method that we that we discussed since it is an we that we discussed since it is an we that we discussed since it is an ongoing research we are trying different ongoing research we are trying different ongoing research we are trying different methods to do so. So we start with some methods to do so. So we start with some methods to do so. So we start with some auto feature extraction for from both auto feature extraction for from both auto feature extraction for from both vulnerable and batch binaries. Of course vulnerable and batch binaries. Of course vulnerable and batch binaries. Of course we have to do it for both. So we can we have to do it for both. So we can we have to do it for both. So we can have ample ample data for positive and have ample ample data for positive and have ample ample data for positive and negative cases. And then we do some kind negative cases. And then we do some kind negative cases. And then we do some kind of uh feature labeling using the CV C CW of uh feature labeling using the CV C CW of uh feature labeling using the CV C CW information C CVs information that we information C CVs information that we information C CVs information that we discussed earlier. And to discuss to discussed earlier. And to discuss to discussed earlier. And to discuss to explain this process it's pretty explain this process it's pretty explain this process it's pretty straightforward. We reverse engineer the straightforward. We reverse engineer the straightforward. We reverse engineer the binary. We pick the code blocks. Now binary. We pick the code blocks. Now binary. We pick the code blocks. Now when we reverse engineer engineer the when we reverse engineer engineer the when we reverse engineer engineer the binary we have these code blocks. You binary we have these code blocks. You binary we have these code blocks. You can it you can and consider those can it you can and consider those can it you can and consider those functions if you if you like and then functions if you if you like and then functions if you if you like and then they are sent to our LLM that we have they are sent to our LLM that we have they are sent to our LLM that we have fine- tuned ourselves. It's an we're use fine- tuned ourselves. It's an we're use fine- tuned ourselves. It's an we're use we're using um offline LLM. It's we're we're using um offline LLM. It's we're we're using um offline LLM. It's we're running it it ourselves. It's not we're running it it ourselves. It's not we're running it it ourselves. It's not we're we're not using some API service there. we're not using some API service there. we're not using some API service there. So because of data data privacy and So because of data data privacy and So because of data data privacy and security and those LLMs then generate security and those LLMs then generate security and those LLMs then generate the embeddings and those embeddings are the embeddings and those embeddings are the embeddings and those embeddings are then vectorized and we we we then vectorized and we we we then vectorized and we we we uh we we label those those vectors with uh we we label those those vectors with uh we we label those those vectors with CV, CWE, CVSS information so that we can CV, CWE, CVSS information so that we can CV, CWE, CVSS information so that we can add labels to them and then later we add labels to them and then later we add labels to them and then later we send it to our vector database so we can send it to our vector database so we can send it to our vector database so we can perform classification. To pictureize it perform classification. To pictureize it perform classification. To pictureize it to give you a more graphical view you to give you a more graphical view you to give you a more graphical view you can look at this flow. This is how it can look at this flow. This is how it can look at this flow. This is how it looks like. This is the process or uh looks like. This is the process or uh looks like. This is the process or uh that that our framework takes takes care that that our framework takes takes care that that our framework takes takes care of. Now which models are we using? We're of. Now which models are we using? We're of. Now which models are we using? We're using we have tested code llama, code using we have tested code llama, code using we have tested code llama, code gen 2 and mistral. We have had various gen 2 and mistral. We have had various gen 2 and mistral. We have had various different levels of different levels of different levels of um performance and accuracy. And these um performance and accuracy. And these um performance and accuracy. And these models were trained using the supervised models were trained using the supervised models were trained using the supervised learning method the classic supervised learning method the classic supervised learning method the classic supervised training. And our data set included cesa training. And our data set included cesa training. And our data set included cesa kev and some curated list of kev and some curated list of kev and some curated list of vulnerabilities uh that qualis threat vulnerabilities uh that qualis threat vulnerabilities uh that qualis threat research unit was able to collect. So research unit was able to collect. So research unit was able to collect. So without training without any additional without training without any additional without training without any additional information there wasn't a lot of information there wasn't a lot of information there wasn't a lot of accuracy but when we included cloud when accuracy but when we included cloud when accuracy but when we included cloud when we included data from the we included data from the we included data from the qualb vulnerabilities cv qualb vulnerabilities cv qualb vulnerabilities cv cwss all that information uh that we cwss all that information uh that we cwss all that information uh that we collect using try to search unit we were collect using try to search unit we were collect using try to search unit we were able to fine-tune it and get some more able to fine-tune it and get some more able to fine-tune it and get some more accuracy here. Now to test the accuracy here. Now to test the accuracy here. Now to test the classifier it was a pretty simple format classifier it was a pretty simple format classifier it was a pretty simple format map the binary to CPEs because we want map the binary to CPEs because we want map the binary to CPEs because we want to know which specific vendor the CP is to know which specific vendor the CP is to know which specific vendor the CP is associated with right uh and then we associated with right uh and then we associated with right uh and then we send the we send the binary to Va Va send the we send the binary to Va Va send the we send the binary to Va Va will take Va will take care of reverse will take Va will take care of reverse will take Va will take care of reverse engineering it finding the code blocks engineering it finding the code blocks engineering it finding the code blocks and then then vector vectorzing it and then then vector vectorzing it and then then vector vectorzing it sending it to the vector DB and then sending it to the vector DB and then sending it to the vector DB and then giving us a classification giving us a classification giving us a classification classification result much like how we classification result much like how we classification result much like how we did it in our previous demo. So this did it in our previous demo. So this did it in our previous demo. So this demo is going to be similar and we have demo is going to be similar and we have demo is going to be similar and we have a short video for you. So as you can see a short video for you. So as you can see a short video for you. So as you can see we have some information information we have some information information we have some information information here. The information about both the here. The information about both the here. The information about both the binaries again it's the same it's the binaries again it's the same it's the binaries again it's the same it's the same set of binaries. One is vulnerable same set of binaries. One is vulnerable same set of binaries. One is vulnerable other one is patched and then we start other one is patched and then we start other one is patched and then we start our MCP server. We'll send the data to our MCP server. We'll send the data to our MCP server. We'll send the data to our LLM and it tells us with some our LLM and it tells us with some our LLM and it tells us with some confidence that it is vulnerable against confidence that it is vulnerable against confidence that it is vulnerable against shell shock and variants of shell shock shell shock and variants of shell shock shell shock and variants of shell shock vulnerabilities. vulnerabilities. vulnerabilities. Now vulnerabilities as we understand Now vulnerabilities as we understand Now vulnerabilities as we understand reside in reside in reside in code and code has context and we need code and code has context and we need code and code has context and we need that context right so because code that context right so because code that context right so because code provide provides context we look at the provide provides context we look at the provide provides context we look at the binary code that's why I discussed binary code that's why I discussed binary code that's why I discussed reverse engineering we have those four reverse engineering we have those four reverse engineering we have those four blocks without the context we won't know blocks without the context we won't know blocks without the context we won't know what does the vulner vulnerability mean what does the vulner vulnerability mean what does the vulner vulnerability mean is it associated with some weakness uh is it associated with some weakness uh is it associated with some weakness uh some metadata may not be 100% accurate some metadata may not be 100% accurate some metadata may not be 100% accurate so we So in this specific method, we try so we So in this specific method, we try so we So in this specific method, we try to go inside the binary and get and and to go inside the binary and get and and to go inside the binary and get and and get the read out. But that's not good get the read out. But that's not good get the read out. But that's not good enough. I have to give you some example. enough. I have to give you some example. enough. I have to give you some example. So I have some sample code here. This is So I have some sample code here. This is So I have some sample code here. This is a very basic simple buffer buffer a very basic simple buffer buffer a very basic simple buffer buffer overflow example. As you can see, I've overflow example. As you can see, I've overflow example. As you can see, I've assigned a small buffer and I'm assigned a small buffer and I'm assigned a small buffer and I'm overflowing it. So it's a very classic overflowing it. So it's a very classic overflowing it. So it's a very classic example of a vulner of some vulnerable example of a vulner of some vulnerable example of a vulner of some vulnerable code. So I'm not saying this is exactly code. So I'm not saying this is exactly code. So I'm not saying this is exactly the code that will go into Va, but it is the code that will go into Va, but it is the code that will go into Va, but it is something similar. It's this is the kind something similar. It's this is the kind something similar. It's this is the kind of code that will go into Va in our of code that will go into Va in our of code that will go into Va in our system when we do a reverse engineering system when we do a reverse engineering system when we do a reverse engineering when we try to find the vulnerabilities when we try to find the vulnerabilities when we try to find the vulnerabilities in the vulnerable code. So remember in the vulnerable code. So remember in the vulnerable code. So remember vulnerabilities require context and code vulnerabilities require context and code vulnerabilities require context and code has context. So we look at that context. has context. So we look at that context. has context. So we look at that context. We look at the code. Now simply We look at the code. Now simply We look at the code. Now simply detection is not enough. We have to go detection is not enough. We have to go detection is not enough. We have to go one step ahead. We have to actually fix one step ahead. We have to actually fix one step ahead. We have to actually fix those vulnerabilities. We have to those vulnerabilities. We have to those vulnerabilities. We have to mitigate those vulnerabilities. mitigate those vulnerabilities. mitigate those vulnerabilities. Now, but what are even mitigations Now, but what are even mitigations Now, but what are even mitigations about, right? Mitigations are small about, right? Mitigations are small about, right? Mitigations are small pieces of code or some kind of pieces of code or some kind of pieces of code or some kind of configuration that you can apply. configuration that you can apply. configuration that you can apply. They're totally stateless. They don't They're totally stateless. They don't They're totally stateless. They don't use a lot of resources and they can use a lot of resources and they can use a lot of resources and they can eliminate the attack surface sort of and eliminate the attack surface sort of and eliminate the attack surface sort of and you can use it uh you you can actually you can use it uh you you can actually you can use it uh you you can actually try to risk eliminate. We have try to risk eliminate. We have try to risk eliminate. We have elimination eliminate elimination elimination eliminate elimination elimination eliminate elimination available for you. We have a trial available for you. We have a trial available for you. We have a trial available. I'll I'll share the QR code. available. I'll I'll share the QR code. available. I'll I'll share the QR code. But the point is mitigations will make But the point is mitigations will make But the point is mitigations will make sure that sure that sure that vulnerabilities cannot be vulnerabilities cannot be vulnerabilities cannot be exploited. Now what are the benefits of exploited. Now what are the benefits of exploited. Now what are the benefits of these approaches? So major benefits we these approaches? So major benefits we these approaches? So major benefits we don't have to worry about the version of don't have to worry about the version of don't have to worry about the version of the software anymore. It's all one the software anymore. It's all one the software anymore. It's all one version independent analysis and it's version independent analysis and it's version independent analysis and it's comprehensive vulnerability mitigation comprehensive vulnerability mitigation comprehensive vulnerability mitigation in a sense that we cover the attack in a sense that we cover the attack in a sense that we cover the attack surface and we we have reduced dep surface and we we have reduced dep surface and we we have reduced dep dependency on software updates because dependency on software updates because dependency on software updates because we're not patching it. we're not patching it. we're not patching it. So since vulnerabilities are in the code So since vulnerabilities are in the code So since vulnerabilities are in the code and VA hunts vulnerabilities within the and VA hunts vulnerabilities within the and VA hunts vulnerabilities within the code, we're not trying to look for code, we're not trying to look for code, we're not trying to look for package managers, we're not trying to package managers, we're not trying to package managers, we're not trying to look for software versions. So it look for software versions. So it look for software versions. So it becomes version independent detection, becomes version independent detection, becomes version independent detection, right? And when we talk about right? And when we talk about right? And when we talk about comprehensive vulnerability mitigations, comprehensive vulnerability mitigations, comprehensive vulnerability mitigations, we're also looking at repackaged we're also looking at repackaged we're also looking at repackaged applications. So like we discussed some applications. So like we discussed some applications. So like we discussed some time ago ago few minutes ago with during time ago ago few minutes ago with during time ago ago few minutes ago with during this presentation that log 4j can be this presentation that log 4j can be this presentation that log 4j can be used anywhere. Similarly, Chrome can be used anywhere. Similarly, Chrome can be used anywhere. Similarly, Chrome can be used anywhere. You can have an Electron used anywhere. You can have an Electron used anywhere. You can have an Electron application and Chrome libraries could application and Chrome libraries could application and Chrome libraries could be there and some detection software may be there and some detection software may be there and some detection software may not detect it because Chrome is now part not detect it because Chrome is now part not detect it because Chrome is now part of this new application and it's bundled of this new application and it's bundled of this new application and it's bundled together and in within the within the together and in within the within the together and in within the within the binary. So to find whether something is binary. So to find whether something is binary. So to find whether something is vulnerable or not, we have to go inside vulnerable or not, we have to go inside vulnerable or not, we have to go inside the code and look at the code and then the code and look at the code and then the code and look at the code and then see oh this part is vulnerable which see oh this part is vulnerable which see oh this part is vulnerable which means the whole software is vulnerable. means the whole software is vulnerable. means the whole software is vulnerable. And how do we mitigate that? We m we And how do we mitigate that? We m we And how do we mitigate that? We m we make we cut off the the attack surface. make we cut off the the attack surface. make we cut off the the attack surface. We apply some kind of configuration or We apply some kind of configuration or We apply some kind of configuration or some kind of some kind of change which some kind of some kind of change which some kind of some kind of change which will make sure that it is that the will make sure that it is that the will make sure that it is that the mitigation becomes payload agnostic. We mitigation becomes payload agnostic. We mitigation becomes payload agnostic. We don't want to stick to a specific don't want to stick to a specific don't want to stick to a specific exploit that some specific exploit is exploit that some specific exploit is exploit that some specific exploit is out there it's going to mitigate. We out there it's going to mitigate. We out there it's going to mitigate. We don't want to do that. We want to cover don't want to do that. We want to cover don't want to do that. We want to cover the entire attack surface. And for that the entire attack surface. And for that the entire attack surface. And for that we we apply a payload agnostic we we apply a payload agnostic we we apply a payload agnostic mitigation. It could be some uh registry mitigation. It could be some uh registry mitigation. It could be some uh registry change or configuration change or configuration change or configuration change. Now since uh we're not depending change. Now since uh we're not depending change. Now since uh we're not depending upon patches, we're not relyinguh we are upon patches, we're not relyinguh we are upon patches, we're not relyinguh we are not relying on uh software updates. not relying on uh software updates. not relying on uh software updates. Software updates can sometimes be Software updates can sometimes be Software updates can sometimes be expensive uh from multiple points of expensive uh from multiple points of expensive uh from multiple points of view. They could include breaking view. They could include breaking view. They could include breaking changes or you may have to purchase a changes or you may have to purchase a changes or you may have to purchase a new license. You may have to purchase a new license. You may have to purchase a new license. You may have to purchase a new hardware device. Sometimes softwares new hardware device. Sometimes softwares new hardware device. Sometimes softwares go end of life. Sometimes hardware go end of life. Sometimes hardware go end of life. Sometimes hardware devices go end of life and they're not devices go end of life and they're not devices go end of life and they're not supported. So what do we do then? We supported. So what do we do then? We supported. So what do we do then? We sometimes we not even able to pair. sometimes we not even able to pair. sometimes we not even able to pair. Sometimes we're not able to uh update Sometimes we're not able to uh update Sometimes we're not able to uh update the same software. We have to purchase the same software. We have to purchase the same software. We have to purchase the upgraded version of the license. So the upgraded version of the license. So the upgraded version of the license. So that's where mitigations help more. And that's where mitigations help more. And that's where mitigations help more. And I think to help you with that I have I think to help you with that I have I think to help you with that I have some uh QR code with you. Uh if you have some uh QR code with you. Uh if you have some uh QR code with you. Uh if you have some time you you can try out true risk some time you you can try out true risk some time you you can try out true risk eliminate and you can try mitigations eliminate and you can try mitigations eliminate and you can try mitigations yourself. Uh this will give you uh an yourself. Uh this will give you uh an yourself. Uh this will give you uh an exclusive 30-day tri-day free trial and exclusive 30-day tri-day free trial and exclusive 30-day tri-day free trial and uh please take your time and scan if you uh please take your time and scan if you uh please take your time and scan if you like. Like to thank you both. Thanks like. Like to thank you both. Thanks like. Like to thank you both. Thanks Paulis for great presentation. Paulis for great presentation. Paulis for great presentation. Appreciate your time today.