Kind: captions Language: en Thank you everyone. So my name is Luchi Thank you everyone. So my name is Luchi Thank you everyone. So my name is Luchi Stanesco. I'm a security engineering Stanesco. I'm a security engineering Stanesco. I'm a security engineering manager at Clonical. And basically today manager at Clonical. And basically today manager at Clonical. And basically today I'm going to talk to you about some of I'm going to talk to you about some of I'm going to talk to you about some of the lessons that Clonicle have has the lessons that Clonicle have has the lessons that Clonicle have has learned through the its own implemented learned through the its own implemented learned through the its own implemented SSDLC processes. So, we're going to go SSDLC processes. So, we're going to go SSDLC processes. So, we're going to go through what processes we've implemented through what processes we've implemented through what processes we've implemented and um talk to you about some of the and um talk to you about some of the and um talk to you about some of the pain points that we've experienced as pain points that we've experienced as pain points that we've experienced as well as um sort of what angle we took well as um sort of what angle we took well as um sort of what angle we took that we thought would actually work out that we thought would actually work out that we thought would actually work out better. Um so better. Um so better. Um so before we move into before we move into before we move into that, a question for you. Can you that, a question for you. Can you that, a question for you. Can you imagine a world that doesn't have any imagine a world that doesn't have any imagine a world that doesn't have any cyber security threats? cyber security threats? cyber security threats? I mean, yeah, we're at Villain Conan I mean, yeah, we're at Villain Conan I mean, yeah, we're at Villain Conan here. So, does that even make sense to here. So, does that even make sense to here. So, does that even make sense to you? To me, I think it would look a bit you? To me, I think it would look a bit you? To me, I think it would look a bit like this, like this, like this, right? I think I just took the first right? I think I just took the first right? I think I just took the first random picture with a dinosaur that I random picture with a dinosaur that I random picture with a dinosaur that I could find. could find. could find. Um, the thing that I think is Um, the thing that I think is Um, the thing that I think is interesting is this is very much a in interesting is this is very much a in interesting is this is very much a in yourrface threat, right? You can see it. yourrface threat, right? You can see it. yourrface threat, right? You can see it. It's big. Cyber security threats are a It's big. Cyber security threats are a It's big. Cyber security threats are a bit more subtle. you can't always see bit more subtle. you can't always see bit more subtle. you can't always see them. Sometimes they're also nuanced. them. Sometimes they're also nuanced. them. Sometimes they're also nuanced. They don't always they're not just out They don't always they're not just out They don't always they're not just out there necessarily to kill you and they there necessarily to kill you and they there necessarily to kill you and they will definitely kill you as soon as they will definitely kill you as soon as they will definitely kill you as soon as they spot you. spot you. spot you. So that's the issue that we're So that's the issue that we're So that's the issue that we're experiencing here. We need to find a way experiencing here. We need to find a way experiencing here. We need to find a way to manage these threats in a way that uh to manage these threats in a way that uh to manage these threats in a way that uh is makes sense, right? In a way that we is makes sense, right? In a way that we is makes sense, right? In a way that we can actually identify them. can actually identify them. can actually identify them. So this is the process that we've got at So this is the process that we've got at So this is the process that we've got at Colonical. Um it's it's basically an Colonical. Um it's it's basically an Colonical. Um it's it's basically an ordered process, right? But it's also a ordered process, right? But it's also a ordered process, right? But it's also a circle simply because you don't just do circle simply because you don't just do circle simply because you don't just do it once. You kind of it's a continuous it once. You kind of it's a continuous it once. You kind of it's a continuous process. You have to do it all over process. You have to do it all over process. You have to do it all over again on a frequent again on a frequent again on a frequent basis. But the ordering does make sense. basis. But the ordering does make sense. basis. But the ordering does make sense. The ordering does allow The ordering does allow The ordering does allow certain steps to benefit from the output certain steps to benefit from the output certain steps to benefit from the output of previous of previous of previous steps. So this is what we've done. steps. So this is what we've done. steps. So this is what we've done. Threat modeling is the first Threat modeling is the first Threat modeling is the first step. Before we jump into this, just to step. Before we jump into this, just to step. Before we jump into this, just to clarify, this is these are processes clarify, this is these are processes clarify, this is these are processes that we've implemented for the projects that we've implemented for the projects that we've implemented for the projects that that that canonical delivers, right? It might be canonical delivers, right? It might be canonical delivers, right? It might be the case that these are projects that um the case that these are projects that um the case that these are projects that um have been developed by internal teams at have been developed by internal teams at have been developed by internal teams at Canonical. It might be the case that Canonical. It might be the case that Canonical. It might be the case that there is an open source upstream and we there is an open source upstream and we there is an open source upstream and we are distributing and offering an extra are distributing and offering an extra are distributing and offering an extra service on top of that. Either way, we service on top of that. Either way, we service on top of that. Either way, we have applied a very similar process have applied a very similar process have applied a very similar process here. here. here. So threat modeling first So threat modeling first So threat modeling first step what we've done here is we've step what we've done here is we've step what we've done here is we've developed a in-house methodology to that developed a in-house methodology to that developed a in-house methodology to that is specifically aimed at the kind of is specifically aimed at the kind of is specifically aimed at the kind of open source projects that we've got. it open source projects that we've got. it open source projects that we've got. it is focused on obviously the CIA triad is focused on obviously the CIA triad is focused on obviously the CIA triad right um and I'm going to actually dig right um and I'm going to actually dig right um and I'm going to actually dig in all of these a bit deeper in a bit in all of these a bit deeper in a bit in all of these a bit deeper in a bit static code analysis the second static code analysis the second static code analysis the second one you know it makes sense um you it one you know it makes sense um you it one you know it makes sense um you it brings along quality right um it it's brings along quality right um it it's brings along quality right um it it's meant it is a very easy meant it is a very easy meant it is a very easy way If you have a source code way If you have a source code way If you have a source code repository, if you identify the right repository, if you identify the right repository, if you identify the right tools, they will be able to identify tools, they will be able to identify tools, they will be able to identify potential problems. And doing this potential problems. And doing this potential problems. And doing this continuously ensures that you actually continuously ensures that you actually continuously ensures that you actually have a um how should I put this have a um how should I put this have a um how should I put this increasing level of quality right in increasing level of quality right in increasing level of quality right in your software. Um it is important to your software. Um it is important to your software. Um it is important to find the right tools there because find the right tools there because find the right tools there because they're not all created equal. The other they're not all created equal. The other they're not all created equal. The other aspect is they're not going to find all aspect is they're not going to find all aspect is they're not going to find all of the issues that you can possibly have of the issues that you can possibly have of the issues that you can possibly have in your code, but they do provide a nice in your code, but they do provide a nice in your code, but they do provide a nice starting starting starting point. Vulnerability scanning. point. Vulnerability scanning. point. Vulnerability scanning. It does say they're homemade scanning It does say they're homemade scanning It does say they're homemade scanning solution, but what I really mean by that solution, but what I really mean by that solution, but what I really mean by that is we is we is we have we use have we use have we use several vulnerability management several vulnerability management several vulnerability management scanners and we interpret the results scanners and we interpret the results scanners and we interpret the results and we colleate those results and we and we colleate those results and we and we colleate those results and we choose the right tool according to the choose the right tool according to the choose the right tool according to the thing that we're scanning because not thing that we're scanning because not thing that we're scanning because not all tools are created all tools are created all tools are created equal. And whatever metrics we're equal. And whatever metrics we're equal. And whatever metrics we're gathering from this, we are then if also gathering from this, we are then if also gathering from this, we are then if also using to track the way we're effectively using to track the way we're effectively using to track the way we're effectively handling at the end of the day quality handling at the end of the day quality handling at the end of the day quality in our in our in our product. Pentest, a very fun one. Um, product. Pentest, a very fun one. Um, product. Pentest, a very fun one. Um, and this is a very clear dependency that and this is a very clear dependency that and this is a very clear dependency that we've got there. Pentest really should we've got there. Pentest really should we've got there. Pentest really should follow vulnerability scanning and threat follow vulnerability scanning and threat follow vulnerability scanning and threat modeling. So we do thread le pen testing modeling. So we do thread le pen testing modeling. So we do thread le pen testing for our products and that means we for our products and that means we for our products and that means we obviously have to have a thread modeling obviously have to have a thread modeling obviously have to have a thread modeling first right it makes sense but the other first right it makes sense but the other first right it makes sense but the other aspect is that it does help to do this aspect is that it does help to do this aspect is that it does help to do this after vulnerability scanning because it after vulnerability scanning because it after vulnerability scanning because it means that we know what to focus on means that we know what to focus on means that we know what to focus on ideally we pentesting shouldn't focus on ideally we pentesting shouldn't focus on ideally we pentesting shouldn't focus on known vulnerabilities that we know how known vulnerabilities that we know how known vulnerabilities that we know how to address because we're going to be to address because we're going to be to address because we're going to be addressing them we're going to be addressing them we're going to be addressing them we're going to be remediating them prior into the pentest remediating them prior into the pentest remediating them prior into the pentest taking taking taking place. Last but not least, vulnerability place. Last but not least, vulnerability place. Last but not least, vulnerability response. Vulnerabilities exist, right? response. Vulnerabilities exist, right? response. Vulnerabilities exist, right? We're not going to get rid of them. They We're not going to get rid of them. They We're not going to get rid of them. They are we are going to find new are we are going to find new are we are going to find new vulnerabilities in the future. We are vulnerabilities in the future. We are vulnerabilities in the future. We are going to have new vulnerabilities going to have new vulnerabilities going to have new vulnerabilities reported to us in the future. It's just reported to us in the future. It's just reported to us in the future. It's just business as usual. The idea here is that business as usual. The idea here is that business as usual. The idea here is that we need to be able to treat them in a we need to be able to treat them in a we need to be able to treat them in a coherent way. And this is what our coherent way. And this is what our coherent way. And this is what our vulnerability response processes are all vulnerability response processes are all vulnerability response processes are all about. Now there is something that's about. Now there is something that's about. Now there is something that's missing from this diagram here. But missing from this diagram here. But missing from this diagram here. But that's because it is that's because it is that's because it is actually pretty much on top of actually pretty much on top of actually pretty much on top of everything and that is security everything and that is security everything and that is security documentation. documentation. documentation. I think that security documentation is I think that security documentation is I think that security documentation is one of the most important aspects of an one of the most important aspects of an one of the most important aspects of an SSDLC process SSDLC process SSDLC process because not only does it ensure that the because not only does it ensure that the because not only does it ensure that the development, the product teams focus on development, the product teams focus on development, the product teams focus on security, understand what they're security, understand what they're security, understand what they're talking about and understand what things talking about and understand what things talking about and understand what things to communicate to others. But it's the to communicate to others. But it's the to communicate to others. But it's the transparency that it offers. It empowers transparency that it offers. It empowers transparency that it offers. It empowers the users of those products to use them the users of those products to use them the users of those products to use them in a way that is secure because we're in a way that is secure because we're in a way that is secure because we're not securing products in a vacuum, not securing products in a vacuum, not securing products in a vacuum, right? They are then going to be right? They are then going to be right? They are then going to be deployed in a context. Those contexts deployed in a context. Those contexts deployed in a context. Those contexts are going to be different. We can't have are going to be different. We can't have are going to be different. We can't have a one-sizefitit all kind of product. a one-sizefitit all kind of product. a one-sizefitit all kind of product. Therefore, we need to be able to Therefore, we need to be able to Therefore, we need to be able to communicate to our end users how our communicate to our end users how our communicate to our end users how our product is supposed to be used. At the end of the day, knowledge is key, At the end of the day, knowledge is key, At the end of the day, knowledge is key, right? Um, it is all about understanding right? Um, it is all about understanding right? Um, it is all about understanding your risks. It is about not, you know, your risks. It is about not, you know, your risks. It is about not, you know, putting your head in the sand and putting your head in the sand and putting your head in the sand and knowing that yes, vulnerabilities exist. knowing that yes, vulnerabilities exist. knowing that yes, vulnerabilities exist. Vulnerabilities can increase risk. Um, Vulnerabilities can increase risk. Um, Vulnerabilities can increase risk. Um, risks inherently exist in certain risks inherently exist in certain risks inherently exist in certain activities. And you know a common saying activities. And you know a common saying activities. And you know a common saying is that you can mitigate avoid transfer is that you can mitigate avoid transfer is that you can mitigate avoid transfer or simply accept a risk but you just or simply accept a risk but you just or simply accept a risk but you just don't want to ignore them. You don't don't want to ignore them. You don't don't want to ignore them. You don't want to not know about them because they want to not know about them because they want to not know about them because they still still still exist. Okay. So from now on I'm going to exist. Okay. So from now on I'm going to exist. Okay. So from now on I'm going to just go through the five process well just go through the five process well just go through the five process well process steps if you like as well as six process steps if you like as well as six process steps if you like as well as six security documentation one and just security documentation one and just security documentation one and just going going going to tell a bit more about what kind of to tell a bit more about what kind of to tell a bit more about what kind of things we've learned and what kind of things we've learned and what kind of things we've learned and what kind of specific decisions we've made about specific decisions we've made about specific decisions we've made about these. Feel free to interrupt me. Feel these. Feel free to interrupt me. Feel these. Feel free to interrupt me. Feel free to ask any questions about these as free to ask any questions about these as free to ask any questions about these as we go along rather than writing them we go along rather than writing them we go along rather than writing them down and asking after the fact. So down and asking after the fact. So down and asking after the fact. So that's perfectly okay. Just, you know, that's perfectly okay. Just, you know, that's perfectly okay. Just, you know, we can walk up to that mic we can walk up to that mic we can walk up to that mic there. Oh, there's a question. Can you there. Oh, there's a question. Can you there. Oh, there's a question. Can you talk a little bit more about the talk a little bit more about the talk a little bit more about the modeling? The threat modeling. It's the modeling? The threat modeling. It's the modeling? The threat modeling. It's the first one. Perfect timing. So it was the first one in the timing. So it was the first one in the timing. So it was the first one in the diagram. Where was the diagram? Here. So diagram. Where was the diagram? Here. So diagram. Where was the diagram? Here. So I'm just going to go through them in I'm just going to go through them in I'm just going to go through them in order and thread modeling being the order and thread modeling being the order and thread modeling being the first one. Okay. first one. Okay. first one. Okay. Yes. Right. So here's an Yes. Right. So here's an Yes. Right. So here's an opinion. Thread modeling can actually be opinion. Thread modeling can actually be opinion. Thread modeling can actually be done by product teams and is best done done by product teams and is best done done by product teams and is best done by product teams. It is an opinion. I by product teams. It is an opinion. I by product teams. It is an opinion. I don't believe that necessarily the don't believe that necessarily the don't believe that necessarily the holder of the ultimate holder of the ultimate holder of the ultimate truth. But the product teams do actually truth. But the product teams do actually truth. But the product teams do actually understand their product best. Right? So understand their product best. Right? So understand their product best. Right? So it makes sense for them. You don't they it makes sense for them. You don't they it makes sense for them. You don't they wouldn't necessarily have cyber security wouldn't necessarily have cyber security wouldn't necessarily have cyber security training. They wouldn't necessarily have training. They wouldn't necessarily have training. They wouldn't necessarily have cyber security knowledge or experience cyber security knowledge or experience cyber security knowledge or experience doing threat modeling. But we can help doing threat modeling. But we can help doing threat modeling. But we can help them gain enough knowledge, enough them gain enough knowledge, enough them gain enough knowledge, enough understanding to actually perform threat understanding to actually perform threat understanding to actually perform threat modeling. And this is what we've done at modeling. And this is what we've done at modeling. And this is what we've done at Clonical. And it works. It isn't simple, right? Um, it is It isn't simple, right? Um, it is It isn't simple, right? Um, it is complex. You have a lot of choices. You complex. You have a lot of choices. You complex. You have a lot of choices. You have to, and this is beyond just have to, and this is beyond just have to, and this is beyond just understanding what the architecture of understanding what the architecture of understanding what the architecture of your product is. It's also about your product is. It's also about your product is. It's also about understanding what is important and what understanding what is important and what understanding what is important and what is less important to focus on. And this is less important to focus on. And this is less important to focus on. And this is why there's so many threat modeling is why there's so many threat modeling is why there's so many threat modeling methodologies out there, right? It's methodologies out there, right? It's methodologies out there, right? It's they're there to provide guidance. they're there to provide guidance. they're there to provide guidance. They're there to help. These are the stages that um we help. These are the stages that um we help. These are the stages that um we effectively ask our teams to focus on. effectively ask our teams to focus on. effectively ask our teams to focus on. First one is to define what the target First one is to define what the target First one is to define what the target of evaluation is. Effectively, what is of evaluation is. Effectively, what is of evaluation is. Effectively, what is within the scope of our threat modeling, within the scope of our threat modeling, within the scope of our threat modeling, but more importantly, what isn't within but more importantly, what isn't within but more importantly, what isn't within the scope, right? Because remember the the scope, right? Because remember the the scope, right? Because remember the product is going to be deployed within a product is going to be deployed within a product is going to be deployed within a context. You don't you can't get all of context. You don't you can't get all of context. You don't you can't get all of that context in there because it's just that context in there because it's just that context in there because it's just going to the scope is going to grow so going to the scope is going to grow so going to the scope is going to grow so much that you'll never actually finish much that you'll never actually finish much that you'll never actually finish any sort of threat any sort of threat any sort of threat modeling. Based on that you then modeling. Based on that you then modeling. Based on that you then identify the most important identify the most important identify the most important aspects assets that you've got and these aspects assets that you've got and these aspects assets that you've got and these are what crown jewels and stepping are what crown jewels and stepping are what crown jewels and stepping stones. The crown jewels being the stones. The crown jewels being the stones. The crown jewels being the critical assets, the one that really critical assets, the one that really critical assets, the one that really matter. matter. matter. Think assets that have high Think assets that have high Think assets that have high confidentiality, integrity or confidentiality, integrity or confidentiality, integrity or availability properties, requirements, availability properties, requirements, availability properties, requirements, right? Stepping stones are assets that right? Stepping stones are assets that right? Stepping stones are assets that can allow a thread actor can allow a thread actor can allow a thread actor to gain access to your crown jewels. to gain access to your crown jewels. to gain access to your crown jewels. They are assets that if they were to be They are assets that if they were to be They are assets that if they were to be compromised, it might lead to an easier compromised, it might lead to an easier compromised, it might lead to an easier path towards the crown jewels. And these path towards the crown jewels. And these path towards the crown jewels. And these are also important assets to take into account. And then we connect these account. And then we connect these account. And then we connect these assets with data flows. So you're going assets with data flows. So you're going assets with data flows. So you're going to have entry points and exit points to have entry points and exit points to have entry points and exit points within your system, within your product. within your system, within your product. within your system, within your product. and you're going to have trust and you're going to have trust and you're going to have trust boundaries. So if you can unfortunately boundaries. So if you can unfortunately boundaries. So if you can unfortunately I don't have a nice diagram here but if I don't have a nice diagram here but if I don't have a nice diagram here but if you you you can imagine this actually is going to can imagine this actually is going to can imagine this actually is going to end up looking like a graph right you're end up looking like a graph right you're end up looking like a graph right you're going to have nodes that represent your going to have nodes that represent your going to have nodes that represent your assets whether they're crown jewels or assets whether they're crown jewels or assets whether they're crown jewels or stepping stones or external entities stepping stones or external entities stepping stones or external entities that interact with them and you're going that interact with them and you're going that interact with them and you're going to have data flows that represent the to have data flows that represent the to have data flows that represent the edges between your nodes and how they edges between your nodes and how they edges between your nodes and how they effectively effectively effectively how they interact with each other, how they interact with each other, how they interact with each other, right? The trust boundaries are right? The trust boundaries are right? The trust boundaries are effectively where there is effectively where there is effectively where there is a difference in the way a difference in the way a difference in the way we we we treat the trust in those assets. Right? treat the trust in those assets. Right? treat the trust in those assets. Right? So, we're going to have a trust bound. So, we're going to have a trust bound. So, we're going to have a trust bound. We're going to trust the data in the We're going to trust the data in the We're going to trust the data in the database that's already there different database that's already there different database that's already there different than the data that is received than the data that is received than the data that is received from user input from an external source. from user input from an external source. from user input from an external source. Right? Any data flow that's between Right? Any data flow that's between Right? Any data flow that's between these is going to automatically have a these is going to automatically have a these is going to automatically have a trust boundary. That is concept. trust boundary. That is concept. trust boundary. That is concept. Once you have this graph and we Once you have this graph and we Once you have this graph and we definitely strongly encourage people to definitely strongly encourage people to definitely strongly encourage people to literally draw that graph, the next step literally draw that graph, the next step literally draw that graph, the next step is to identify and quantify threats. threats. threats. This means potentially using a threat This means potentially using a threat This means potentially using a threat catalog, but we've also found that it catalog, but we've also found that it catalog, but we've also found that it does actually work quite well if we let does actually work quite well if we let does actually work quite well if we let people just think about it. Just think people just think about it. Just think people just think about it. Just think about the threats that they can consider about the threats that they can consider about the threats that they can consider to their assets. to their assets. to their assets. giving them a specific thread catalog giving them a specific thread catalog giving them a specific thread catalog could potentially lead to um could potentially lead to um could potentially lead to um overfocusing on what's there and not overfocusing on what's there and not overfocusing on what's there and not just letting your imagination fly. Right? First step, mitigating controls. Right? First step, mitigating controls. Right? First step, mitigating controls. You have assets which you care about. You have assets which you care about. You have assets which you care about. You identify threats to them. What do You identify threats to them. What do You identify threats to them. What do you do to protect them? What do you you do to protect them? What do you you do to protect them? What do you already do to protect them? What do you already do to protect them? What do you already do to protect them? What do you plan on doing next? That's the fifth plan on doing next? That's the fifth plan on doing next? That's the fifth step. Residual risk, right? On if you step. Residual risk, right? On if you step. Residual risk, right? On if you don't have if the risk identified by the don't have if the risk identified by the don't have if the risk identified by the threats to your assets is too high, you threats to your assets is too high, you threats to your assets is too high, you want extra controls. That's the residual want extra controls. That's the residual want extra controls. That's the residual risk bit. And do this continuously risk bit. And do this continuously risk bit. And do this continuously because your systems are going to because your systems are going to because your systems are going to change. You can't just do thread change. You can't just do thread change. You can't just do thread modeling on a system once and then keep modeling on a system once and then keep modeling on a system once and then keep it for five years. you're going to want it for five years. you're going to want it for five years. you're going to want to do it on a regular to do it on a regular to do it on a regular basis. You don't have to start from basis. You don't have to start from basis. You don't have to start from scratch, right? You can take the scratch, right? You can take the scratch, right? You can take the previous model and look at what previous model and look at what previous model and look at what differences there have been since that differences there have been since that differences there have been since that version. You can look at what may have version. You can look at what may have version. You can look at what may have changed in the context as well because changed in the context as well because changed in the context as well because context does change. Risks might context does change. Risks might context does change. Risks might actually change without anything actually change without anything actually change without anything internally having changed. internally having changed. internally having changed. It's just something that can happen. Pain happen. Pain happen. Pain points. Defining points. Defining points. Defining the scope is one of the clearest thing, the scope is one of the clearest thing, the scope is one of the clearest thing, right? It's one of the most important right? It's one of the most important right? It's one of the most important things and we have found that teams things and we have found that teams things and we have found that teams might actually end up thinking about might actually end up thinking about might actually end up thinking about products that are products that are products that are outside the scope of a threat model. outside the scope of a threat model. outside the scope of a threat model. they are within a larger deployment they are within a larger deployment they are within a larger deployment context, but including them in the context, but including them in the context, but including them in the thread modeling is just going to thread modeling is just going to thread modeling is just going to complicate things and it's going to make complicate things and it's going to make complicate things and it's going to make it a very complex and probably not it a very complex and probably not it a very complex and probably not worthy exercise. So, think about worthy exercise. So, think about worthy exercise. So, think about something like um Linux running on something like um Linux running on something like um Linux running on Windows Subsystem for Linux, right? Um Windows Subsystem for Linux, right? Um Windows Subsystem for Linux, right? Um you don't want all of the dependencies you don't want all of the dependencies you don't want all of the dependencies to be taken into account to be taken into account to be taken into account there. So, limiting the scope is quite there. So, limiting the scope is quite there. So, limiting the scope is quite important. If you've got assets, you important. If you've got assets, you important. If you've got assets, you really are supposed to have data flows really are supposed to have data flows really are supposed to have data flows to them. Sometimes they're not to them. Sometimes they're not to them. Sometimes they're not incredibly obvious, but if you don't incredibly obvious, but if you don't incredibly obvious, but if you don't have data flows, then it, you know, have data flows, then it, you know, have data flows, then it, you know, that's a threat model that doesn't that's a threat model that doesn't that's a threat model that doesn't really make sense. It's a diagram that really make sense. It's a diagram that really make sense. It's a diagram that doesn't make doesn't make doesn't make sense. You really don't want to miss sense. You really don't want to miss sense. You really don't want to miss assets. You want to get your team to assets. You want to get your team to assets. You want to get your team to really sit down and think about your really sit down and think about your really sit down and think about your crown jewels and stepping crown jewels and stepping crown jewels and stepping stones. And if you have any assets that stones. And if you have any assets that stones. And if you have any assets that have critical confidentiality, integrity have critical confidentiality, integrity have critical confidentiality, integrity or availability requirements. I know or availability requirements. I know or availability requirements. I know that only says confidentiality, but it that only says confidentiality, but it that only says confidentiality, but it applies to any of the three properties, applies to any of the three properties, applies to any of the three properties, right? You really are supposed to right? You really are supposed to right? You really are supposed to identify some threats to it. You really identify some threats to it. You really identify some threats to it. You really should sit down and think about what should sit down and think about what should sit down and think about what threats there are to these properties. And the thing that we found to be most And the thing that we found to be most And the thing that we found to be most prevalent is that people often don't prevalent is that people often don't prevalent is that people often don't think about controls that they have think about controls that they have think about controls that they have built into the system from built into the system from built into the system from design because they consider them to design because they consider them to design because they consider them to be be be implicit. But the fact is they're always implicit. But the fact is they're always implicit. But the fact is they're always mitigating controls which might fail. mitigating controls which might fail. mitigating controls which might fail. Think about a system that uses TLS to Think about a system that uses TLS to Think about a system that uses TLS to protect confidentiality and integrity in protect confidentiality and integrity in protect confidentiality and integrity in transit. transit. transit. people are just going to say, "Oh, we're people are just going to say, "Oh, we're people are just going to say, "Oh, we're not going to have any threats to not going to have any threats to not going to have any threats to confidentiality um or integrity or for confidentiality um or integrity or for confidentiality um or integrity or for data in transit because we use TLS." data in transit because we use TLS." data in transit because we use TLS." Actually, TLS needs to be captured on Actually, TLS needs to be captured on Actually, TLS needs to be captured on threat modeling because it is a control. threat modeling because it is a control. threat modeling because it is a control. And the fact is, yes, it may work today, And the fact is, yes, it may work today, And the fact is, yes, it may work today, it may not work tomorrow. We have had it may not work tomorrow. We have had it may not work tomorrow. We have had experience with TLS being broken in the experience with TLS being broken in the experience with TLS being broken in the past, right? I need to pick up a bit actually. Static I need to pick up a bit actually. Static I need to pick up a bit actually. Static code code code analysis. Oh, question. analysis. Oh, question. analysis. Oh, question. Those sessions are those like round table sessions are those like round table sessions are those like round table exercises or Yes, we've done. So, uh the exercises or Yes, we've done. So, uh the exercises or Yes, we've done. So, uh the question was what do the sessions question was what do the sessions question was what do the sessions actually look like when we work with the actually look like when we work with the actually look like when we work with the team? We work remotely. We meet in team? We work remotely. We meet in team? We work remotely. We meet in person twice a year. We have done both person twice a year. We have done both person twice a year. We have done both roundtable exercises with the team and roundtable exercises with the team and roundtable exercises with the team and pass the initial guidance and examples pass the initial guidance and examples pass the initial guidance and examples of how to do this. We've also then sit of how to do this. We've also then sit of how to do this. We've also then sit sat down to see what they've come up sat down to see what they've come up sat down to see what they've come up with and see if they need further with and see if they need further with and see if they need further guidance but also asynchronous guidance but also asynchronous guidance but also asynchronous communication and remote virtual communication and remote virtual communication and remote virtual meetings further down the line as well. meetings further down the line as well. meetings further down the line as well. So yes, we do provide guidance to the So yes, we do provide guidance to the So yes, we do provide guidance to the teams, but they I still believe they are teams, but they I still believe they are teams, but they I still believe they are best placed to perform this kind of best placed to perform this kind of best placed to perform this kind of threat modeling exercise. Okay, static code analysis. We exercise. Okay, static code analysis. We exercise. Okay, static code analysis. We use to track code quality. Um that's a use to track code quality. Um that's a use to track code quality. Um that's a link there to our blog post where we link there to our blog post where we link there to our blog post where we mention this. mention this. mention this. Integrating static code analysis, any Integrating static code analysis, any Integrating static code analysis, any sort of static code analysis tool in a sort of static code analysis tool in a sort of static code analysis tool in a CI pipeline is going CI pipeline is going CI pipeline is going to result in a lower barrier. People are to result in a lower barrier. People are to result in a lower barrier. People are going to not worry about it less and going to not worry about it less and going to not worry about it less and it's going to be automated and it's it's going to be automated and it's it's going to be automated and it's going to be part of daytoday because going to be part of daytoday because going to be part of daytoday because this is what we want to do. We want to this is what we want to do. We want to this is what we want to do. We want to make sure that security is just part of make sure that security is just part of make sure that security is just part of your day-to-day usual stuff. your day-to-day usual stuff. your day-to-day usual stuff. We have seen code quality We have seen code quality We have seen code quality improvements trackable through improvements trackable through improvements trackable through metrics and is great and teams are quite metrics and is great and teams are quite metrics and is great and teams are quite excited to also see those as well excited to also see those as well excited to also see those as well because they do genuinely care about the because they do genuinely care about the because they do genuinely care about the quality of their quality of their quality of their products. One thing I want to mention products. One thing I want to mention products. One thing I want to mention about static code analysis is about static code analysis is about static code analysis is that they are not no tool is going to that they are not no tool is going to that they are not no tool is going to cover everything. cover everything. cover everything. It does not mean that if you run a It does not mean that if you run a It does not mean that if you run a static code analysis tool such as I static code analysis tool such as I static code analysis tool such as I don't know Bandit for Python that is don't know Bandit for Python that is don't know Bandit for Python that is specifically aimed at finding security specifically aimed at finding security specifically aimed at finding security issues. It doesn't mean that you're issues. It doesn't mean that you're issues. It doesn't mean that you're going to it's going to find all security going to it's going to find all security going to it's going to find all security issues. People need to understand that issues. People need to understand that issues. People need to understand that because they can't rely on a thumbs up because they can't rely on a thumbs up because they can't rely on a thumbs up from bandit to be translatable to no from bandit to be translatable to no from bandit to be translatable to no security issues in their code. A false security issues in their code. A false security issues in their code. A false sense of security is really dangerous. Vulnerability scanning. You we use off the shelf scanning. You we use off the shelf scanning. You we use off the shelf several vulnerability scanners and we several vulnerability scanners and we several vulnerability scanners and we primarily use these for all of the primarily use these for all of the primarily use these for all of the artifacts that we artifacts that we artifacts that we distribute. So that includes everything distribute. So that includes everything distribute. So that includes everything in a buntto charms, snaps, other stuff. It's obviously important to understand It's obviously important to understand It's obviously important to understand and to explain the fact that these and to explain the fact that these and to explain the fact that these scanners generally rely on identifying scanners generally rely on identifying scanners generally rely on identifying known vulnerabilities. They will not known vulnerabilities. They will not known vulnerabilities. They will not find issues in code find issues in code find issues in code that haven't been previously identified that haven't been previously identified that haven't been previously identified as as as vulnerabilities, but they are very vulnerabilities, but they are very vulnerabilities, but they are very useful for dependency management. It's also important to remember that It's also important to remember that It's also important to remember that scanners are different. They take scanners are different. They take scanners are different. They take different approaches. They have different approaches. They have different approaches. They have different huristics. You if you test different huristics. You if you test different huristics. You if you test them, you will find that they give them, you will find that they give them, you will find that they give different results in different ways. So different results in different ways. So different results in different ways. So you need to test them all out and figure you need to test them all out and figure you need to test them all out and figure out which one is good. You also need to out which one is good. You also need to out which one is good. You also need to figure out how often to run them. figure out how often to run them. figure out how often to run them. And it is ideal to make sure that every And it is ideal to make sure that every And it is ideal to make sure that every single release does get scanned. But single release does get scanned. But single release does get scanned. But don't forget vulnerabilities get don't forget vulnerabilities get don't forget vulnerabilities get discovered in the future as well. So if discovered in the future as well. So if discovered in the future as well. So if you have a clean bill of health from at you have a clean bill of health from at you have a clean bill of health from at release time, it does not mean that in release time, it does not mean that in release time, it does not mean that in two weeks time it's also going to be a two weeks time it's also going to be a two weeks time it's also going to be a clean bill of health. So each artifact clean bill of health. So each artifact clean bill of health. So each artifact needs to be rescanned needs to be rescanned needs to be rescanned periodically forever. Basic well periodically forever. Basic well periodically forever. Basic well basically at least until it's no longer basically at least until it's no longer basically at least until it's no longer supported. And you need and you're going to find And you need and you're going to find And you need and you're going to find false positives and you're going to find false positives and you're going to find false positives and you're going to find true positives and you need to make sure true positives and you need to make sure true positives and you need to make sure that your teams know how to handle them that your teams know how to handle them that your teams know how to handle them and that they handle them as business as usual. Question from Discord or oh five usual. Question from Discord or oh five usual. Question from Discord or oh five minutes. minutes. minutes. Okay. Penetration test mentioned Okay. Penetration test mentioned Okay. Penetration test mentioned previously. questions questions questions teams as business official and not as teams as business official and not as teams as business official and not as new things coming in on top of their new things coming in on top of their new things coming in on top of their spread. spread. spread. So the question was how did we convince So the question was how did we convince So the question was how did we convince our teams to handle vulnerabilities as our teams to handle vulnerabilities as our teams to handle vulnerabilities as business as usual as opposed to business as usual as opposed to business as usual as opposed to something that comes something that comes something that comes in as extra work? Well, the idea is to in as extra work? Well, the idea is to in as extra work? Well, the idea is to effectively make sure that they put time effectively make sure that they put time effectively make sure that they put time aside for that and that they expect that aside for that and that they expect that aside for that and that they expect that they will get them. Tell them that, you they will get them. Tell them that, you they will get them. Tell them that, you know, it's just normal. They exist. know, it's just normal. They exist. know, it's just normal. They exist. You're going to find new vulnerabilities You're going to find new vulnerabilities You're going to find new vulnerabilities in your product as well. Disclosed in your product as well. Disclosed in your product as well. Disclosed possibly by third parties too. And you possibly by third parties too. And you possibly by third parties too. And you shouldn't run around in a panic. That shouldn't run around in a panic. That shouldn't run around in a panic. That was that's actually in the next slide. was that's actually in the next slide. was that's actually in the next slide. mobility response regarding penetration tests. So response regarding penetration tests. So response regarding penetration tests. So I mentioned we do threatled penetration I mentioned we do threatled penetration I mentioned we do threatled penetration tests and that means it's very useful to tests and that means it's very useful to tests and that means it's very useful to define clearly define the scope of the define clearly define the scope of the define clearly define the scope of the third party penetration test by giving third party penetration test by giving third party penetration test by giving that third party your threat model. It that third party your threat model. It that third party your threat model. It really helps to ensure that it focuses really helps to ensure that it focuses really helps to ensure that it focuses on the most important aspects of your on the most important aspects of your on the most important aspects of your product. And as a fun fact, threatled product. And as a fun fact, threatled product. And as a fun fact, threatled penetration testing is actually mandated penetration testing is actually mandated penetration testing is actually mandated by the EU DORAP regulation which covers by the EU DORAP regulation which covers by the EU DORAP regulation which covers financial sector. So we've been talking financial sector. So we've been talking financial sector. So we've been talking about regulations a fair bit about regulations a fair bit about regulations a fair bit here. Vulnerability response mentioned previously business response mentioned previously business response mentioned previously business as usual. Don't run around like headless as usual. Don't run around like headless as usual. Don't run around like headless chicken. It it has to be business as chicken. It it has to be business as chicken. It it has to be business as usual because you will find usual because you will find usual because you will find vulnerabilities. you will have vulnerabilities. you will have vulnerabilities. you will have vulnerabilities disclosed and the idea vulnerabilities disclosed and the idea vulnerabilities disclosed and the idea is to have a consistent way of handling is to have a consistent way of handling is to have a consistent way of handling them and a way to prioritize them. What them and a way to prioritize them. What them and a way to prioritize them. What we found as things that don't exactly we found as things that don't exactly we found as things that don't exactly come come come naturally naturally naturally is making sure that we actually define is making sure that we actually define is making sure that we actually define lifetime life cycle for a product so lifetime life cycle for a product so lifetime life cycle for a product so that we say okay we're going to actually that we say okay we're going to actually that we say okay we're going to actually support this product for precisely this support this product for precisely this support this product for precisely this moment of time and we will handle moment of time and we will handle moment of time and we will handle vulnerabilities within this support vulnerabilities within this support vulnerabilities within this support period. Prioritization. Not all period. Prioritization. Not all period. Prioritization. Not all vulnerabilities disclosed are equal. vulnerabilities disclosed are equal. vulnerabilities disclosed are equal. Some are going to be pretty bad. Some Some are going to be pretty bad. Some Some are going to be pretty bad. Some are going to are going to are going to be interesting. Some are going to be a be interesting. Some are going to be a be interesting. Some are going to be a bit meh, but still vulnerabilities still bit meh, but still vulnerabilities still bit meh, but still vulnerabilities still need to be addressed. But need to be addressed. But need to be addressed. But prioritization, it doesn't mean that you prioritization, it doesn't mean that you prioritization, it doesn't mean that you stop everything if a low vulnerability stop everything if a low vulnerability stop everything if a low vulnerability is disclosed. It does mean you stop is disclosed. It does mean you stop is disclosed. It does mean you stop everything if a critical one is everything if a critical one is everything if a critical one is disclosed. Considering disclosed. Considering disclosed. Considering mitigations, product teams will want to mitigations, product teams will want to mitigations, product teams will want to fix things. Sometimes that fix isn't fix things. Sometimes that fix isn't fix things. Sometimes that fix isn't easy. easy. easy. So sometimes we might be in a better So sometimes we might be in a better So sometimes we might be in a better position to provide mitigations much position to provide mitigations much position to provide mitigations much sooner especially if a vulnerability has sooner especially if a vulnerability has sooner especially if a vulnerability has been made public and this doesn't been made public and this doesn't been made public and this doesn't necessarily come natural to productivity necessarily come natural to productivity necessarily come natural to productivity because they want to fix the root cause because they want to fix the root cause because they want to fix the root cause which is great but again this comes down which is great but again this comes down which is great but again this comes down to to to prioritization and having a consistent prioritization and having a consistent prioritization and having a consistent way to tell the rest of the world way to tell the rest of the world way to tell the rest of the world how what it is that was broken. what is how what it is that was broken. what is how what it is that was broken. what is being done, keep them a breast of being done, keep them a breast of being done, keep them a breast of developments and tell them how to developments and tell them how to developments and tell them how to address the address the address the issue. And the whole you can't just issue. And the whole you can't just issue. And the whole you can't just communicate once when you've got patches communicate once when you've got patches communicate once when you've got patches out out out there because your users also panic and there because your users also panic and there because your users also panic and you have to have a bit of empathy you have to have a bit of empathy you have to have a bit of empathy towards that panic. Security policy is a great way to tell Security policy is a great way to tell Security policy is a great way to tell our your users about how to disclose our your users about how to disclose our your users about how to disclose vulnerabilities, but also how you handle vulnerabilities, but also how you handle vulnerabilities, but also how you handle them. And it's great to have this kind them. And it's great to have this kind them. And it's great to have this kind of of of transparency. And if your project is on transparency. And if your project is on transparency. And if your project is on GitHub, we definitely recommend using GitHub, we definitely recommend using GitHub, we definitely recommend using the security advisory features that the security advisory features that the security advisory features that allows third parties to disclose allows third parties to disclose allows third parties to disclose vulnerabilities under an embargo as vulnerabilities under an embargo as vulnerabilities under an embargo as well. well. well. Last topic, security Last topic, security Last topic, security documentation. You know it documentation documentation. You know it documentation documentation. You know it documentation is great. Writing it is difficult. is great. Writing it is difficult. is great. Writing it is difficult. This is what we've asked our teams to write or to think write or to think write or to think about first of all to think about who is about first of all to think about who is about first of all to think about who is actually going to use the documentation actually going to use the documentation actually going to use the documentation because there are different personas because there are different personas because there are different personas that are interested in different angles that are interested in different angles that are interested in different angles whether it's system administrators whether it's system administrators whether it's system administrators whether it's end users that just use the whether it's end users that just use the whether it's end users that just use the product. Discuss risks. Take your threat product. Discuss risks. Take your threat product. Discuss risks. Take your threat modeling. Tell users about the risks modeling. Tell users about the risks modeling. Tell users about the risks you've identified so that they're aware you've identified so that they're aware you've identified so that they're aware of it. of it. of it. Discuss information security. Discuss Discuss information security. Discuss Discuss information security. Discuss what happens if and how information what happens if and how information what happens if and how information could be lost or could be held longer could be lost or could be held longer could be lost or could be held longer than you wanted it to or it could be than you wanted it to or it could be than you wanted it to or it could be inadvertently disclosed by a user of inadvertently disclosed by a user of inadvertently disclosed by a user of your system. Tell users how your system your system. Tell users how your system your system. Tell users how your system could possibly lead to these kinds of could possibly lead to these kinds of could possibly lead to these kinds of risks. Security sensitive functions very Security sensitive functions very Security sensitive functions very important to cover. Authentication being important to cover. Authentication being important to cover. Authentication being an example of that. Cryptography really an example of that. Cryptography really an example of that. Cryptography really important to cover as well because important to cover as well because important to cover as well because cryptography is a moving target. It cryptography is a moving target. It cryptography is a moving target. It always changes. You can't just say, "Oh, always changes. You can't just say, "Oh, always changes. You can't just say, "Oh, I throw encryption at that." Really, I throw encryption at that." Really, I throw encryption at that." Really, what encryption? How to do what? It's what encryption? How to do what? It's what encryption? How to do what? It's not a magic wand, right? It's meant to not a magic wand, right? It's meant to not a magic wand, right? It's meant to protect certain protect certain protect certain things. And how to guides tell people things. And how to guides tell people things. And how to guides tell people how to use your product in a secure way. I'm going to skip through this way. I'm going to skip through this way. I'm going to skip through this because I'm actually running out of time because I'm actually running out of time because I'm actually running out of time because I wanted to get here. Security because I wanted to get here. Security because I wanted to get here. Security howto howto howto guides. We've asked our teams to write guides. We've asked our teams to write guides. We've asked our teams to write these kinds of how to guides a a these kinds of how to guides a a these kinds of how to guides a a checklist what people need to get checklist what people need to get checklist what people need to get through to actually through to actually through to actually um or to think about in terms of um or to think about in terms of um or to think about in terms of security before they use a security before they use a security before they use a product. How most the most important product. How most the most important product. How most the most important security authentication most common security authentication most common security authentication most common security authentication functions are security authentication functions are security authentication functions are used. Security functions are used. used. Security functions are used. used. Security functions are used. authentication, authentication, authentication, authorization, backups, that's security, authorization, backups, that's security, authorization, backups, that's security, right? You want availability of your right? You want availability of your right? You want availability of your data and a hardening data and a hardening data and a hardening guide because you are not going to have guide because you are not going to have guide because you are not going to have your product deployed in the same your product deployed in the same your product deployed in the same context context context and it needs to be adapted and people and it needs to be adapted and people and it needs to be adapted and people need to know exactly what knobs to turn need to know exactly what knobs to turn need to know exactly what knobs to turn to secure that your product in their to secure that your product in their to secure that your product in their particular context. The links I've got particular context. The links I've got particular context. The links I've got there are basically two example of some there are basically two example of some there are basically two example of some of our products for mass and for JJU and of our products for mass and for JJU and of our products for mass and for JJU and the how-to guides that are public the how-to guides that are public the how-to guides that are public documentation. And that's it for documentation. And that's it for documentation. And that's it for me. Any questions? Thank you for your me. Any questions? Thank you for your me. Any questions? Thank you for your time and apologies for actually running time and apologies for actually running time and apologies for actually running a bit late.