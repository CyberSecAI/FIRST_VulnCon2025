Kind: captions Language: en This is breaking the bill. Uh how This is breaking the bill. Uh how This is breaking the bill. Uh how attackers abuse GitHub actions. All attackers abuse GitHub actions. All attackers abuse GitHub actions. All right. Uh I'll do a short introduction right. Uh I'll do a short introduction right. Uh I'll do a short introduction of myself then go over um give an of myself then go over um give an of myself then go over um give an overview of GitHub actions, the overview of GitHub actions, the overview of GitHub actions, the important parts of GitHub actions that important parts of GitHub actions that important parts of GitHub actions that you need to know for uh security. Um you need to know for uh security. Um you need to know for uh security. Um I'll then go over three different I'll then go over three different I'll then go over three different vulnerability types. uh action vulnerability types. uh action vulnerability types. uh action expression injection poison pipeline expression injection poison pipeline expression injection poison pipeline execution and then a supply chain chat execution and then a supply chain chat execution and then a supply chain chat attack. Right. Who am I? I am Jonathan attack. Right. Who am I? I am Jonathan attack. Right. Who am I? I am Jonathan Evans the uh a GitHub advisory Evans the uh a GitHub advisory Evans the uh a GitHub advisory coordinator or curator uh on the um so I coordinator or curator uh on the um so I coordinator or curator uh on the um so I publish advisories to the GitHub publish advisories to the GitHub publish advisories to the GitHub database and I assign CVIDs to database and I assign CVIDs to database and I assign CVIDs to vulnerabilities in uh GitHub repos. Uh, vulnerabilities in uh GitHub repos. Uh, vulnerabilities in uh GitHub repos. Uh, prior to joining GitHub, uh, I worked on prior to joining GitHub, uh, I worked on prior to joining GitHub, uh, I worked on the CV program at MITER for 10 years. the CV program at MITER for 10 years. the CV program at MITER for 10 years. Can they not hear Can they not hear Can they not hear me? me? me? Okay. Can you hear me Okay. Can you hear me Okay. Can you hear me now? now? now? Okay. So, who am I? I'm not Okay. So, who am I? I'm not Okay. So, who am I? I'm not important. All right. Um, what what are important. All right. Um, what what are important. All right. Um, what what are GitHub actions? Um, GitHub actions are a GitHub actions? Um, GitHub actions are a GitHub actions? Um, GitHub actions are a feature in GitHub that allow you to feature in GitHub that allow you to feature in GitHub that allow you to automate workflows, uh, including your automate workflows, uh, including your automate workflows, uh, including your CI/CD and it'll let you build, test, and CI/CD and it'll let you build, test, and CI/CD and it'll let you build, test, and deploy your code right from deploy your code right from deploy your code right from GitHub. Um, a workflow is essentially a uh, a YAML file that um, is stored in.githubworkflows. Um, every workflow in.githubworkflows. Um, every workflow in.githubworkflows. Um, every workflow has three elements. It has a triggering has three elements. It has a triggering has three elements. It has a triggering event. Uh, that could be something like event. Uh, that could be something like event. Uh, that could be something like pushing a commit, uh, creating a pushing a commit, uh, creating a pushing a commit, uh, creating a comment, creating a pull request, things comment, creating a pull request, things comment, creating a pull request, things like that. You can also schedule them to like that. You can also schedule them to like that. You can also schedule them to um to execute or run them on um to execute or run them on um to execute or run them on demand. Uh, there are each workflow has demand. Uh, there are each workflow has demand. Uh, there are each workflow has one or more jobs. Um, and those jobs um one or more jobs. Um, and those jobs um one or more jobs. Um, and those jobs um execute a number of steps. This is what a workflow looks This is what a workflow looks This is what a workflow looks like. It has a like. It has a like. It has a name. It has a trigger that it runs name. It has a trigger that it runs name. It has a trigger that it runs on. Um, it has one or more jobs here. on. Um, it has one or more jobs here. on. Um, it has one or more jobs here. This, in this case, there's only This, in this case, there's only This, in this case, there's only one. It has an uh runner that it one. It has an uh runner that it one. It has an uh runner that it executes on. I'll go get into more on executes on. I'll go get into more on executes on. I'll go get into more on that later. Then it has one or more that later. Then it has one or more that later. Then it has one or more steps. In this case, it checks out the steps. In this case, it checks out the steps. In this case, it checks out the code. code. code. um so that it can do onto the machine um so that it can do onto the machine um so that it can do onto the machine that it's running on so that it can that it's running on so that it can that it's running on so that it can later do additional steps on that later do additional steps on that later do additional steps on that code. Uh it then sets up node. It passes code. Uh it then sets up node. It passes code. Uh it then sets up node. It passes uh the node version 20 as a parameter to uh the node version 20 as a parameter to uh the node version 20 as a parameter to the action with the with the action with the with the action with the with keyword. Uh it then runs uh shell keyword. Uh it then runs uh shell keyword. Uh it then runs uh shell commands uh npm install and bats version, right? version, right? version, right? Uh every job runs on a runner which uh Uh every job runs on a runner which uh Uh every job runs on a runner which uh is either a self-hosted machine or u is either a self-hosted machine or u is either a self-hosted machine or u GitHub will spin up new VMs for you. Uh GitHub will spin up new VMs for you. Uh GitHub will spin up new VMs for you. Uh you have an options of Iuntu, Windows you have an options of Iuntu, Windows you have an options of Iuntu, Windows and Mac. Um you can run every job in a and Mac. Um you can run every job in a and Mac. Um you can run every job in a workflow runs in parallel unless workflow runs in parallel unless workflow runs in parallel unless otherwise otherwise otherwise specified. Uh and once they run all of specified. Uh and once they run all of specified. Uh and once they run all of the steps within the job uh the VM is the steps within the job uh the VM is the steps within the job uh the VM is decommissioned. Um the steps run in the decommissioned. Um the steps run in the decommissioned. Um the steps run in the same OS so they can pass around same OS so they can pass around same OS so they can pass around information within the OS. Every workflow um gets a GitHub OS. Every workflow um gets a GitHub OS. Every workflow um gets a GitHub token. Uh the GitHub token determines token. Uh the GitHub token determines token. Uh the GitHub token determines what permissions um that workflow or job what permissions um that workflow or job what permissions um that workflow or job has to actually access GitHub um API and has to actually access GitHub um API and has to actually access GitHub um API and um information. So if a pull request um information. So if a pull request um information. So if a pull request triggers uh the event um you it will triggers uh the event um you it will triggers uh the event um you it will either depending on which trigger you either depending on which trigger you either depending on which trigger you use for pull request it will either give use for pull request it will either give use for pull request it will either give you read access to that pull request by you read access to that pull request by you read access to that pull request by default or it will give you um write default or it will give you um write default or it will give you um write privilege by default. Uh you can also privilege by default. Uh you can also privilege by default. Uh you can also override what permissions um it has at a override what permissions um it has at a override what permissions um it has at a workflow level or at a job level. Right. And that token gives you level. Right. And that token gives you level. Right. And that token gives you access to event context data. Um so you access to event context data. Um so you access to event context data. Um so you know if a pull pull request was created know if a pull pull request was created know if a pull pull request was created and triggered it you'll be able to read and triggered it you'll be able to read and triggered it you'll be able to read you know what's in the pull request, you know what's in the pull request, you know what's in the pull request, what the title is, who created that pull what the title is, who created that pull what the title is, who created that pull request, things like that. Um some of request, things like that. Um some of request, things like that. Um some of the the the um some of that information is user um some of that information is user um some of that information is user controlled. I have examples on the right controlled. I have examples on the right controlled. I have examples on the right here. here. here. Um, obviously you can't trust that data Um, obviously you can't trust that data Um, obviously you can't trust that data and so you have to handle that data very and so you have to handle that data very and so you have to handle that data very carefully within your workflow. Um, and then if you don't want workflow. Um, and then if you don't want workflow. Um, and then if you don't want to write your own, you can use to write your own, you can use to write your own, you can use pre-existing actions. GitHub has a pre-existing actions. GitHub has a pre-existing actions. GitHub has a marketplace where you can find um, marketplace where you can find um, marketplace where you can find um, actions that people have created and actions that people have created and actions that people have created and reuse them. Right on to the first them. Right on to the first them. Right on to the first vulnerability, actions expressions vulnerability, actions expressions vulnerability, actions expressions injection. uh as the name implies we are injection. uh as the name implies we are injection. uh as the name implies we are injecting injecting injecting uh data and attacks into um action uh data and attacks into um action uh data and attacks into um action expressions. So I have an example expressions. So I have an example expressions. So I have an example vulnerable job here. Uh this is CV 2023 vulnerable job here. Uh this is CV 2023 vulnerable job here. Uh this is CV 2023 3411. Uh the job is exposed to extract 3411. Uh the job is exposed to extract 3411. Uh the job is exposed to extract versions. versions. versions. It takes the GitHub pull request title It takes the GitHub pull request title It takes the GitHub pull request title uh and then pipes that into GP to uh get uh and then pipes that into GP to uh get uh and then pipes that into GP to uh get the version the version the version out. It then sets uh the version into out. It then sets uh the version into out. It then sets uh the version into the output so that later jobs can use the output so that later jobs can use the output so that later jobs can use that version that version that version information. The problem here is that information. The problem here is that information. The problem here is that they're pulling out the pull request they're pulling out the pull request they're pulling out the pull request title and the pull request title is title and the pull request title is title and the pull request title is controlled by the controlled by the controlled by the user, right? user, right? user, right? uh the action expression gets evaluated uh the action expression gets evaluated uh the action expression gets evaluated and replaced before the shell is run. So and replaced before the shell is run. So and replaced before the shell is run. So the shell just sees the string as a the shell just sees the string as a the shell just sees the string as a regular string that it tries to execute. regular string that it tries to execute. regular string that it tries to execute. Right? So you can do shell meta Right? So you can do shell meta Right? So you can do shell meta character attacks like you see here on character attacks like you see here on character attacks like you see here on the bottom right where uh it executes the bottom right where uh it executes the bottom right where uh it executes curl commands that sends the GitHub curl commands that sends the GitHub curl commands that sends the GitHub token to a attacker controlled domain. How do you protect against this? domain. How do you protect against this? domain. How do you protect against this? Um, you can use JavaScript actions, Um, you can use JavaScript actions, Um, you can use JavaScript actions, right? If you pass this as a parameter, right? If you pass this as a parameter, right? If you pass this as a parameter, it's not going to be interpreted as uh a it's not going to be interpreted as uh a it's not going to be interpreted as uh a shell shell shell command. Um, you can also use command. Um, you can also use command. Um, you can also use intermediate environment variables um intermediate environment variables um intermediate environment variables um such as see here where we set the title such as see here where we set the title such as see here where we set the title to an environment variable variable to an environment variable variable to an environment variable variable before execution. before execution. before execution. Um, when doing this, you have to be very Um, when doing this, you have to be very Um, when doing this, you have to be very aware of what shell you're using because aware of what shell you're using because aware of what shell you're using because you could still uh be attacked using you could still uh be attacked using you could still uh be attacked using like new line injection and globbing like new line injection and globbing like new line injection and globbing issues. So, uh, make sure your syntax is issues. So, uh, make sure your syntax is issues. So, uh, make sure your syntax is correct for your shell. Uh, next vulnerability type, shell. Uh, next vulnerability type, shell. Uh, next vulnerability type, poison pipeline execution. This is poison pipeline execution. This is poison pipeline execution. This is essentially you inject code into the essentially you inject code into the essentially you inject code into the pipeline um that then gets pipeline um that then gets pipeline um that then gets executed. Right? So we have an example executed. Right? So we have an example executed. Right? So we have an example here where um the job triggers on a here where um the job triggers on a here where um the job triggers on a comment created. Um this is a specific comment created. Um this is a specific comment created. Um this is a specific comment that comment that comment that um you know it it actually looks at the um you know it it actually looks at the um you know it it actually looks at the content of the comment to see whether or content of the comment to see whether or content of the comment to see whether or not it should run this workflow. not it should run this workflow. not it should run this workflow. um then creates a it checks out the pull um then creates a it checks out the pull um then creates a it checks out the pull request. Uh in this case that expression request. Uh in this case that expression request. Uh in this case that expression there that you see um is safe because there that you see um is safe because there that you see um is safe because GitHub issues the number the issue GitHub issues the number the issue GitHub issues the number the issue number the attacker can't control number the attacker can't control number the attacker can't control that and then it finally it um calls that and then it finally it um calls that and then it finally it um calls make on several files. make on several files. make on several files. problem here is that when you've checked problem here is that when you've checked problem here is that when you've checked out the pull request, those files you're out the pull request, those files you're out the pull request, those files you're calling make on are controlled by the calling make on are controlled by the calling make on are controlled by the user. So it's calling make on whatever user. So it's calling make on whatever user. So it's calling make on whatever commands it wants there. Uh how do you control for that? there. Uh how do you control for that? there. Uh how do you control for that? You basically have to restrict who can You basically have to restrict who can You basically have to restrict who can actually have write permissions to your actually have write permissions to your actually have write permissions to your uh repo. So you check you know whether uh repo. So you check you know whether uh repo. So you check you know whether or not they are uh within one of the or not they are uh within one of the or not they are uh within one of the approved um associations which leads me into my associations which leads me into my associations which leads me into my final vulnerability final vulnerability final vulnerability uh supply chains attacks. So this one's uh supply chains attacks. So this one's uh supply chains attacks. So this one's a little a little a little complicated. Um this is a very recent complicated. Um this is a very recent complicated. Um this is a very recent incident. incident. incident. Um Um Um so there's lots of steps in this just to so there's lots of steps in this just to so there's lots of steps in this just to remember. Um, the target appears to have remember. Um, the target appears to have remember. Um, the target appears to have been Coinbase, but they start out at been Coinbase, but they start out at been Coinbase, but they start out at spot bugs, sonar find spot bugs, sonar find spot bugs, sonar find bugs, right? And they use a PPE bugs, right? And they use a PPE bugs, right? And they use a PPE vulnerability to get as the first step, vulnerability to get as the first step, vulnerability to get as the first step, right? So, right? So, right? So, um, the sonar find bugs used one of um, the sonar find bugs used one of um, the sonar find bugs used one of these pull request request triggers, um, these pull request request triggers, um, these pull request request triggers, um, the pull request target, which gives the pull request target, which gives the pull request target, which gives write access by default. There's another write access by default. There's another write access by default. There's another pull request trigger that you can use pull request trigger that you can use pull request trigger that you can use for that only has read access by for that only has read access by for that only has read access by default. Uh but they decided to use this default. Uh but they decided to use this default. Uh but they decided to use this one instead. Um that they then were able one instead. Um that they then were able one instead. Um that they then were able to overwrite one of the files that was to overwrite one of the files that was to overwrite one of the files that was then executed and they were able to get then executed and they were able to get then executed and they were able to get the maintainer's personal access token. Um, a few days before this, the the Um, a few days before this, the the Um, a few days before this, the the maintainer decided that it was too maintainer decided that it was too maintainer decided that it was too difficult to try to figure out how to difficult to try to figure out how to difficult to try to figure out how to use the GitHub token to set the proper use the GitHub token to set the proper use the GitHub token to set the proper permissions. So, they decided to use permissions. So, they decided to use permissions. So, they decided to use their personal access token, which has their personal access token, which has their personal access token, which has all the access that the maintainer all the access that the maintainer all the access that the maintainer has. So, it ended up getting stolen. has. So, it ended up getting stolen. has. So, it ended up getting stolen. Um they then um use that permissions to Um they then um use that permissions to Um they then um use that permissions to create another um to add a new member to create another um to add a new member to create another um to add a new member to the um main to the repo. That that user the um main to the repo. That that user the um main to the repo. That that user then um created a pull request that then um created a pull request that then um created a pull request that stole all of the repo's secrets which in stole all of the repo's secrets which in stole all of the repo's secrets which in created included another maintainer's created included another maintainer's created included another maintainer's personal access token. And that personal access token. And that personal access token. And that maintainer's personal access token had maintainer's personal access token had maintainer's personal access token had access to both the spot bugs and review access to both the spot bugs and review access to both the spot bugs and review dog. And personal access tokens have all dog. And personal access tokens have all dog. And personal access tokens have all of the access from the maintainer. So it of the access from the maintainer. So it of the access from the maintainer. So it allowed him to transition to the review allowed him to transition to the review allowed him to transition to the review repo as repo as repo as well. So then took that was able to well. So then took that was able to well. So then took that was able to steal more secrets. Um in addition to steal more secrets. Um in addition to steal more secrets. Um in addition to that the um attacker changed the that the um attacker changed the that the um attacker changed the malicious commit to uh the version they malicious commit to uh the version they malicious commit to uh the version they they changed the version one tag of in they changed the version one tag of in they changed the version one tag of in GitHub to the malicious commit. Right? GitHub to the malicious commit. Right? GitHub to the malicious commit. Right? So if you have a version tag in GitHub, So if you have a version tag in GitHub, So if you have a version tag in GitHub, you can set that to whatever commit you you can set that to whatever commit you you can set that to whatever commit you want at whatever time. And so anybody want at whatever time. And so anybody want at whatever time. And so anybody who was previously using a safe version who was previously using a safe version who was previously using a safe version of version one was now going to be using of version one was now going to be using of version one was now going to be using an unsafe version of version an unsafe version of version an unsafe version of version one, right? which TG Actions ended up one, right? which TG Actions ended up one, right? which TG Actions ended up using and that allowed them to get TG using and that allowed them to get TG using and that allowed them to get TG Actions's personal access token um which they then used to add in an um which they then used to add in an um which they then used to add in an additional script um that would then additional script um that would then additional script um that would then steal uh would save any permissions from steal uh would save any permissions from steal uh would save any permissions from anybody running TJ actions anybody running TJ actions anybody running TJ actions um into the logs um into the logs um into the logs um which ended up hitting a bunch of um which ended up hitting a bunch of um which ended up hitting a bunch of repos. Um, they also changed the all of repos. Um, they also changed the all of repos. Um, they also changed the all of the version tags this time to the the version tags this time to the the version tags this time to the malicious commit. So, anybody using GJ malicious commit. So, anybody using GJ malicious commit. So, anybody using GJ actions was going to be actions was going to be actions was going to be affected. I said in the beginning, affected. I said in the beginning, affected. I said in the beginning, Coinbase appeared to be the target. Coinbase appeared to be the target. Coinbase appeared to be the target. Coinbase did appear to actually have run Coinbase did appear to actually have run Coinbase did appear to actually have run this and their credition credentials this and their credition credentials this and their credition credentials have been stolen. But within a few hours have been stolen. But within a few hours have been stolen. But within a few hours they had identified that and actually they had identified that and actually they had identified that and actually removed the workflow before the attacker removed the workflow before the attacker removed the workflow before the attacker changed all of the version tags um to changed all of the version tags um to changed all of the version tags um to the unsafe commit. All right. So how do you protect commit. All right. So how do you protect commit. All right. So how do you protect against that? You um don't use version against that? You um don't use version against that? You um don't use version tags when you're specifying which action tags when you're specifying which action tags when you're specifying which action you're using. spec use the full um Shaw commit, right? And obviously use leaf commit, right? And obviously use leaf commit, right? And obviously use leaf privileges whenever you privileges whenever you privileges whenever you can. Um as I said before, you can um set can. Um as I said before, you can um set can. Um as I said before, you can um set permissions on the job level. Um so do permissions on the job level. Um so do permissions on the job level. Um so do that um when you think it's that um when you think it's that um when you think it's appropriate. And then um there are appropriate. And then um there are appropriate. And then um there are additional protections you can put in additional protections you can put in additional protections you can put in place such as uh using open ID connect place such as uh using open ID connect place such as uh using open ID connect um for any of your cloud um for any of your cloud um for any of your cloud resources. Um GitHub has a bunch of code resources. Um GitHub has a bunch of code resources. Um GitHub has a bunch of code um actions that you can use to scan your um actions that you can use to scan your um actions that you can use to scan your code to make sure that your workflow is code to make sure that your workflow is code to make sure that your workflow is safe. safe. safe. Um and the OpenSSF uh scorecards um Um and the OpenSSF uh scorecards um Um and the OpenSSF uh scorecards um action helps secure your workflow dependencies that these are additional dependencies that these are additional dependencies that these are additional resources you can um use to secure resources you can um use to secure resources you can um use to secure yourself. Um and that is my talk. Are yourself. Um and that is my talk. Are yourself. Um and that is my talk. Are there any questions? Hi, thank you for the excellent talks. Hi, thank you for the excellent talks. Hi, thank you for the excellent talks. This is a great overview of how we can This is a great overview of how we can This is a great overview of how we can exploit Git actions. Uh I'm willing exploit Git actions. Uh I'm willing exploit Git actions. Uh I'm willing professor at NC State. Um, I'm curious professor at NC State. Um, I'm curious professor at NC State. Um, I'm curious given the commonality of all of these given the commonality of all of these given the commonality of all of these attacks, all of the pats that were attacks, all of the pats that were attacks, all of the pats that were there, all the troubles we have, uh, not there, all the troubles we have, uh, not there, all the troubles we have, uh, not pinning to specific commits. Are there pinning to specific commits. Are there pinning to specific commits. Are there things that we can do to make this things that we can do to make this things that we can do to make this easier so they don't happen? So, for easier so they don't happen? So, for easier so they don't happen? So, for example, um, I used GitHub action to example, um, I used GitHub action to example, um, I used GitHub action to publish my Jacko website for my course publish my Jacko website for my course publish my Jacko website for my course and I had some, for some bizarre reason, and I had some, for some bizarre reason, and I had some, for some bizarre reason, I had to put a token in. And I said, "Do I had to put a token in. And I said, "Do I had to put a token in. And I said, "Do I use my PAT or do you use a a fine I use my PAT or do you use a a fine I use my PAT or do you use a a fine grain token?" I said, "I don't want to grain token?" I said, "I don't want to grain token?" I said, "I don't want to use a PAT. I know that's bad." So, I use a PAT. I know that's bad." So, I use a PAT. I know that's bad." So, I went and found a fine grain token, but went and found a fine grain token, but went and found a fine grain token, but the maximum time it was available for the maximum time it was available for the maximum time it was available for was 90 days, which was fine because my was 90 days, which was fine because my was 90 days, which was fine because my course was going to be over. And so, I course was going to be over. And so, I course was going to be over. And so, I used that. I looked into how do you auto used that. I looked into how do you auto used that. I looked into how do you auto refresh it? There was a bunch of extra refresh it? There was a bunch of extra refresh it? There was a bunch of extra code to add into the workflows. This code to add into the workflows. This code to add into the workflows. This seems ownorous, like can we make that seems ownorous, like can we make that seems ownorous, like can we make that process easier? Another example was with process easier? Another example was with process easier? Another example was with the um the tags and commits. Could we the um the tags and commits. Could we the um the tags and commits. Could we use a tofu model to say, "Hey, the first use a tofu model to say, "Hey, the first use a tofu model to say, "Hey, the first time I run with this tag, I saw this time I run with this tag, I saw this time I run with this tag, I saw this commit." So, if I'm going to do this commit." So, if I'm going to do this commit." So, if I'm going to do this again, let's not go to a different again, let's not go to a different again, let's not go to a different commit, right? Are there I guess are commit, right? Are there I guess are commit, right? Are there I guess are there things that are that GitHub's there things that are that GitHub's there things that are that GitHub's looking at to look at these common looking at to look at these common looking at to look at these common failures to try to make them not as failures to try to make them not as failures to try to make them not as common? common? common? Uh, very good question. Uh, very good question. Uh, very good question. Uh, what I can say is I do not know. Uh, Uh, what I can say is I do not know. Uh, Uh, what I can say is I do not know. Uh, probably. But, probably. But, probably. But, um, yeah, I work on the GitHub DA um, yeah, I work on the GitHub DA um, yeah, I work on the GitHub DA advisory database. I'm not actually part advisory database. I'm not actually part advisory database. I'm not actually part of any of those conversations. I can of any of those conversations. I can of any of those conversations. I can look into it for you if you want me to. look into it for you if you want me to. look into it for you if you want me to. Yeah. Any other questions? Jonathan, we do have one question from Jonathan, we do have one question from Jonathan, we do have one question from uh Git uh Discord. Are there any broad uh Git uh Discord. Are there any broad uh Git uh Discord. Are there any broad characterizations on the nature of characterizations on the nature of characterizations on the nature of GitHub actions miscreants at this point? GitHub actions miscreants at this point? GitHub actions miscreants at this point? It seems like a lot of this is about crypto. Um I would say that yeah, that that's Um I would say that yeah, that that's Um I would say that yeah, that that's certainly part of it. I haven't certainly part of it. I haven't certainly part of it. I haven't I don't see as much of the actual I don't see as much of the actual I don't see as much of the actual attacks as uh other parts of GitHub. I'm attacks as uh other parts of GitHub. I'm attacks as uh other parts of GitHub. I'm more on the hey, somebody found a more on the hey, somebody found a more on the hey, somebody found a vulnerability. Please publish the vulnerability. Please publish the vulnerability. Please publish the advisory. Um so I can't uh entirely talk advisory. Um so I can't uh entirely talk advisory. Um so I can't uh entirely talk to exactly what attackers are using to exactly what attackers are using to exactly what attackers are using these things for, I would say. Hey, uh, thanks so much for the talk. Hey, uh, thanks so much for the talk. Hey, uh, thanks so much for the talk. So, I actually had a question about the So, I actually had a question about the So, I actually had a question about the slide with the make file stuff. Um, so slide with the make file stuff. Um, so slide with the make file stuff. Um, so I've been submitting a bunch of these I've been submitting a bunch of these I've been submitting a bunch of these types of vans just to try to get them types of vans just to try to get them types of vans just to try to get them cleaned up a bit. And one of the things cleaned up a bit. And one of the things cleaned up a bit. And one of the things I found is so a lot of times the make I found is so a lot of times the make I found is so a lot of times the make file stuff doesn't work because if file stuff doesn't work because if file stuff doesn't work because if you're coming from a forked branch, you you're coming from a forked branch, you you're coming from a forked branch, you don't actually have the permissions. So, don't actually have the permissions. So, don't actually have the permissions. So, it's like readon permissions and then it's like readon permissions and then it's like readon permissions and then the secrets don't get passed. Y. So, is the secrets don't get passed. Y. So, is the secrets don't get passed. Y. So, is that because this make file isn't being that because this make file isn't being that because this make file isn't being triggered from a pull request trigger? triggered from a pull request trigger? triggered from a pull request trigger? Um, it secrets are added even though Um, it secrets are added even though Um, it secrets are added even though it's from a fork. Yeah, exactly. This it's from a fork. Yeah, exactly. This it's from a fork. Yeah, exactly. This one, this particular one had different one, this particular one had different one, this particular one had different permissions than you would normally, permissions than you would normally, permissions than you would normally, right? right? right? they uh specific this is a fairly like they uh specific this is a fairly like they uh specific this is a fairly like specific example where uh they wanted it specific example where uh they wanted it specific example where uh they wanted it to have particular permissions because to have particular permissions because to have particular permissions because if they put a particular comment in they if they put a particular comment in they if they put a particular comment in they wanted to be able to take specific wanted to be able to take specific wanted to be able to take specific actions. Okay. And then so did they do actions. Okay. And then so did they do actions. Okay. And then so did they do the permissions in the GitHub action the permissions in the GitHub action the permissions in the GitHub action because I thought the fork overrides because I thought the fork overrides because I thought the fork overrides those permissions as well. those permissions as well. those permissions as well. uh the the uh the the uh the the um I believe the permissions within the um I believe the permissions within the um I believe the permissions within the workflow are specified. Okay. Um I workflow are specified. Okay. Um I workflow are specified. Okay. Um I didn't put them here, but I would have didn't put them here, but I would have didn't put them here, but I would have to Yeah, sounds good. I don't remember to Yeah, sounds good. I don't remember to Yeah, sounds good. I don't remember the the full details. I will say any other questions. We're coming. Thank you, Jonathan, for for your talk. Thank you, Jonathan, for for your talk. Thank you, Jonathan, for for your talk. Um, the ultritic spectctor was uh caused Um, the ultritic spectctor was uh caused Um, the ultritic spectctor was uh caused by a malicious branch name. Is there a by a malicious branch name. Is there a by a malicious branch name. Is there a way to prevent attacker controlled uh way to prevent attacker controlled uh way to prevent attacker controlled uh content getting into GitHub actions? content getting into GitHub actions? content getting into GitHub actions? generally as a general um I think some of this is as a general um I think some of this is as a general um I think some of this is the way actions is designed um and so um and so um and so uh you know there there are protections uh you know there there are protections uh you know there there are protections you put in place but I don't know if you you put in place but I don't know if you you put in place but I don't know if you can there's a way in general just can there's a way in general just can there's a way in general just to you know prevent that from happening to you know prevent that from happening to you know prevent that from happening if you still want to use you know the if you still want to use you know the if you still want to use you know the data that uh comes from a user. data that uh comes from a user. data that uh comes from a user. Would be really cool if you maybe find a Would be really cool if you maybe find a Would be really cool if you maybe find a way. Thank you. way. Thank you. way. Thank you. I don't disagree. Is that a over the head reach? disagree. Is that a over the head reach? disagree. Is that a over the head reach? Here you go. Here you go. Here you go. Yeah. I guess this is building on what Yeah. I guess this is building on what Yeah. I guess this is building on what um the professor said. Um, um the professor said. Um, um the professor said. Um, like I've up until recently been on um, like I've up until recently been on um, like I've up until recently been on um, Google's open source security team and Google's open source security team and Google's open source security team and one of the things I did was sit on our one of the things I did was sit on our one of the things I did was sit on our open source open source open source uh, vulnerability rewards program and we uh, vulnerability rewards program and we uh, vulnerability rewards program and we were paying out week over week over week were paying out week over week over week were paying out week over week over week for misconfigured GitHub action type for misconfigured GitHub action type for misconfigured GitHub action type stuff. stuff. stuff. And And And my my take from that was that that this my my take from that was that that this my my take from that was that that this is sort of not secure by default at all. is sort of not secure by default at all. is sort of not secure by default at all. Right. And so so there's there's like a Right. And so so there's there's like a Right. And so so there's there's like a product sort of level opportunity here product sort of level opportunity here product sort of level opportunity here to make it secure by default like like to make it secure by default like like to make it secure by default like like it's a foot gun at the moment it's a foot gun at the moment it's a foot gun at the moment and I realize that you're not from the and I realize that you're not from the and I realize that you're not from the product so you can't comment on it. Uh product so you can't comment on it. Uh product so you can't comment on it. Uh but but yeah, like I would just love to but but yeah, like I would just love to but but yeah, like I would just love to know that know that know that GitHub gets that and and and is going to GitHub gets that and and and is going to GitHub gets that and and and is going to make it easier to do the right things make it easier to do the right things make it easier to do the right things and harder to to shoot yourself in the and harder to to shoot yourself in the and harder to to shoot yourself in the foot with it because it seems like at foot with it because it seems like at foot with it because it seems like at every turn, unless you go out of your every turn, unless you go out of your every turn, unless you go out of your way or you use something like scorecards way or you use something like scorecards way or you use something like scorecards to at to at to at least signpost that you're doing it least signpost that you're doing it least signpost that you're doing it wrong, Mhm. you're going it. It's just wrong, Mhm. you're going it. It's just wrong, Mhm. you're going it. It's just so easy to unintentionally accidentally so easy to unintentionally accidentally so easy to unintentionally accidentally do it wrong and then bad things happen. do it wrong and then bad things happen. do it wrong and then bad things happen. So yeah, I I can say that uh we have So yeah, I I can say that uh we have So yeah, I I can say that uh we have given the uh action scene that feedback given the uh action scene that feedback given the uh action scene that feedback and they've heard it. That's about as much as I know. Not yet. It's 9:22. Anyone yet. It's 9:22. Anyone yet. It's 9:22. Anyone else? Going once. Going twice. All else? Going once. Going twice. All else? Going once. Going twice. All right. Thank you all. Oh, sorry. the GitHub database. Uh what do you want the GitHub database. Uh what do you want the GitHub database. Uh what do you want to know? We to know? We to know? We publish. So uh we take in advisories publish. So uh we take in advisories publish. So uh we take in advisories from NVD and um the various uh from NVD and um the various uh from NVD and um the various uh registries that we support such as Pi registries that we support such as Pi registries that we support such as Pi and Maven and uh Rust, right? Um we then and Maven and uh Rust, right? Um we then and Maven and uh Rust, right? Um we then add in some additional metadata such as add in some additional metadata such as add in some additional metadata such as CVSS, CWES, CVSS, CWES, CVSS, CWES, uh most importantly the product and um uh most importantly the product and um uh most importantly the product and um registry that's using and the affected registry that's using and the affected registry that's using and the affected versions. Um and then we publish that in versions. Um and then we publish that in versions. Um and then we publish that in OSV OSV OSV format. Um we also publish unreed format. Um we also publish unreed format. Um we also publish unreed advisories coming from um NVD. um those advisories coming from um NVD. um those advisories coming from um NVD. um those won't necessarily be in one of the won't necessarily be in one of the won't necessarily be in one of the supported registries uh which is why supported registries uh which is why supported registries uh which is why they are unreed. The ones in reviewed they are unreed. The ones in reviewed they are unreed. The ones in reviewed state are the ones that we've looked at state are the ones that we've looked at state are the ones that we've looked at and said yes this is within one of our and said yes this is within one of our and said yes this is within one of our supported registries. supported registries. supported registries. Um and um you know we we've added the Um and um you know we we've added the Um and um you know we we've added the additional data too um that for us that additional data too um that for us that additional data too um that for us that then gets fed into um dependabots and then gets fed into um dependabots and then gets fed into um dependabots and this what dependabot uses to detect this what dependabot uses to detect this what dependabot uses to detect whether or not you're using vulnerable whether or not you're using vulnerable whether or not you're using vulnerable dependencies. dependencies. dependencies. All right, round of applause for All right, round of applause for All right, round of applause for Jonathan. Thank you very much.