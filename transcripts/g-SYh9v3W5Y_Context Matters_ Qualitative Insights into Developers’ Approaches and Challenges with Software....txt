Kind: captions Language: en Hello everyone. Um, I'm Elizabeth. Happy Hello everyone. Um, I'm Elizabeth. Happy Hello everyone. Um, I'm Elizabeth. Happy to be here today to talk about our work to be here today to talk about our work to be here today to talk about our work over the past few months where we look over the past few months where we look over the past few months where we look at software composition analysis tools. at software composition analysis tools. at software composition analysis tools. And hopefully by the end of this talk, And hopefully by the end of this talk, And hopefully by the end of this talk, you'll learn how to better integrate you'll learn how to better integrate you'll learn how to better integrate these tools into your software oops these tools into your software oops these tools into your software oops development development development pipelines. All right. Uh before I dive pipelines. All right. Uh before I dive pipelines. All right. Uh before I dive into software composition analysis, a into software composition analysis, a into software composition analysis, a little bit about myself, I completed my little bit about myself, I completed my little bit about myself, I completed my bachelor's in computer science in bachelor's in computer science in bachelor's in computer science in Taiwan. And then after graduating from Taiwan. And then after graduating from Taiwan. And then after graduating from that, I joined the Whisper Lab at NC that, I joined the Whisper Lab at NC that, I joined the Whisper Lab at NC State as a PhD student. That was back in State as a PhD student. That was back in State as a PhD student. That was back in 2022. And this has been my third year in 2022. And this has been my third year in 2022. And this has been my third year in the program. and I've had the the program. and I've had the the program. and I've had the opportunity to work on various security opportunity to work on various security opportunity to work on various security and software supply chain products uh and software supply chain products uh and software supply chain products uh projects looking at esbombs or projects looking at esbombs or projects looking at esbombs or vulnerability fixing commits or vulnerability fixing commits or vulnerability fixing commits or vulnerabilities and VS code vulnerabilities and VS code vulnerabilities and VS code extensions. Um at NC State we have a extensions. Um at NC State we have a extensions. Um at NC State we have a secure computing institute which our lab secure computing institute which our lab secure computing institute which our lab the whisper lab is part of. Our lab does the whisper lab is part of. Our lab does the whisper lab is part of. Our lab does research broadly in the area of security research broadly in the area of security research broadly in the area of security and privacy. We also have research and privacy. We also have research and privacy. We also have research implementing qualitative methods, implementing qualitative methods, implementing qualitative methods, research on networks and telecoms, research on networks and telecoms, research on networks and telecoms, crypto and also research combining crypto and also research combining crypto and also research combining software engineering and security. And software engineering and security. And software engineering and security. And one of the main focuses of research in one of the main focuses of research in one of the main focuses of research in our lab has been on software supply our lab has been on software supply our lab has been on software supply chain security. So we have a secure chain security. So we have a secure chain security. So we have a secure software supply chain center software supply chain center software supply chain center uh effort across multiple universities uh effort across multiple universities uh effort across multiple universities where we try to improve the security where we try to improve the security where we try to improve the security posture across the entire supply posture across the entire supply posture across the entire supply chain. Our lab also does various chain. Our lab also does various chain. Our lab also does various outreach programs like cyber security outreach programs like cyber security outreach programs like cyber security camps for students or industry camps for students or industry camps for students or industry conferences like NC pace which will conferences like NC pace which will conferences like NC pace which will actually be happening right here in the actually be happening right here in the actually be happening right here in the same conference center next week. All right, so let's dive into software All right, so let's dive into software All right, so let's dive into software composition analysis or SCA. Um, from a composition analysis or SCA. Um, from a composition analysis or SCA. Um, from a show of hands, who here has used SCA show of hands, who here has used SCA show of hands, who here has used SCA tools? Okay, I see a lot of hands, more tools? Okay, I see a lot of hands, more tools? Okay, I see a lot of hands, more than I expected. Uh, what has your than I expected. Uh, what has your than I expected. Uh, what has your general experience been with the general experience been with the general experience been with the tools? Yeah. tools? Yeah. tools? Yeah. What has your general experience with What has your general experience with What has your general experience with the good? They've been good. lots of warnings. We'll we'll dive into lots of warnings. We'll we'll dive into lots of warnings. We'll we'll dive into other experiences other users have later other experiences other users have later other experiences other users have later in the in the in the in the in the in the presentation, but let's take a step back presentation, but let's take a step back presentation, but let's take a step back and look at why SCA tools. So, there's a and look at why SCA tools. So, there's a and look at why SCA tools. So, there's a lot of different security tools out lot of different security tools out lot of different security tools out there. You have ones that look at your there. You have ones that look at your there. You have ones that look at your containers, packages, or static testing, containers, packages, or static testing, containers, packages, or static testing, dynamic testing. But what sets SCA tools dynamic testing. But what sets SCA tools dynamic testing. But what sets SCA tools apart from all the other apart from all the other apart from all the other tools? So I like to think of SCA tools tools? So I like to think of SCA tools tools? So I like to think of SCA tools as the tools that focus on um your as the tools that focus on um your as the tools that focus on um your external libraries code that's imported external libraries code that's imported external libraries code that's imported from someone from someone from someone else. And because they're you don't else. And because they're you don't else. And because they're you don't understand the code, you need tools like understand the code, you need tools like understand the code, you need tools like SCA tools to help you identify um risks SCA tools to help you identify um risks SCA tools to help you identify um risks or vulnerabilities in them. or vulnerabilities in them. or vulnerabilities in them. So for those who are less familiar, I So for those who are less familiar, I So for those who are less familiar, I want to use uh the lock for showell want to use uh the lock for showell want to use uh the lock for showell incident to motivate you on why we use incident to motivate you on why we use incident to motivate you on why we use SCA tools. So this is a very fi SCA tools. So this is a very fi SCA tools. So this is a very fi everyone's pretty familiar with this everyone's pretty familiar with this everyone's pretty familiar with this incident. This happened back in 2021. A incident. This happened back in 2021. A incident. This happened back in 2021. A zero day vulnerability come out came out zero day vulnerability come out came out zero day vulnerability come out came out in the log forj library. in the log forj library. in the log forj library. And when this happened, all the And when this happened, all the And when this happened, all the different teams, organizations, they had different teams, organizations, they had different teams, organizations, they had to scramble to determine if they were to scramble to determine if they were to scramble to determine if they were using a vulnerable version of lock forj. using a vulnerable version of lock forj. using a vulnerable version of lock forj. Um, you could be imported importing it Um, you could be imported importing it Um, you could be imported importing it directly in your direct dependencies. directly in your direct dependencies. directly in your direct dependencies. You could also be importing library A You could also be importing library A You could also be importing library A that imports library B and that imports that imports library B and that imports that imports library B and that imports log forj. So the vulnerability could be log forj. So the vulnerability could be log forj. So the vulnerability could be somewhere in your dependency tree and somewhere in your dependency tree and somewhere in your dependency tree and that's where SCA tools come in. They'll that's where SCA tools come in. They'll that's where SCA tools come in. They'll look at your entire dependency tree and look at your entire dependency tree and look at your entire dependency tree and determine if vulnerabilities exist in determine if vulnerabilities exist in determine if vulnerabilities exist in them. And even to this day, if you run them. And even to this day, if you run them. And even to this day, if you run an SCA scan, you might still be able to an SCA scan, you might still be able to an SCA scan, you might still be able to find vulnerable versions of blog forj in find vulnerable versions of blog forj in find vulnerable versions of blog forj in your your your application. So we want to prevent application. So we want to prevent application. So we want to prevent incidents like this or react quickly to incidents like this or react quickly to incidents like this or react quickly to instance like this. So let's take a look instance like this. So let's take a look instance like this. So let's take a look at what an ideal SCA would be. So I've at what an ideal SCA would be. So I've at what an ideal SCA would be. So I've listed four characteristics here. Um the listed four characteristics here. Um the listed four characteristics here. Um the first one being I think an ideal SCA first one being I think an ideal SCA first one being I think an ideal SCA tool should be deployed smoothly. You tool should be deployed smoothly. You tool should be deployed smoothly. You don't want to have to go through too don't want to have to go through too don't want to have to go through too many many many configurations or setup challenges for configurations or setup challenges for configurations or setup challenges for it to integrate smoothly into your it to integrate smoothly into your it to integrate smoothly into your development development development pipeline. The second thing is it should pipeline. The second thing is it should pipeline. The second thing is it should identify components correctly. Um identify components correctly. Um identify components correctly. Um depending on the language or ecosystem depending on the language or ecosystem depending on the language or ecosystem the library is in, dependency trees can the library is in, dependency trees can the library is in, dependency trees can grow really really large. So you want a grow really really large. So you want a grow really really large. So you want a tool that identifies components tool that identifies components tool that identifies components correctly because you wouldn't want the correctly because you wouldn't want the correctly because you wouldn't want the tool to identify like a ghost dependency tool to identify like a ghost dependency tool to identify like a ghost dependency and telling you there's a vulnerability and telling you there's a vulnerability and telling you there's a vulnerability in in in that. The third characteristic is it that. The third characteristic is it that. The third characteristic is it should identify vulnerabilities in them should identify vulnerabilities in them should identify vulnerabilities in them but only alert you on the ones that but only alert you on the ones that but only alert you on the ones that matter. For example, in the diagram here matter. For example, in the diagram here matter. For example, in the diagram here you have uh CV A, F and E. Um, but say you have uh CV A, F and E. Um, but say you have uh CV A, F and E. Um, but say you use CVE E in a way that wouldn't you use CVE E in a way that wouldn't you use CVE E in a way that wouldn't affect your affect your affect your application. Ideally, you want the SCA application. Ideally, you want the SCA application. Ideally, you want the SCA tool to recognize that and only alert tool to recognize that and only alert tool to recognize that and only alert you on A and F. And then once you get you on A and F. And then once you get you on A and F. And then once you get those alerts or vulnerabilities, you those alerts or vulnerabilities, you those alerts or vulnerabilities, you want some fixed suggestions from the want some fixed suggestions from the want some fixed suggestions from the tools. And those fixed suggestions tools. And those fixed suggestions tools. And those fixed suggestions should be actionable suggestions that should be actionable suggestions that should be actionable suggestions that users can actually act users can actually act users can actually act on. So these are four characteristics I on. So these are four characteristics I on. So these are four characteristics I listed. Um, let's take a look at what listed. Um, let's take a look at what listed. Um, let's take a look at what running an SCA tool looks like. So, I running an SCA tool looks like. So, I running an SCA tool looks like. So, I forked uh a random GitHub repository forked uh a random GitHub repository forked uh a random GitHub repository into my GitHub account and I ran a quick into my GitHub account and I ran a quick into my GitHub account and I ran a quick SCA scan on that. Um, the first thing I SCA scan on that. Um, the first thing I SCA scan on that. Um, the first thing I noticed after I run the SCA scan is noticed after I run the SCA scan is noticed after I run the SCA scan is there are multiple different results and there are multiple different results and there are multiple different results and I was a little confused by that. Um, but I was a little confused by that. Um, but I was a little confused by that. Um, but say we take a look at the first package say we take a look at the first package say we take a look at the first package JSON file. So, I click on that and then JSON file. So, I click on that and then JSON file. So, I click on that and then I go into all the alerts and there is an I go into all the alerts and there is an I go into all the alerts and there is an overwhelmingly large number of alerts in overwhelmingly large number of alerts in overwhelmingly large number of alerts in here. There's probably hundreds of here. There's probably hundreds of here. There's probably hundreds of critical alerts, even more high alerts, critical alerts, even more high alerts, critical alerts, even more high alerts, medium alerts. Um, and there's a lot medium alerts. Um, and there's a lot medium alerts. Um, and there's a lot more. This is just like a portion of the more. This is just like a portion of the more. This is just like a portion of the SCN. I screenshotted. So, there's SCN. I screenshotted. So, there's SCN. I screenshotted. So, there's probably a lot more low alerts down probably a lot more low alerts down probably a lot more low alerts down there. So, I look at this and I'm pretty there. So, I look at this and I'm pretty there. So, I look at this and I'm pretty overwhelmed as to what I should do. But overwhelmed as to what I should do. But overwhelmed as to what I should do. But say I take a look at one of the critical say I take a look at one of the critical say I take a look at one of the critical vulnerabilities in Babel vulnerabilities in Babel vulnerabilities in Babel Traverse. So, uh, text the text probably Traverse. So, uh, text the text probably Traverse. So, uh, text the text probably isn't too clear here, but I take a look isn't too clear here, but I take a look isn't too clear here, but I take a look at the overview and notes in here, and at the overview and notes in here, and at the overview and notes in here, and it says you're vulnerable if you use it says you're vulnerable if you use it says you're vulnerable if you use certain methods, and you're only certain methods, and you're only certain methods, and you're only exploitable if attacker does something. exploitable if attacker does something. exploitable if attacker does something. So I'm a little confused by this So I'm a little confused by this So I'm a little confused by this statement because I'm not sure if I'm statement because I'm not sure if I'm statement because I'm not sure if I'm vulnerable or I the vulnerability could vulnerable or I the vulnerability could vulnerable or I the vulnerability could be exploited in my be exploited in my be exploited in my application. So then I think maybe some application. So then I think maybe some application. So then I think maybe some some more CV information would help. So some more CV information would help. So some more CV information would help. So I take a look at the CV information and I take a look at the CV information and I take a look at the CV information and it pretty much gives me similar it pretty much gives me similar it pretty much gives me similar information saying if you use certain information saying if you use certain information saying if you use certain methods like methods like methods like evaluate then you might be impacted by evaluate then you might be impacted by evaluate then you might be impacted by this this this vulnerability. So then to determine if vulnerability. So then to determine if vulnerability. So then to determine if I'm actually impacted, I go back and I I'm actually impacted, I go back and I I'm actually impacted, I go back and I look at the paths that lead to this look at the paths that lead to this look at the paths that lead to this vulnerable vulnerable vulnerable library. And there's so many different library. And there's so many different library. And there's so many different ones. Again, this is just a screenshot, ones. Again, this is just a screenshot, ones. Again, this is just a screenshot, a portion of all the different paths a portion of all the different paths a portion of all the different paths listed. And I see this library is it is listed. And I see this library is it is listed. And I see this library is it is actually a transitive library that's actually a transitive library that's actually a transitive library that's introduced by some other direct introduced by some other direct introduced by some other direct dependency react scripts. And to fix dependency react scripts. And to fix dependency react scripts. And to fix this, the tool gives me multiple this, the tool gives me multiple this, the tool gives me multiple different suggestions. You can update to different suggestions. You can update to different suggestions. You can update to uh version three, version uh version three, version uh version three, version 3.4.1, and there's so many different 3.4.1, and there's so many different 3.4.1, and there's so many different suggestions. I'm not too sure which one suggestions. I'm not too sure which one suggestions. I'm not too sure which one I should update to, or should I just I should update to, or should I just I should update to, or should I just update to the newest version. And this update to the newest version. And this update to the newest version. And this is a simpler case. There could be other is a simpler case. There could be other is a simpler case. There could be other cases like this one where a cases like this one where a cases like this one where a vulnerability is also in a transitive vulnerability is also in a transitive vulnerability is also in a transitive library. Um, and this transitive library library. Um, and this transitive library library. Um, and this transitive library is introduced through three different is introduced through three different is introduced through three different direct dependencies. So, should I update direct dependencies. So, should I update direct dependencies. So, should I update all three of the direct dependencies? all three of the direct dependencies? all three of the direct dependencies? Will that cause some kind of incompat Will that cause some kind of incompat Will that cause some kind of incompat incompatibility issues in my incompatibility issues in my incompatibility issues in my application? And all of these were just application? And all of these were just application? And all of these were just experiences that I went through when I experiences that I went through when I experiences that I went through when I ran a quick SCA scan. ran a quick SCA scan. ran a quick SCA scan. Um, you guys here might have run into Um, you guys here might have run into Um, you guys here might have run into other experiences, more complex other experiences, more complex other experiences, more complex experiences, and we really wanted to experiences, and we really wanted to experiences, and we really wanted to understand what challenges users run understand what challenges users run understand what challenges users run into when using these into when using these into when using these tools. And to do that, our approach is tools. And to do that, our approach is tools. And to do that, our approach is to conduct a user study where we try to to conduct a user study where we try to to conduct a user study where we try to answer our four main research questions. answer our four main research questions. answer our four main research questions. So, we structured the research questions So, we structured the research questions So, we structured the research questions with a top- down approach. We start with with a top- down approach. We start with with a top- down approach. We start with a general question um how do users a general question um how do users a general question um how do users interact with these tools and then we interact with these tools and then we interact with these tools and then we focus in on what are the challenges when focus in on what are the challenges when focus in on what are the challenges when they're deploying these tools and then they're deploying these tools and then they're deploying these tools and then following the flow of the SCA process following the flow of the SCA process following the flow of the SCA process what are challenges when they act on what are challenges when they act on what are challenges when they act on these results and then finally we want these results and then finally we want these results and then finally we want to answer how can the entire process be to answer how can the entire process be to answer how can the entire process be improved and to answer these four improved and to answer these four improved and to answer these four questions questions questions um we decided to talk to industry um we decided to talk to industry um we decided to talk to industry professionals like you guys. Um because professionals like you guys. Um because professionals like you guys. Um because industry professionals or developers, industry professionals or developers, industry professionals or developers, you guys are the ones really interacting you guys are the ones really interacting you guys are the ones really interacting with the tools every day. You have a lot with the tools every day. You have a lot with the tools every day. You have a lot of exposure, different use cases you put of exposure, different use cases you put of exposure, different use cases you put the tools through and talking to the tools through and talking to the tools through and talking to developers would allow us to gather a developers would allow us to gather a developers would allow us to gather a lot more experience. So we recruited 20 lot more experience. So we recruited 20 lot more experience. So we recruited 20 industry professionals with SCA to industry professionals with SCA to industry professionals with SCA to experience. We talked to each of them experience. We talked to each of them experience. We talked to each of them for about 45 minutes in a semistructured for about 45 minutes in a semistructured for about 45 minutes in a semistructured interview. So the structure is below interview. So the structure is below interview. So the structure is below here and largely follows our research here and largely follows our research here and largely follows our research questions. We start with a general how questions. We start with a general how questions. We start with a general how do you use the tool and then we move on do you use the tool and then we move on do you use the tool and then we move on to how you integrate the tools. Then to how you integrate the tools. Then to how you integrate the tools. Then what you do once you receive outputs what you do once you receive outputs what you do once you receive outputs from the tools and then features or from the tools and then features or from the tools and then features or measures they found useful and then measures they found useful and then measures they found useful and then finally we asked them what are their finally we asked them what are their finally we asked them what are their opinions or improvements they want to opinions or improvements they want to opinions or improvements they want to see. see. see. Um so after talking to 20 industry Um so after talking to 20 industry Um so after talking to 20 industry professionals um we had one main thing professionals um we had one main thing professionals um we had one main thing that tied all the findings together and that tied all the findings together and that tied all the findings together and it was that along the entire SCA tool it was that along the entire SCA tool it was that along the entire SCA tool process. Um context really matters and process. Um context really matters and process. Um context really matters and there's a lack of context in certain there's a lack of context in certain there's a lack of context in certain areas. So we discussed this in three areas. So we discussed this in three areas. So we discussed this in three aspects. The first one is there's not aspects. The first one is there's not aspects. The first one is there's not enough context in vulnerability alerts. enough context in vulnerability alerts. enough context in vulnerability alerts. So, we saw from the previous screenshots So, we saw from the previous screenshots So, we saw from the previous screenshots that these tools will give you generic that these tools will give you generic that these tools will give you generic CV information, but for users to CV information, but for users to CV information, but for users to determine if they're impacted, they need determine if they're impacted, they need determine if they're impacted, they need more details than that. So, lack of more details than that. So, lack of more details than that. So, lack of context from that really requires them context from that really requires them context from that really requires them to put in extra effort to determine the to put in extra effort to determine the to put in extra effort to determine the risk and impact introduced. The second aspect is um depending on how The second aspect is um depending on how The second aspect is um depending on how you run the SCA tool, you could you run the SCA tool, you could you run the SCA tool, you could integrate it automatically into your CI integrate it automatically into your CI integrate it automatically into your CI pipeline, you could run it manually pipeline, you could run it manually pipeline, you could run it manually periodically. Um the different methods periodically. Um the different methods periodically. Um the different methods of integrating them have different of integrating them have different of integrating them have different tradeoffs in your development life tradeoffs in your development life tradeoffs in your development life cycle. For example, if you run them cycle. For example, if you run them cycle. For example, if you run them automatically and the SCA tool generates automatically and the SCA tool generates automatically and the SCA tool generates too much noise, it could put pauses or too much noise, it could put pauses or too much noise, it could put pauses or stops in your CI pipeline, which can be stops in your CI pipeline, which can be stops in your CI pipeline, which can be annoying if it adds annoying if it adds annoying if it adds up. So, some uh participants share that up. So, some uh participants share that up. So, some uh participants share that they transition from that to like they transition from that to like they transition from that to like running the scans manually. running the scans manually. running the scans manually. Um the third aspect we found was when Um the third aspect we found was when Um the third aspect we found was when integrating the tools along an entire integrating the tools along an entire integrating the tools along an entire supply chain or a big organization or supply chain or a big organization or supply chain or a big organization or communicating the tool results across communicating the tool results across communicating the tool results across different teams, different parties. Um different teams, different parties. Um different teams, different parties. Um because different teams and different because different teams and different because different teams and different parties have different workflows, parties have different workflows, parties have different workflows, different tools they run, the different tools they run, the different tools they run, the communication may require some overhead. communication may require some overhead. communication may require some overhead. So these are the three main findings we So these are the three main findings we So these are the three main findings we found. Um let's dive into our first found. Um let's dive into our first found. Um let's dive into our first research question a little more. How do research question a little more. How do research question a little more. How do users interact with these tools? Um we users interact with these tools? Um we users interact with these tools? Um we first started by asking users why they first started by asking users why they first started by asking users why they chose SCA tools and the majority of them chose SCA tools and the majority of them chose SCA tools and the majority of them said we use them to find software said we use them to find software said we use them to find software vulnerabilities. Also a good amount of vulnerabilities. Also a good amount of vulnerabilities. Also a good amount of them said we use them for compliance or them said we use them for compliance or them said we use them for compliance or licensing issues. These are pretty licensing issues. These are pretty licensing issues. These are pretty intuitive reasons. Um, some less intuitive reasons. Um, some less intuitive reasons. Um, some less intuitive reasons I found pretty intuitive reasons I found pretty intuitive reasons I found pretty interesting was um, a participant interesting was um, a participant interesting was um, a participant mentioned using them for mergers and mentioned using them for mergers and mentioned using them for mergers and acquisitions. So, if you're buying a acquisitions. So, if you're buying a acquisitions. So, if you're buying a company, you want to know the company company, you want to know the company company, you want to know the company you're buying and what's in their you're buying and what's in their you're buying and what's in their software. So, using SCA tools could help software. So, using SCA tools could help software. So, using SCA tools could help them identify their software them identify their software them identify their software stack. Another participant shared using stack. Another participant shared using stack. Another participant shared using SCA tools for export controls. So they SCA tools for export controls. So they SCA tools for export controls. So they shared that sometimes laws can be strict shared that sometimes laws can be strict shared that sometimes laws can be strict on the software you export and using SCA on the software you export and using SCA on the software you export and using SCA tools can help you determine if there tools can help you determine if there tools can help you determine if there are certain things you can't export in are certain things you can't export in are certain things you can't export in your your your software. Then we moved on to asking software. Then we moved on to asking software. Then we moved on to asking participants um how do you select these participants um how do you select these participants um how do you select these tools and the majority of them said the tools and the majority of them said the tools and the majority of them said the ease of deployment is a huge factor in ease of deployment is a huge factor in ease of deployment is a huge factor in selecting tools. For example, if you selecting tools. For example, if you selecting tools. For example, if you have all your source code or have all your source code or have all your source code or repositories in GitHub, an SCA tool like repositories in GitHub, an SCA tool like repositories in GitHub, an SCA tool like um GitHub dependabot would be really um GitHub dependabot would be really um GitHub dependabot would be really easy to integrate into all your easy to integrate into all your easy to integrate into all your different repositories as compared to different repositories as compared to different repositories as compared to like you're running say you have like like you're running say you have like like you're running say you have like hundreds of repositories and then you hundreds of repositories and then you hundreds of repositories and then you have to integrate each of them into a have to integrate each of them into a have to integrate each of them into a separate tool that would be too much separate tool that would be too much separate tool that would be too much effort for the organization. effort for the organization. effort for the organization. Um, an interesting thing we observed was Um, an interesting thing we observed was Um, an interesting thing we observed was that participants sometimes also that participants sometimes also that participants sometimes also switched tools and there are two main switched tools and there are two main switched tools and there are two main challenges that led participants to challenges that led participants to challenges that led participants to switch tools. The first one was switch tools. The first one was switch tools. The first one was sometimes the SCA tool had really strict sometimes the SCA tool had really strict sometimes the SCA tool had really strict um scan requirements and their um scan requirements and their um scan requirements and their engineering teams or their workflows engineering teams or their workflows engineering teams or their workflows probably couldn't satisfy the probably couldn't satisfy the probably couldn't satisfy the requirements easily. So they had to um requirements easily. So they had to um requirements easily. So they had to um change their pipelines a little bit, put change their pipelines a little bit, put change their pipelines a little bit, put in additional effort so that their SCA in additional effort so that their SCA in additional effort so that their SCA scans can run um smoothly. That was one scans can run um smoothly. That was one scans can run um smoothly. That was one of the reasons that they switch of the reasons that they switch of the reasons that they switch tools. Another participant also shared tools. Another participant also shared tools. Another participant also shared that the accuracy of the results led that the accuracy of the results led that the accuracy of the results led them to switch tools. So, say they them to switch tools. So, say they them to switch tools. So, say they started using tool A and it would be started using tool A and it would be started using tool A and it would be reporting wrong components or reporting wrong components or reporting wrong components or vulnerabilities that probably weren't in vulnerabilities that probably weren't in vulnerabilities that probably weren't in their components that would lead them to their components that would lead them to their components that would lead them to switch to another SCA switch to another SCA switch to another SCA tool. All right. When we were asking tool. All right. When we were asking tool. All right. When we were asking participants about how they use these participants about how they use these participants about how they use these tools, we observed three different tools, we observed three different tools, we observed three different inputs to SCA inputs to SCA inputs to SCA tools. Um, the first one being source tools. Um, the first one being source tools. Um, the first one being source code. This was the most common. The code. This was the most common. The code. This was the most common. The majority of SCA tools take your entire majority of SCA tools take your entire majority of SCA tools take your entire application, looks at everything in application, looks at everything in application, looks at everything in there, and then it identifies software there, and then it identifies software there, and then it identifies software components. But this was a concern for components. But this was a concern for components. But this was a concern for some of the participants. Um, their some of the participants. Um, their some of the participants. Um, their organization probably treated code as a organization probably treated code as a organization probably treated code as a more highly restricted data type. And more highly restricted data type. And more highly restricted data type. And with SCA tools, sometimes you have to with SCA tools, sometimes you have to with SCA tools, sometimes you have to pass your application to an external pass your application to an external pass your application to an external service. So they didn't want to risk uh service. So they didn't want to risk uh service. So they didn't want to risk uh leaking their source code to another leaking their source code to another leaking their source code to another party. And the second type of input party. And the second type of input party. And the second type of input metadata kind of addresses that because metadata kind of addresses that because metadata kind of addresses that because when you just pass metadata, you you when you just pass metadata, you you when you just pass metadata, you you only pass package JSON files or manifest only pass package JSON files or manifest only pass package JSON files or manifest files and you don't have to leak your files and you don't have to leak your files and you don't have to leak your entire source code to an external entire source code to an external entire source code to an external party. The third type of input we party. The third type of input we party. The third type of input we observed was binaries. observed was binaries. observed was binaries. Um sometimes organizations they acquire Um sometimes organizations they acquire Um sometimes organizations they acquire an entire binary from one of their an entire binary from one of their an entire binary from one of their suppliers but they still have to figure suppliers but they still have to figure suppliers but they still have to figure out what is in the software. So they run out what is in the software. So they run out what is in the software. So they run a binary SCA scan on that. a binary SCA scan on that. a binary SCA scan on that. Um some of the issues that came with Um some of the issues that came with Um some of the issues that came with that was participants shared um binary that was participants shared um binary that was participants shared um binary SCA sometimes had issues identifying the SCA sometimes had issues identifying the SCA sometimes had issues identifying the correct version of libraries or like correct version of libraries or like correct version of libraries or like this quote stated here binaries um this quote stated here binaries um this quote stated here binaries um because they use fingerprinting or because they use fingerprinting or because they use fingerprinting or hashing. So if you change a single line hashing. So if you change a single line hashing. So if you change a single line of code or a single variable the entire of code or a single variable the entire of code or a single variable the entire output could be different. output could be different. output could be different. So when you have copy pasted code in the So when you have copy pasted code in the So when you have copy pasted code in the binaries that would sometimes confuse binaries that would sometimes confuse binaries that would sometimes confuse the SCA tool because the fingerprinting the SCA tool because the fingerprinting the SCA tool because the fingerprinting results are completely different. All right, let's move on to different. All right, let's move on to different. All right, let's move on to our second research question. What are our second research question. What are our second research question. What are some challenges when deploying these some challenges when deploying these some challenges when deploying these tools? Um the first thing we observed tools? Um the first thing we observed tools? Um the first thing we observed was legacy languages or unsupported was legacy languages or unsupported was legacy languages or unsupported scripts in the application. um scripts in the application. um scripts in the application. um participants share sometimes they use participants share sometimes they use participants share sometimes they use less common package managers languages less common package managers languages less common package managers languages and SCA tools don't support that. So to and SCA tools don't support that. So to and SCA tools don't support that. So to run an SCA scan on that they either have run an SCA scan on that they either have run an SCA scan on that they either have to find a workaround or they go talk to to find a workaround or they go talk to to find a workaround or they go talk to the SCA vendor to see if they could work the SCA vendor to see if they could work the SCA vendor to see if they could work something something something out. The second challenge was different out. The second challenge was different out. The second challenge was different ecosystems. Um, a lot of participants ecosystems. Um, a lot of participants ecosystems. Um, a lot of participants share that SCA tools sometimes perform share that SCA tools sometimes perform share that SCA tools sometimes perform better in one ecosystem and less or better in one ecosystem and less or better in one ecosystem and less or worse in other worse in other worse in other ecosystems. Um, one participant shared ecosystems. Um, one participant shared ecosystems. Um, one participant shared some insight into why this happens. some insight into why this happens. some insight into why this happens. Different package package managers or Different package package managers or Different package package managers or different language ecosystems, they have different language ecosystems, they have different language ecosystems, they have different ways of resolving the different ways of resolving the different ways of resolving the libraries. So an SCA toy has to figure libraries. So an SCA toy has to figure libraries. So an SCA toy has to figure out all the differences in these out all the differences in these out all the differences in these ecosystems and try to write code that ecosystems and try to write code that ecosystems and try to write code that addresses addresses addresses that. Um it's simpler when you have a that. Um it's simpler when you have a that. Um it's simpler when you have a single ecosystem in your application. single ecosystem in your application. single ecosystem in your application. Sometimes participants should they have Sometimes participants should they have Sometimes participants should they have multiple ecosystems or languages in multiple ecosystems or languages in multiple ecosystems or languages in their application and one tool wouldn't their application and one tool wouldn't their application and one tool wouldn't be able to scan their entire be able to scan their entire be able to scan their entire application. So they try to integrate application. So they try to integrate application. So they try to integrate multiple tools multiple tools multiple tools together. Um but that was a really together. Um but that was a really together. Um but that was a really really big challenge. One participant really big challenge. One participant really big challenge. One participant shared they tried doing that but because shared they tried doing that but because shared they tried doing that but because different SCA tools work differently different SCA tools work differently different SCA tools work differently they have to write like rappers or they have to write like rappers or they have to write like rappers or custom scripts to connect everything custom scripts to connect everything custom scripts to connect everything together. But if an SCA tool changes or together. But if an SCA tool changes or together. But if an SCA tool changes or makes an update, you have to update all makes an update, you have to update all makes an update, you have to update all the different rappers and custom scripts the different rappers and custom scripts the different rappers and custom scripts you wrote. So that became a very big you wrote. So that became a very big you wrote. So that became a very big maintenance cost for them. So it was a maintenance cost for them. So it was a maintenance cost for them. So it was a pretty big challenge if you have pretty big challenge if you have pretty big challenge if you have multiple ecosystems across your entire multiple ecosystems across your entire multiple ecosystems across your entire supply chain. All right. The other challenge chain. All right. The other challenge chain. All right. The other challenge related to deploying SCA tools is when related to deploying SCA tools is when related to deploying SCA tools is when you're integrating your SCA scan into you're integrating your SCA scan into you're integrating your SCA scan into your CI pipelines. your CI pipelines. your CI pipelines. Um, so integrating them into your CI Um, so integrating them into your CI Um, so integrating them into your CI pipelines is efficient because they run pipelines is efficient because they run pipelines is efficient because they run automatically when you push code or you automatically when you push code or you automatically when you push code or you make a pull request, but sometimes that make a pull request, but sometimes that make a pull request, but sometimes that comes with comes with comes with tradeoffs. For example, if the SCA tool tradeoffs. For example, if the SCA tool tradeoffs. For example, if the SCA tool is it finds a lot of alerts and it fails is it finds a lot of alerts and it fails is it finds a lot of alerts and it fails your build on every single one of them, your build on every single one of them, your build on every single one of them, then it can create a lot of pauses or then it can create a lot of pauses or then it can create a lot of pauses or stops in your pipeline. Sometimes they stops in your pipeline. Sometimes they stops in your pipeline. Sometimes they can be annoying to developers because can be annoying to developers because can be annoying to developers because they have to go back and fix stuff, they have to go back and fix stuff, they have to go back and fix stuff, re-commit the code, and if it happens re-commit the code, and if it happens re-commit the code, and if it happens too often, it could stop the entire too often, it could stop the entire too often, it could stop the entire pipeline. And one participant shared pipeline. And one participant shared pipeline. And one participant shared that in their case, the SCA tool stopped that in their case, the SCA tool stopped that in their case, the SCA tool stopped it so frequently that they transitioned it so frequently that they transitioned it so frequently that they transitioned to running the SCA scan manually, so it to running the SCA scan manually, so it to running the SCA scan manually, so it wouldn't help their development wouldn't help their development wouldn't help their development pipelines. pipelines. pipelines. Um I think the challenge here is Um I think the challenge here is Um I think the challenge here is understanding that sometimes SCA tools understanding that sometimes SCA tools understanding that sometimes SCA tools can be noisy. They can alert you on can be noisy. They can alert you on can be noisy. They can alert you on critical high all the way to low level critical high all the way to low level critical high all the way to low level alerts and you have to figure out which alerts and you have to figure out which alerts and you have to figure out which level alerts you want to stop your build level alerts you want to stop your build level alerts you want to stop your build or tests on figuring that out and also or tests on figuring that out and also or tests on figuring that out and also uh telling the developers that the SCA uh telling the developers that the SCA uh telling the developers that the SCA scan might stop because of reasons XYZ. scan might stop because of reasons XYZ. scan might stop because of reasons XYZ. It would help the developers to set It would help the developers to set It would help the developers to set expectations when they push code. So let's move on to the third code. So let's move on to the third code. So let's move on to the third research uh research question we have. research uh research question we have. research uh research question we have. What are challenges when you act on the What are challenges when you act on the What are challenges when you act on the SCA SCA SCA results? Um one of the main challenges results? Um one of the main challenges results? Um one of the main challenges participants shared was you receive participants shared was you receive participants shared was you receive these alerts. It could be a large number these alerts. It could be a large number these alerts. It could be a large number of alerts and you don't know what to do of alerts and you don't know what to do of alerts and you don't know what to do with them. with them. with them. Um participants share they usually have Um participants share they usually have Um participants share they usually have some type of prioritization method. They some type of prioritization method. They some type of prioritization method. They could prioritize by 3D metrics such as could prioritize by 3D metrics such as could prioritize by 3D metrics such as CVSS scores or scores from the SCA tool. CVSS scores or scores from the SCA tool. CVSS scores or scores from the SCA tool. They could also prioritize with the time They could also prioritize with the time They could also prioritize with the time effort needed or the impact of the effort needed or the impact of the effort needed or the impact of the vulnerability. But really determining vulnerability. But really determining vulnerability. But really determining time effort and impact itself is a time effort and impact itself is a time effort and impact itself is a challenge because you would need challenge because you would need challenge because you would need additional context for that. additional context for that. additional context for that. So determining impact is especially So determining impact is especially So determining impact is especially hard. Um you would need a lot of hard. Um you would need a lot of hard. Um you would need a lot of understanding around whether or not the understanding around whether or not the understanding around whether or not the vulnerable libraries is actually vulnerable libraries is actually vulnerable libraries is actually reachable like static function reachable like static function reachable like static function reachability but also if your reachability but also if your reachability but also if your application is reachable from the application is reachable from the application is reachable from the network. Some participants shared they network. Some participants shared they network. Some participants shared they had an application sitting behind a had an application sitting behind a had an application sitting behind a firewall, but the SCA tool would still firewall, but the SCA tool would still firewall, but the SCA tool would still alert them of vulnerabilities in the alert them of vulnerabilities in the alert them of vulnerabilities in the application and that really didn't apply application and that really didn't apply application and that really didn't apply in their in their in their case. Um, another aspect to determining case. Um, another aspect to determining case. Um, another aspect to determining impact was exploitability. impact was exploitability. impact was exploitability. Determining if there is untrusted data Determining if there is untrusted data Determining if there is untrusted data that flows into the application and if that flows into the application and if that flows into the application and if that data is sanitized before it reaches that data is sanitized before it reaches that data is sanitized before it reaches the vulnerab vulnerability is also the vulnerab vulnerability is also the vulnerab vulnerability is also something to something to something to consider. Um, one of the quotes from a consider. Um, one of the quotes from a consider. Um, one of the quotes from a participant really stuck out to me. participant really stuck out to me. participant really stuck out to me. So interpreting how a vulnerability So interpreting how a vulnerability So interpreting how a vulnerability impacts the application can be a impacts the application can be a impacts the application can be a challenge. And this participant shared challenge. And this participant shared challenge. And this participant shared that sometimes they have to talk to that sometimes they have to talk to that sometimes they have to talk to lawyers and you really have to be really lawyers and you really have to be really lawyers and you really have to be really clear and verify the impact of a clear and verify the impact of a clear and verify the impact of a vulnerability. But with existing SCA vulnerability. But with existing SCA vulnerability. But with existing SCA tool results, they were not able to tool results, they were not able to tool results, they were not able to clearly verify the impact of a clearly verify the impact of a clearly verify the impact of a vulnerability and that caused a vulnerability and that caused a vulnerability and that caused a challenge for them. Um once you receive all these alerts, Um once you receive all these alerts, Um once you receive all these alerts, developers have to try to fix or resolve developers have to try to fix or resolve developers have to try to fix or resolve the vulnerabilities. The most common the vulnerabilities. The most common the vulnerabilities. The most common method is you just update the vulnerable method is you just update the vulnerable method is you just update the vulnerable library to a newer or nonvulnerable library to a newer or nonvulnerable library to a newer or nonvulnerable version. But that also comes with some version. But that also comes with some version. But that also comes with some issues. Some participants share if you issues. Some participants share if you issues. Some participants share if you just blindly update something, you might just blindly update something, you might just blindly update something, you might break your software. um say if you break your software. um say if you break your software. um say if you update to another major version that update to another major version that update to another major version that could have different could have different could have different APIs and that might cause a break in APIs and that might cause a break in APIs and that might cause a break in your your your software. Sometimes to prevent that or software. Sometimes to prevent that or software. Sometimes to prevent that or fix the breaking changes, developers fix the breaking changes, developers fix the breaking changes, developers shared that they would have to write shared that they would have to write shared that they would have to write custom fixes or patch the code. custom fixes or patch the code. custom fixes or patch the code. One participant shared they took a One participant shared they took a One participant shared they took a vulnerable library, forked that, took vulnerable library, forked that, took vulnerable library, forked that, took out the vulnerable piece and used the out the vulnerable piece and used the out the vulnerable piece and used the fork as one of their dependencies, but fork as one of their dependencies, but fork as one of their dependencies, but that took a great deal of extra effort that took a great deal of extra effort that took a great deal of extra effort for for for them. So sometimes updating or fixing them. So sometimes updating or fixing them. So sometimes updating or fixing vulnerabilities can be a huge amount of vulnerabilities can be a huge amount of vulnerabilities can be a huge amount of effort. Um so sometimes developers or effort. Um so sometimes developers or effort. Um so sometimes developers or teams they choose to not fix teams they choose to not fix teams they choose to not fix vulnerabilities. vulnerabilities. vulnerabilities. It could either be um the security team It could either be um the security team It could either be um the security team goes to the engineering team and they goes to the engineering team and they goes to the engineering team and they decide the engineering team decides uh decide the engineering team decides uh decide the engineering team decides uh this isn't an actual impact or risk to this isn't an actual impact or risk to this isn't an actual impact or risk to our application so we don't fix our application so we don't fix our application so we don't fix that. Sometimes they weigh the security that. Sometimes they weigh the security that. Sometimes they weigh the security risk and the business risk. So say risk and the business risk. So say risk and the business risk. So say fixing this security issue would require fixing this security issue would require fixing this security issue would require a lot of effort and time but not a lot of effort and time but not a lot of effort and time but not shipping your application or software shipping your application or software shipping your application or software would also be a huge impact on the would also be a huge impact on the would also be a huge impact on the business. So in that case sometimes they business. So in that case sometimes they business. So in that case sometimes they decide okay we could put off the decide okay we could put off the decide okay we could put off the vulnerability for now and ship the vulnerability for now and ship the vulnerability for now and ship the software. Sometimes there's simply no software. Sometimes there's simply no software. Sometimes there's simply no alternative available for this library. alternative available for this library. alternative available for this library. Um, we've had participants share that Um, we've had participants share that Um, we've had participants share that they work with certain suppliers and they work with certain suppliers and they work with certain suppliers and they're the only supplier in the market. they're the only supplier in the market. they're the only supplier in the market. So, if you don't work with them, then So, if you don't work with them, then So, if you don't work with them, then you don't get the component needed for you don't get the component needed for you don't get the component needed for your software. So, these are some cases your software. So, these are some cases your software. So, these are some cases where participants shared that they where participants shared that they where participants shared that they didn't fix the vulnerabilities. Um and didn't fix the vulnerabilities. Um and didn't fix the vulnerabilities. Um and for the last two um scenarios, usually for the last two um scenarios, usually for the last two um scenarios, usually they try to mitigate the they try to mitigate the they try to mitigate the vulnerability. For example, by isolating vulnerability. For example, by isolating vulnerability. For example, by isolating the vulnerable component or removing the vulnerable component or removing the vulnerable component or removing network access. Um oftentimes when you network access. Um oftentimes when you network access. Um oftentimes when you remove network access, no untrusted data remove network access, no untrusted data remove network access, no untrusted data can come in. So the vulnerability can't can come in. So the vulnerability can't can come in. So the vulnerability can't be exploited by a malicious actor. When we were asking participants actor. When we were asking participants actor. When we were asking participants how they act on these SCA results, we've how they act on these SCA results, we've how they act on these SCA results, we've observed different approaches between observed different approaches between observed different approaches between small organizations and large small organizations and large small organizations and large organizations. With small organizations, organizations. With small organizations, organizations. With small organizations, they usually res um they usually don't they usually res um they usually don't they usually res um they usually don't have separate security teams, have separate security teams, have separate security teams, engineering teams. They have like one engineering teams. They have like one engineering teams. They have like one team that does everything. So they take team that does everything. So they take team that does everything. So they take in the results. They have to go through in the results. They have to go through in the results. They have to go through the results and come up with a fix. So the results and come up with a fix. So the results and come up with a fix. So it's more work on the single developer. it's more work on the single developer. it's more work on the single developer. With larger organizations, they have a With larger organizations, they have a With larger organizations, they have a lot more resources, people. So they have lot more resources, people. So they have lot more resources, people. So they have separate security teams and engineering separate security teams and engineering separate security teams and engineering teams and they also have a lot more teams and they also have a lot more teams and they also have a lot more alerts because their software is so much alerts because their software is so much alerts because their software is so much bigger. bigger. bigger. So to keep up with the amount of alerts So to keep up with the amount of alerts So to keep up with the amount of alerts they get, um some participants share they get, um some participants share they get, um some participants share that they built custom tooling that kind that they built custom tooling that kind that they built custom tooling that kind of pre-processes the alert results and of pre-processes the alert results and of pre-processes the alert results and then feeds them to the security team or then feeds them to the security team or then feeds them to the security team or the engineering the engineering the engineering team. So their pre-processing could be team. So their pre-processing could be team. So their pre-processing could be like finding out that vulnerability like finding out that vulnerability like finding out that vulnerability uh a lot of the different uh a lot of the different uh a lot of the different vulnerabilities have the same root cause vulnerabilities have the same root cause vulnerabilities have the same root cause like library A. So if they fix library like library A. So if they fix library like library A. So if they fix library A, they could propagate the results to A, they could propagate the results to A, they could propagate the results to all the related vulnerability all the related vulnerability all the related vulnerability alerts. But this requires like a alerts. But this requires like a alerts. But this requires like a separate team and only large separate team and only large separate team and only large organizations really have the resources organizations really have the resources organizations really have the resources to maintain a tool like this. So after seeing all the different this. So after seeing all the different this. So after seeing all the different challenges, we asked ourselves, how can challenges, we asked ourselves, how can challenges, we asked ourselves, how can the SCA process be improved? the SCA process be improved? the SCA process be improved? And let's we go back to the ideal SCA And let's we go back to the ideal SCA And let's we go back to the ideal SCA scenario where we want an SCA tool to scenario where we want an SCA tool to scenario where we want an SCA tool to have smooth deployment. Um we see some have smooth deployment. Um we see some have smooth deployment. Um we see some participants say sometimes integrating participants say sometimes integrating participants say sometimes integrating multiple tools can be a multiple tools can be a multiple tools can be a challenge. So deploying it would run challenge. So deploying it would run challenge. So deploying it would run into into into issues. We also want tools to identify issues. We also want tools to identify issues. We also want tools to identify components correctly. Um some components correctly. Um some components correctly. Um some participants complained or shared that participants complained or shared that participants complained or shared that tools had issues identifying the correct tools had issues identifying the correct tools had issues identifying the correct versions. versions. versions. And with the third characteristic, And with the third characteristic, And with the third characteristic, alerting vulnerabilities that matter. alerting vulnerabilities that matter. alerting vulnerabilities that matter. Most of these tools just alert you of Most of these tools just alert you of Most of these tools just alert you of all the vulnerabilities found and they all the vulnerabilities found and they all the vulnerabilities found and they don't really have a like a filtering for don't really have a like a filtering for don't really have a like a filtering for whether or not these vulner whether or not these vulner whether or not these vulner vulnerabilities matter in your vulnerabilities matter in your vulnerabilities matter in your application. And as for fixed application. And as for fixed application. And as for fixed suggestions, some of these tools provide suggestions, some of these tools provide suggestions, some of these tools provide fixed suggestions, but to really fix the fixed suggestions, but to really fix the fixed suggestions, but to really fix the alert, um, you update them, but alert, um, you update them, but alert, um, you update them, but sometimes you run into issues or you sometimes you run into issues or you sometimes you run into issues or you have to put in a lot of extra effort to have to put in a lot of extra effort to have to put in a lot of extra effort to go another route to fix the go another route to fix the go another route to fix the vulnerability. vulnerability. vulnerability. So based on all our observations and So based on all our observations and So based on all our observations and what makes an ideal SCA tool um we came what makes an ideal SCA tool um we came what makes an ideal SCA tool um we came up with some suggestions for SCA up with some suggestions for SCA up with some suggestions for SCA tools. The overview of all of these tools. The overview of all of these tools. The overview of all of these suggestions is really to provide more suggestions is really to provide more suggestions is really to provide more context. It could be context around the context. It could be context around the context. It could be context around the vulnerable library how it is used. For vulnerable library how it is used. For vulnerable library how it is used. For example, you could be calling multiple example, you could be calling multiple example, you could be calling multiple libraries until you reach the vulnerable libraries until you reach the vulnerable libraries until you reach the vulnerable library. So determining how it caused library. So determining how it caused library. So determining how it caused what it caused, is the function what it caused, is the function what it caused, is the function vulnerable function actually callable vulnerable function actually callable vulnerable function actually callable would be really helpful to prioritizing would be really helpful to prioritizing would be really helpful to prioritizing these these these alerts. But context could also be around alerts. But context could also be around alerts. But context could also be around the main application the main application the main application itself. For example, what the itself. For example, what the itself. For example, what the application is built on, how does it application is built on, how does it application is built on, how does it interact with users or other interact with users or other interact with users or other applications? applications? applications? um is there infrastructure configuration um is there infrastructure configuration um is there infrastructure configuration that could affect um the impact of a that could affect um the impact of a that could affect um the impact of a vulnerability or is the vulnerability or is the vulnerability or is the application sitting behind some kind of application sitting behind some kind of application sitting behind some kind of firewall for so network reachability if firewall for so network reachability if firewall for so network reachability if it's sitting behind a firewall then no it's sitting behind a firewall then no it's sitting behind a firewall then no untrusted data can actually flow to the untrusted data can actually flow to the untrusted data can actually flow to the application and then thinking about application and then thinking about application and then thinking about exploitability as well is there exploitability as well is there exploitability as well is there untrusted data that flows to this main untrusted data that flows to this main untrusted data that flows to this main application If there is no untrusted application If there is no untrusted application If there is no untrusted data, then the vulnerability is probably data, then the vulnerability is probably data, then the vulnerability is probably not going to be exploited. And is there not going to be exploited. And is there not going to be exploited. And is there like a data flow you can find to the like a data flow you can find to the like a data flow you can find to the vulnerable library? Is there vulnerable library? Is there vulnerable library? Is there sanitization of the data along the way? sanitization of the data along the way? sanitization of the data along the way? That's also something to consider as That's also something to consider as That's also something to consider as well. Um, one of the quotes from a well. Um, one of the quotes from a well. Um, one of the quotes from a participant was very insightful. This participant was very insightful. This participant was very insightful. This participant said, "If you combine SCA participant said, "If you combine SCA participant said, "If you combine SCA tools with SAS, that would be very tools with SAS, that would be very tools with SAS, that would be very helpful." So SAS could be like a call helpful." So SAS could be like a call helpful." So SAS could be like a call graph analysis where you do data flow graph analysis where you do data flow graph analysis where you do data flow analysis. Combine that with your SCA analysis. Combine that with your SCA analysis. Combine that with your SCA tool and then add infrastructure context tool and then add infrastructure context tool and then add infrastructure context as well like how your application as well like how your application as well like how your application interacts with the user or other interacts with the user or other interacts with the user or other applications. All of that combined would applications. All of that combined would applications. All of that combined would be very helpful to prioritizing these be very helpful to prioritizing these be very helpful to prioritizing these alerts. alerts. alerts. Um, some other suggestions we had was Um, some other suggestions we had was Um, some other suggestions we had was we've observed that there really is no we've observed that there really is no we've observed that there really is no perfect tool. There is no perfect SCA perfect tool. There is no perfect SCA perfect tool. There is no perfect SCA tool for tool for tool for vulnerabilities. Tools will always make vulnerabilities. Tools will always make vulnerabilities. Tools will always make some kind of mistakes. So, some kind of mistakes. So, some kind of mistakes. So, um, one of the things that could be um, one of the things that could be um, one of the things that could be improved or added in SCA tools is to improved or added in SCA tools is to improved or added in SCA tools is to learn from user input. So creating some learn from user input. So creating some learn from user input. So creating some kind of feature where the SCA user can kind of feature where the SCA user can kind of feature where the SCA user can provide input to the tool and then this provide input to the tool and then this provide input to the tool and then this could be some kind of feedback loop could be some kind of feedback loop could be some kind of feedback loop between the SCA vendor and the tool user between the SCA vendor and the tool user between the SCA vendor and the tool user so they can continuously improve the so they can continuously improve the so they can continuously improve the tool that would be helpful so the tools tool that would be helpful so the tools tool that would be helpful so the tools don't flag future alerts that aren't don't flag future alerts that aren't don't flag future alerts that aren't really impactful to the application. As for SCA users, from all application. As for SCA users, from all application. As for SCA users, from all of the observations we had, um, we've of the observations we had, um, we've of the observations we had, um, we've observed that different tools have observed that different tools have observed that different tools have different strengths and different different strengths and different different strengths and different weaknesses. So, when you're picking an weaknesses. So, when you're picking an weaknesses. So, when you're picking an FC tool, you have to understand how that FC tool, you have to understand how that FC tool, you have to understand how that would fit with your would fit with your would fit with your application. Also, different teams and application. Also, different teams and application. Also, different teams and different organizations have different different organizations have different different organizations have different workflows, pipelines, and deployment workflows, pipelines, and deployment workflows, pipelines, and deployment um, styles. So determining how an SCA um, styles. So determining how an SCA um, styles. So determining how an SCA tool fits into your entire pipeline tool fits into your entire pipeline tool fits into your entire pipeline would also be would also be would also be helpful. And when you're trying to fix helpful. And when you're trying to fix helpful. And when you're trying to fix the results, it often requires the results, it often requires the results, it often requires communication between different teams or communication between different teams or communication between different teams or between your customers. So understanding between your customers. So understanding between your customers. So understanding that different teams and different that different teams and different that different teams and different parties have different they have parties have different they have parties have different they have different tools as well. They have different tools as well. They have different tools as well. They have different pipelines. They also have a different pipelines. They also have a different pipelines. They also have a different context or understanding different context or understanding different context or understanding around the issue. So really around the issue. So really around the issue. So really understanding that and then trying to understanding that and then trying to understanding that and then trying to communicate keeping the communicate keeping the communicate keeping the communication channels alive so you can communication channels alive so you can communication channels alive so you can communicate um efficiently when communicate um efficiently when communicate um efficiently when something happens is really important as something happens is really important as something happens is really important as well. well. well. So to summarize, we've looked at we've So to summarize, we've looked at we've So to summarize, we've looked at we've talked to 20 industry professionals. We talked to 20 industry professionals. We talked to 20 industry professionals. We asked them how they interact with the asked them how they interact with the asked them how they interact with the tools, the challenges they run into. And tools, the challenges they run into. And tools, the challenges they run into. And we've observed that in across the entire we've observed that in across the entire we've observed that in across the entire SCA process. Um a lot more context is SCA process. Um a lot more context is SCA process. Um a lot more context is needed so users can evaluate the impact, needed so users can evaluate the impact, needed so users can evaluate the impact, evaluate the risk more accurately. Also evaluate the risk more accurately. Also evaluate the risk more accurately. Also understanding the context around the understanding the context around the understanding the context around the deployment of the SCA tool is really deployment of the SCA tool is really deployment of the SCA tool is really important. Different deployment styles important. Different deployment styles important. Different deployment styles have different have different have different tradeoffs. Also understanding that tradeoffs. Also understanding that tradeoffs. Also understanding that communicating the results across communicating the results across communicating the results across different parties can also generate some different parties can also generate some different parties can also generate some overhead because different parties have overhead because different parties have overhead because different parties have different contexts. Um and to summarize we our suggestions Um and to summarize we our suggestions Um and to summarize we our suggestions for SCA tools is really to provide more for SCA tools is really to provide more for SCA tools is really to provide more context could be static function context could be static function context could be static function reachability but also adding in reachability but also adding in reachability but also adding in infrastructure context network context infrastructure context network context infrastructure context network context also thinking about also thinking about also thinking about exploitability and maybe adding in some exploitability and maybe adding in some exploitability and maybe adding in some features for users to features for users to features for users to input all of that would really help SCA input all of that would really help SCA input all of that would really help SCA tools improve. tools improve. tools improve. And when you're integrating SCA tools, And when you're integrating SCA tools, And when you're integrating SCA tools, um, keep in mind that different tools um, keep in mind that different tools um, keep in mind that different tools have different strengths. And finding a have different strengths. And finding a have different strengths. And finding a tool that works well with your pipeline tool that works well with your pipeline tool that works well with your pipeline would really help so you um, prevent would really help so you um, prevent would really help so you um, prevent future challenges when you're running future challenges when you're running future challenges when you're running SCA scans. And that concludes my talk. I'd scans. And that concludes my talk. I'd scans. And that concludes my talk. I'd be happy to talk more or take any be happy to talk more or take any be happy to talk more or take any questions. Um, a little promo for questions. Um, a little promo for questions. Um, a little promo for myself. I'm also trying to wrap up my myself. I'm also trying to wrap up my myself. I'm also trying to wrap up my PhD soon. So, I'd be happy PhD soon. So, I'd be happy PhD soon. So, I'd be happy to collaborate with any research or take to collaborate with any research or take to collaborate with any research or take part in any other opportunities as well. part in any other opportunities as well. part in any other opportunities as well. Um, there's also a list of some other Um, there's also a list of some other Um, there's also a list of some other research I've worked on, so I'd be happy research I've worked on, so I'd be happy research I've worked on, so I'd be happy to take any questions. Um, and there's a mic over questions. Um, and there's a mic over questions. Um, and there's a mic over there. Hello. Uh thanks you thank you Elizabeth Hello. Uh thanks you thank you Elizabeth Hello. Uh thanks you thank you Elizabeth for this amazing talk. It was uh quite for this amazing talk. It was uh quite for this amazing talk. It was uh quite interesting. I got to learn new things. interesting. I got to learn new things. interesting. I got to learn new things. I have this question related to STA I have this question related to STA I have this question related to STA tools for binaries. Can you maybe if you tools for binaries. Can you maybe if you tools for binaries. Can you maybe if you if you are able to elaborate on that if you are able to elaborate on that if you are able to elaborate on that maybe if you have some examples or some maybe if you have some examples or some maybe if you have some examples or some suggestions that let's say if we have a suggestions that let's say if we have a suggestions that let's say if we have a few binaries and which SCA tools would few binaries and which SCA tools would few binaries and which SCA tools would one use and like how would one go about one use and like how would one go about one use and like how would one go about how will one go about how will one go about how will one go about um I can name some tools the um I can name some tools the um I can name some tools the participants shared they use some participants shared they use some participants shared they use some participants shared they use like black participants shared they use like black participants shared they use like black dog tools um I believe that was the main dog tools um I believe that was the main dog tools um I believe that was the main and from our study and relating to how and from our study and relating to how and from our study and relating to how to go about could you elaborate a little to go about could you elaborate a little to go about could you elaborate a little bit more on that? So you have several bit more on that? So you have several bit more on that? So you have several binaries and they're part of an binaries and they're part of an binaries and they're part of an ecosystem of of of an entire ecosystem of of of an entire ecosystem of of of an entire application, right? You use SC SEA tools application, right? You use SC SEA tools application, right? You use SC SEA tools since you added uh infrastructure since you added uh infrastructure since you added uh infrastructure context. How would one use SCA tools to context. How would one use SCA tools to context. How would one use SCA tools to maybe see that this binary is maybe see that this binary is maybe see that this binary is communicating to this binary and maybe communicating to this binary and maybe communicating to this binary and maybe if this binary is vulnerable then maybe if this binary is vulnerable then maybe if this binary is vulnerable then maybe through this another binary could also through this another binary could also through this another binary could also be vulnerable in the entire ecosystem. I be vulnerable in the entire ecosystem. I be vulnerable in the entire ecosystem. I think that's something that's lacking think that's something that's lacking think that's something that's lacking from SCA tools currently because they from SCA tools currently because they from SCA tools currently because they analyze a single software or a single analyze a single software or a single analyze a single software or a single binary and it lacks the interaction binary and it lacks the interaction binary and it lacks the interaction between different results. Okay. So, between different results. Okay. So, between different results. Okay. So, you're saying they work in isolation at you're saying they work in isolation at you're saying they work in isolation at the moment, but it would be nice if they the moment, but it would be nice if they the moment, but it would be nice if they worked in in in conjunction with it. worked in in in conjunction with it. worked in in in conjunction with it. Yes, that was part of the infrastructure Yes, that was part of the infrastructure Yes, that was part of the infrastructure context. We think that would be helpful. context. We think that would be helpful. context. We think that would be helpful. Okay. Okay. Understood. Thank you. Thank Okay. Okay. Understood. Thank you. Thank Okay. Okay. Understood. Thank you. Thank you. And uh we do have a question from a And uh we do have a question from a And uh we do have a question from a participant on Discord. Uh Christina Heg participant on Discord. Uh Christina Heg participant on Discord. Uh Christina Heg asked, "Have you communicated your asked, "Have you communicated your asked, "Have you communicated your report back to the SCA vendors you report back to the SCA vendors you report back to the SCA vendors you evaluated? And if so, what feedback did evaluated? And if so, what feedback did evaluated? And if so, what feedback did you get?" you get?" you get?" We have not talked directly to SCA We have not talked directly to SCA We have not talked directly to SCA vendors. Okay, let me correct myself. vendors. Okay, let me correct myself. vendors. Okay, let me correct myself. I've talked to some SCA vendors and I've I've talked to some SCA vendors and I've I've talked to some SCA vendors and I've shared our results with some of them. shared our results with some of them. shared our results with some of them. Um but I haven't received much feedback Um but I haven't received much feedback Um but I haven't received much feedback from them. They thought it was an from them. They thought it was an from them. They thought it was an interesting research and that was the interesting research and that was the interesting research and that was the feedback we got from them. Okay, great. feedback we got from them. Okay, great. feedback we got from them. Okay, great. Thanks. Question other questions in the Thanks. Question other questions in the Thanks. Question other questions in the room time. Right. Seeing Okay, seeing no further Right. Seeing Okay, seeing no further Right. Seeing Okay, seeing no further questions. Uh Elizabeth, thank you very questions. Uh Elizabeth, thank you very questions. Uh Elizabeth, thank you very much for your presentation. Much much for your presentation. Much much for your presentation. Much appreciated. Thanks so much.