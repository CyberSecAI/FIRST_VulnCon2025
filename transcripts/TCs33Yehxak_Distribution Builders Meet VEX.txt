Kind: captions Language: en Welcome Welcome Welcome everyone. A few years back when I've everyone. A few years back when I've everyone. A few years back when I've heard for the first time about heard for the first time about heard for the first time about Vax, I had a look what it Vax, I had a look what it Vax, I had a look what it means means means and I said well in the field we are and I said well in the field we are and I said well in the field we are basically doing it for four years basically doing it for four years basically doing it for four years already. already. already. But this talk is going to be a story about the experiment when we be a story about the experiment when we be a story about the experiment when we wanted to wanted to wanted to output the standard vex from our output the standard vex from our output the standard vex from our embedded embedded embedded software. So who I am? Uh my name is software. So who I am? Uh my name is software. So who I am? Uh my name is Marta. I've been working in the Marta. I've been working in the Marta. I've been working in the opensource for the last 12 opensource for the last 12 opensource for the last 12 years in a very big part of that working years in a very big part of that working years in a very big part of that working on security including security processes on security including security processes on security including security processes to this is what we are talking about to this is what we are talking about to this is what we are talking about today today today uh and in the recent times also a lot of uh and in the recent times also a lot of uh and in the recent times also a lot of about the cyber resilience act in Europe about the cyber resilience act in Europe about the cyber resilience act in Europe and I have a second talk about this and I have a second talk about this and I have a second talk about this subject tomorrow. Um, I've recently founded a tomorrow. Um, I've recently founded a tomorrow. Um, I've recently founded a company working 100% on open source company working 100% on open source company working 100% on open source security and this talk shows my own security and this talk shows my own security and this talk shows my own opinion and is not a reflection of a opinion and is not a reflection of a opinion and is not a reflection of a agreement in any project including the agreement in any project including the agreement in any project including the Octo project that I will be covering a Octo project that I will be covering a Octo project that I will be covering a lot. So first what is it? What is the lot. So first what is it? What is the lot. So first what is it? What is the YTO project? Uh, I would bet that most YTO project? Uh, I would bet that most YTO project? Uh, I would bet that most of you use devices that have been built of you use devices that have been built of you use devices that have been built using the Octo project, but you may be using the Octo project, but you may be using the Octo project, but you may be not aware. Uh the YTO project is a way not aware. Uh the YTO project is a way not aware. Uh the YTO project is a way to build your own Linux distribution and to build your own Linux distribution and to build your own Linux distribution and it's mostly used by embedded vendors to it's mostly used by embedded vendors to it's mostly used by embedded vendors to build distributions that are running build distributions that are running build distributions that are running from everything from your smart watches from everything from your smart watches from everything from your smart watches to your fridges, network routters, to your fridges, network routters, to your fridges, network routters, industrial machines and you can't really industrial machines and you can't really industrial machines and you can't really imagine imagine imagine what the advantage of the octopus is what the advantage of the octopus is what the advantage of the octopus is that it's very easy to extend for your that it's very easy to extend for your that it's very easy to extend for your hardware. So you can easily add support hardware. So you can easily add support hardware. So you can easily add support of everything that you need and it's a of everything that you need and it's a of everything that you need and it's a def facto standard for building custom def facto standard for building custom def facto standard for building custom Linux Linux Linux distributions. It's a opensource uh mix distributions. It's a opensource uh mix distributions. It's a opensource uh mix of MIT and GPL and it's a project from of MIT and GPL and it's a project from of MIT and GPL and it's a project from the Linux Foundation. So you mostly own at least one device So you mostly own at least one device So you mostly own at least one device that have been used uh have been built that have been used uh have been built that have been used uh have been built using a project using a project using a project as and we are going to discover a little as and we are going to discover a little as and we are going to discover a little bit more how we build embedded uh bit more how we build embedded uh bit more how we build embedded uh software with it. software with it. software with it. So there are two important concepts. Uh So there are two important concepts. Uh So there are two important concepts. Uh before we get further um in the language before we get further um in the language before we get further um in the language of the octa project every CP is a way to of the octa project every CP is a way to of the octa project every CP is a way to build one software package. It may be a build one software package. It may be a build one software package. It may be a compiler, it may be a library, it may be compiler, it may be a library, it may be compiler, it may be a library, it may be an application but it's one software an application but it's one software an application but it's one software package. It's the recipe is giving package. It's the recipe is giving package. It's the recipe is giving instruction on how to build it. points instruction on how to build it. points instruction on how to build it. points to the source code where to get it from to the source code where to get it from to the source code where to get it from and supports all of the programming and supports all of the programming and supports all of the programming languages and ecosystem that you can languages and ecosystem that you can languages and ecosystem that you can imagine starting from assembly and C to imagine starting from assembly and C to imagine starting from assembly and C to Java, Rust, Go, Java, Rust, Go, Java, Rust, Go, Python, NodeJS and everything else in Python, NodeJS and everything else in Python, NodeJS and everything else in the middle. the middle. the middle. Then you have something called layers. Then you have something called layers. Then you have something called layers. And layers are collections of recipes And layers are collections of recipes And layers are collections of recipes usually having some common usually having some common usually having some common purpose either to support some common purpose either to support some common purpose either to support some common hardware or for a specific hardware or for a specific hardware or for a specific functionality. So here at voncon an functionality. So here at voncon an functionality. So here at voncon an example meta security that is uh example meta security that is uh example meta security that is uh bringing in security tools that embedded bringing in security tools that embedded bringing in security tools that embedded develops may want to use in their develops may want to use in their develops may want to use in their project. project. project. Now how it looks like when you are Now how it looks like when you are Now how it looks like when you are building firmware for a building firmware for a building firmware for a device at the first glance you device at the first glance you device at the first glance you take the official layers from the take the official layers from the take the official layers from the project that they have recipes they com project that they have recipes they com project that they have recipes they com you combine them together and you build you combine them together and you build you combine them together and you build your device your device your device firmware. That's the theory. The firmware. That's the theory. The firmware. That's the theory. The practice is a little bit more practice is a little bit more practice is a little bit more complicated because you will use the complicated because you will use the complicated because you will use the standard layers, but you will also use standard layers, but you will also use standard layers, but you will also use layers specific to your hardware. They layers specific to your hardware. They layers specific to your hardware. They may come from your vendor and uh the may come from your vendor and uh the may come from your vendor and uh the layer from the vendor can modify some of layer from the vendor can modify some of layer from the vendor can modify some of the built the built the built recipes from the main layers. And it recipes from the main layers. And it recipes from the main layers. And it doesn't stop here doesn't stop here doesn't stop here because device vendors also add their because device vendors also add their because device vendors also add their own own own modifications and they add their own modifications and they add their own modifications and they add their own layers for some specific software. For layers for some specific software. For layers for some specific software. For example, for the application software example, for the application software example, for the application software that is running on your device and all of those layers can be modifying all the elements. modifying all the elements. modifying all the elements. So you may be asking a question So you may be asking a question So you may be asking a question uh where what is the link of all that uh where what is the link of all that uh where what is the link of all that with vulnerability management and the with vulnerability management and the with vulnerability management and the link is that when we have a system link is that when we have a system link is that when we have a system image we want to check it for non image we want to check it for non image we want to check it for non CVS and CVS and CVS and uh the Yoka project has a tool for that uh the Yoka project has a tool for that uh the Yoka project has a tool for that called quite originally CV check um that called quite originally CV check um that called quite originally CV check um that is used to check the whole composition is used to check the whole composition is used to check the whole composition for for for nonvulnerabilities. Um, it's pretty nonvulnerabilities. Um, it's pretty nonvulnerabilities. Um, it's pretty fast. It's not adding much to the build fast. It's not adding much to the build fast. It's not adding much to the build time and it's using all the metadata time and it's using all the metadata time and it's using all the metadata that we have from the whole bit system that we have from the whole bit system that we have from the whole bit system uh to do the scan and it has some nice uh to do the scan and it has some nice uh to do the scan and it has some nice features like you can override features like you can override features like you can override uh some information you in the scan uh a uh some information you in the scan uh a uh some information you in the scan uh a little bit of that later. and it little bit of that later. and it little bit of that later. and it supports the fact that some of the supports the fact that some of the supports the fact that some of the recipes hold specific patches to fix recipes hold specific patches to fix recipes hold specific patches to fix given given given CVs. CVs. CVs. Um, of course, as for every tool, it has Um, of course, as for every tool, it has Um, of course, as for every tool, it has some limitations. So like most of some limitations. So like most of some limitations. So like most of vulnerability scanners these days, it's vulnerability scanners these days, it's vulnerability scanners these days, it's using package versions only and it's using package versions only and it's using package versions only and it's it's not testing it's not testing it's not testing uh if the vulnerability is actually uh if the vulnerability is actually uh if the vulnerability is actually present or it's reachable in the in the present or it's reachable in the in the present or it's reachable in the in the given code. Uh it doesn't support given code. Uh it doesn't support given code. Uh it doesn't support embedded code in the embedded word. It's embedded code in the embedded word. It's embedded code in the embedded word. It's pretty common that some vendor copies pretty common that some vendor copies pretty common that some vendor copies some library in the some library in the some library in the package and this case uh this case isn't package and this case uh this case isn't package and this case uh this case isn't handled and as of today um the octop handled and as of today um the octop handled and as of today um the octop project CV check is using uh the NV only project CV check is using uh the NV only project CV check is using uh the NV only the NVD database the NVD database the NVD database uh I if you interested I'm giving a link uh I if you interested I'm giving a link uh I if you interested I'm giving a link in the slides the whole presentation uh in the slides the whole presentation uh in the slides the whole presentation uh I I had on on the talk I I had on on the talk I I had on on the talk um But let's go to practice how um how a um But let's go to practice how um how a um But let's go to practice how um how a recipe with additional vulnerability recipe with additional vulnerability recipe with additional vulnerability information can look like. This is a information can look like. This is a information can look like. This is a real example of a grab to bootloader real example of a grab to bootloader real example of a grab to bootloader recipe quite recipe quite recipe quite recent. Uh from the current main version recent. Uh from the current main version recent. Uh from the current main version um at the top you have summary um at the top you have summary um at the top you have summary description. What is interesting is the description. What is interesting is the description. What is interesting is the part with SS URI where you have all the part with SS URI where you have all the part with SS URI where you have all the components that are needed to build the components that are needed to build the components that are needed to build the actual boot actual boot actual boot loader. The first element is the main loader. The first element is the main loader. The first element is the main source source source code that we download at the build time. code that we download at the build time. code that we download at the build time. Then you have some patches that are Then you have some patches that are Then you have some patches that are specific to the embedded field that are specific to the embedded field that are specific to the embedded field that are not in the upstream graph. But then what not in the upstream graph. But then what not in the upstream graph. But then what you get, you get a bunch of files with a you get, you get a bunch of files with a you get, you get a bunch of files with a strangely familiar names like CV strangely familiar names like CV strangely familiar names like CV 45781 point patch. What's that? Those 45781 point patch. What's that? Those 45781 point patch. What's that? Those are are are patches to be applied on the grab source patches to be applied on the grab source patches to be applied on the grab source code to fix that given code to fix that given code to fix that given CD. There are many because in this CD. There are many because in this CD. There are many because in this specific example, the specific example, the specific example, the GRUB project doesn't have a policy of GRUB project doesn't have a policy of GRUB project doesn't have a policy of stable versions. So if in a device that stable versions. So if in a device that stable versions. So if in a device that is on the market, you need to grab all is on the market, you need to grab all is on the market, you need to grab all the subsequent patches and apply them to the subsequent patches and apply them to the subsequent patches and apply them to your uh release version. And for grab, your uh release version. And for grab, your uh release version. And for grab, it can really get quite it can really get quite it can really get quite long. The CVE checking in the Octo long. The CVE checking in the Octo long. The CVE checking in the Octo project is taking that into account. project is taking that into account. project is taking that into account. those files are named in such a way on those files are named in such a way on those files are named in such a way on purpose because that information is used purpose because that information is used purpose because that information is used during the CV scan. So what we are during the CV scan. So what we are during the CV scan. So what we are getting that we have a grab version 212 getting that we have a grab version 212 getting that we have a grab version 212 that is that is that is normally that has normally all of those normally that has normally all of those normally that has normally all of those vulnerabilities but they being fixed vulnerabilities but they being fixed vulnerabilities but they being fixed because of the patch files that we have because of the patch files that we have because of the patch files that we have and the patch is applied. So that's one of the features that we So that's one of the features that we So that's one of the features that we have in uh in the project. The second have in uh in the project. The second have in uh in the project. The second feature is that we can feature is that we can feature is that we can override some of the results from uh NVD override some of the results from uh NVD override some of the results from uh NVD scan. And I've collected a few examples scan. And I've collected a few examples scan. And I've collected a few examples that are quite representative of uh what that are quite representative of uh what that are quite representative of uh what has been put in um for for it has it the collection um for for it has it the collection um for for it has it the collection dates um is a quite a quite a long uh dates um is a quite a quite a long uh dates um is a quite a quite a long uh work. So for example, we have the the work. So for example, we have the the work. So for example, we have the the first CV is just saying that the entry first CV is just saying that the entry first CV is just saying that the entry in the CV in the NVD database is in the CV in the NVD database is in the CV in the NVD database is incorrect. Uh so this CV doesn't apply. incorrect. Uh so this CV doesn't apply. incorrect. Uh so this CV doesn't apply. We quite have quite many of that uh We quite have quite many of that uh We quite have quite many of that uh especially with the NVD problems especially with the NVD problems especially with the NVD problems uh as they stopped accepting patches or uh as they stopped accepting patches or uh as they stopped accepting patches or delayed accepting patches to to um to delayed accepting patches to to um to delayed accepting patches to to um to entries and there are quite many of entries and there are quite many of entries and there are quite many of those and quite many for all the those and quite many for all the those and quite many for all the vulnerabilities also. vulnerabilities also. vulnerabilities also. Uh the second example not applicable Uh the second example not applicable Uh the second example not applicable platform. platform. platform. Um the ecto project is used to build Um the ecto project is used to build Um the ecto project is used to build Linux distribution. So issues that Linux distribution. So issues that Linux distribution. So issues that happen on Windows only. They do not happen on Windows only. They do not happen on Windows only. They do not apply in our case. Uh so the the pro the apply in our case. Uh so the the pro the apply in our case. Uh so the the pro the the product uh is not doesn't have that the product uh is not doesn't have that the product uh is not doesn't have that uh vulnerability. It's not exploitable. uh vulnerability. It's not exploitable. uh vulnerability. It's not exploitable. And then the third example um even more And then the third example um even more And then the third example um even more complex um it's not applicable because complex um it's not applicable because complex um it's not applicable because of a configuration. The vulnerability of a configuration. The vulnerability of a configuration. The vulnerability could be exploited but only if there's a could be exploited but only if there's a could be exploited but only if there's a specific ownership of a specific file specific ownership of a specific file specific ownership of a specific file and the default and the default and the default configuration configuration configuration that is shipped for this package has a that is shipped for this package has a that is shipped for this package has a different configuration. So uh the different configuration. So uh the different configuration. So uh the vulnerability cannot be exploited and vulnerability cannot be exploited and vulnerability cannot be exploited and that's only the beginning of all the that's only the beginning of all the that's only the beginning of all the entries that we have uh around those uh entries that we have uh around those uh entries that we have uh around those uh those um those those um those those um those CVs. So it does look like a vex CVs. So it does look like a vex CVs. So it does look like a vex right a little bit. Um in our case of right a little bit. Um in our case of right a little bit. Um in our case of embedded products a small embedded embedded products a small embedded embedded products a small embedded product is at least 200 packages. So we product is at least 200 packages. So we product is at least 200 packages. So we absolutely need the whole thing absolutely need the whole thing absolutely need the whole thing automated otherwise it's very hard to automated otherwise it's very hard to automated otherwise it's very hard to handle and manual touch is possible but handle and manual touch is possible but handle and manual touch is possible but really only for a limited number of really only for a limited number of really only for a limited number of entries. So we tried to output a entries. So we tried to output a entries. So we tried to output a standard vex uh from uh from our tooling standard vex uh from uh from our tooling standard vex uh from uh from our tooling to be able to use it reuse it and mix to be able to use it reuse it and mix to be able to use it reuse it and mix with results from other software. Um and with results from other software. Um and with results from other software. Um and the good news is that we can actually the good news is that we can actually the good news is that we can actually generate quite many complete VEX entries generate quite many complete VEX entries generate quite many complete VEX entries uh from uh from the data that we have. uh from uh from the data that we have. uh from uh from the data that we have. But not everything fits any vex standard But not everything fits any vex standard But not everything fits any vex standard that we can put our hands that we can put our hands that we can put our hands on. So uh we need at least non-standard on. So uh we need at least non-standard on. So uh we need at least non-standard extensions to output that all that we extensions to output that all that we extensions to output that all that we have. For example, there is no vex have. For example, there is no vex have. For example, there is no vex statement for uh the Nvidia database is statement for uh the Nvidia database is statement for uh the Nvidia database is wrong for this entry. Um there's a wrong for this entry. Um there's a wrong for this entry. Um there's a status for disputed uh in the CV status for disputed uh in the CV status for disputed uh in the CV entries, but it's quite complicated to entries, but it's quite complicated to entries, but it's quite complicated to to expose it in vex and we also have a to expose it in vex and we also have a to expose it in vex and we also have a situation like this is an abandoned situation like this is an abandoned situation like this is an abandoned project. There's not going to be a project. There's not going to be a project. There's not going to be a fix. Um and this is also uh also not fix. Um and this is also uh also not fix. Um and this is also uh also not directly possible. And there are more directly possible. And there are more directly possible. And there are more cases like that that we cannot actually cases like that that we cannot actually cases like that that we cannot actually expose. Then expose. Then expose. Then um what we were looking for and what um what we were looking for and what um what we were looking for and what would make sense to is to have at least would make sense to is to have at least would make sense to is to have at least two levels of assessments because we two levels of assessments because we two levels of assessments because we have generic assessments that are always have generic assessments that are always have generic assessments that are always true. So like fixing NVD entries and true. So like fixing NVD entries and true. So like fixing NVD entries and that could probably all go to CV that could probably all go to CV that could probably all go to CV enrichment. And then we enrichment. And then we enrichment. And then we have assessments that are specific to have assessments that are specific to have assessments that are specific to products to specific build configuration products to specific build configuration products to specific build configuration and this is more similar to a typical and this is more similar to a typical and this is more similar to a typical VEX. Currently we have the only the one VEX. Currently we have the only the one VEX. Currently we have the only the one set of metadata that describing set of metadata that describing set of metadata that describing everything because we couldn't find a everything because we couldn't find a everything because we couldn't find a good format to to express everything good format to to express everything good format to to express everything else. And then we have some interesting else. And then we have some interesting else. And then we have some interesting open problems. Uh as open problems. Uh as open problems. Uh as layers from vendors from device layers from vendors from device layers from vendors from device manufacturers they can manufacturers they can manufacturers they can modify the build configuration. they modify the build configuration. they modify the build configuration. they theoretically could modify also the vex theoretically could modify also the vex theoretically could modify also the vex statements that have been created in uh statements that have been created in uh statements that have been created in uh in the main layers. For example, in the in the main layers. For example, in the in the main layers. For example, in the case of a configuration case of a configuration case of a configuration option, if there's a statement that this option, if there's a statement that this option, if there's a statement that this configuration option is configuration option is configuration option is disabled by disabled by disabled by default and and the package doesn't have default and and the package doesn't have default and and the package doesn't have a a a vulnerability, someone enables that vulnerability, someone enables that vulnerability, someone enables that option in their own layer in the same option in their own layer in the same option in their own layer in the same package and the statement doesn't hold package and the statement doesn't hold package and the statement doesn't hold anymore. And of course, people can add anymore. And of course, people can add anymore. And of course, people can add patches. Those patches may have patches. Those patches may have patches. Those patches may have additional vulnerabilities. They may be additional vulnerabilities. They may be additional vulnerabilities. They may be unblocking some other unblocking some other unblocking some other vulnerabilities. Uh so there are more uh vulnerabilities. Uh so there are more uh vulnerabilities. Uh so there are more uh interesting open uh questions like that. interesting open uh questions like that. interesting open uh questions like that. How how do we handle the that How how do we handle the that How how do we handle the that inheritance and I do not have a good uh inheritance and I do not have a good uh inheritance and I do not have a good uh good answer for good answer for good answer for that. So uh the current situation is that. So uh the current situation is that. So uh the current situation is that uh we do generate vex today. It's that uh we do generate vex today. It's that uh we do generate vex today. It's not a mainline uh option of the octo not a mainline uh option of the octo not a mainline uh option of the octo project. Um but uh but we are advancing. project. Um but uh but we are advancing. project. Um but uh but we are advancing. Uh the Uh the Uh the current vex output is based on open vex current vex output is based on open vex current vex output is based on open vex but it has some additional statuses that but it has some additional statuses that but it has some additional statuses that we had to add. Um and is a part of a we had to add. Um and is a part of a we had to add. Um and is a part of a bigger software bigger software bigger software uh working on generating uh C generating uh working on generating uh C generating uh working on generating uh C generating CV rated information outside of the CV rated information outside of the CV rated information outside of the build itself. Uh the code is open source build itself. Uh the code is open source build itself. Uh the code is open source and you can have a look uh if you are and you can have a look uh if you are and you can have a look uh if you are interested and uh we are really looking interested and uh we are really looking interested and uh we are really looking for more standard solutions to deal for more standard solutions to deal for more standard solutions to deal uh with uh with the problems that we uh with uh with the problems that we uh with uh with the problems that we have seen. U embedded vendors have seen. U embedded vendors have seen. U embedded vendors um will quite likely need to merge um will quite likely need to merge um will quite likely need to merge sbombs and vexes for example for sbombs and vexes for example for sbombs and vexes for example for multiple processors that they have in multiple processors that they have in multiple processors that they have in one product. one product. one product. in one product. So, it'd be good to have in one product. So, it'd be good to have in one product. So, it'd be good to have a consistent uh set of formats so that a consistent uh set of formats so that a consistent uh set of formats so that this merge is really this merge is really this merge is really possible and that uh with uh with possible and that uh with uh with possible and that uh with uh with additional extensions and additional additional extensions and additional additional extensions and additional statuses that it's not that easy as it statuses that it's not that easy as it statuses that it's not that easy as it uh as it would ideally be. uh as it would ideally be. uh as it would ideally be. So uh this is So uh this is So uh this is the end of the presentation. Uh we've the end of the presentation. Uh we've the end of the presentation. Uh we've managed to generate backs from all the managed to generate backs from all the managed to generate backs from all the metadata that we have. That's pretty metadata that we have. That's pretty metadata that we have. That's pretty nice. Um and we are looking forward into nice. Um and we are looking forward into nice. Um and we are looking forward into finding solutions finding solutions finding solutions um on how to fill the the the missing um on how to fill the the the missing um on how to fill the the the missing gaps, how to add those additional gaps, how to add those additional gaps, how to add those additional statuses, how to easily uh do the statuses, how to easily uh do the statuses, how to easily uh do the vulnerability enrichment uh that that is vulnerability enrichment uh that that is vulnerability enrichment uh that that is necessary in most cases and I'm really necessary in most cases and I'm really necessary in most cases and I'm really interested to have a discussion about interested to have a discussion about interested to have a discussion about how to do that. Um on this slide you can how to do that. Um on this slide you can how to do that. Um on this slide you can find my contact information. you can find my contact information. you can find my contact information. you can contact by email, by LinkedIn, there are contact by email, by LinkedIn, there are contact by email, by LinkedIn, there are many other ways. So um if there are many other ways. So um if there are many other ways. So um if there are questions in the room, I would be really questions in the room, I would be really questions in the room, I would be really happy to take them. Questions in the happy to take them. Questions in the happy to take them. Questions in the discord server. So the first question is discord server. So the first question is discord server. So the first question is please define standard VX uh C CSF VX, please define standard VX uh C CSF VX, please define standard VX uh C CSF VX, Cyclone DX style VX, open Cyclone DX style VX, open Cyclone DX style VX, open VX. Uh so um when uh when I was talking VX. Uh so um when uh when I was talking VX. Uh so um when uh when I was talking about the VEX as about the VEX as about the VEX as uh in this presentation as mostly in uh in this presentation as mostly in uh in this presentation as mostly in general we have looked into multiple general we have looked into multiple general we have looked into multiple standards uh with in more in details in standards uh with in more in details in standards uh with in more in details in CISF and in openex and both of them uh CISF and in openex and both of them uh CISF and in openex and both of them uh didn't have all the statuses that uh didn't have all the statuses that uh didn't have all the statuses that uh that we would ideally have. that we would ideally have. that we would ideally have. uh we haven't looked into all the all uh we haven't looked into all the all uh we haven't looked into all the all the orders uh all the formats but I the orders uh all the formats but I the orders uh all the formats but I would assume that would be similar. If would assume that would be similar. If would assume that would be similar. If if there's a format that has all of if there's a format that has all of if there's a format that has all of those uh statuses I'm absolutely uh those uh statuses I'm absolutely uh those uh statuses I'm absolutely uh ready to to have a look. ready to to have a look. ready to to have a look. Um we are we do we do not have strict Um we are we do we do not have strict Um we are we do we do not have strict requirements of which format it is. It requirements of which format it is. It requirements of which format it is. It just has to be a standard format. just has to be a standard format. just has to be a standard format. We have another question. Uh where We have another question. Uh where We have another question. Uh where should or could a proper vex should or could a proper vex should or could a proper vex specification standard specification standard specification standard live? Uh where it should live? Uh in my live? Uh where it should live? Uh in my live? Uh where it should live? Uh in my opinion um as most of the vex standards opinion um as most of the vex standards opinion um as most of the vex standards uh as they are it should be open source uh as they are it should be open source uh as they are it should be open source with open source tooling so that with open source tooling so that with open source tooling so that everyone everyone everyone um can study it uh can um can use those um can study it uh can um can use those um can study it uh can um can use those to those tools and if they want to do to those tools and if they want to do to those tools and if they want to do conversions between different formats as conversions between different formats as conversions between different formats as it's today between CF uh open it's today between CF uh open it's today between CF uh open vex the vex of esped3 and other formats vex the vex of esped3 and other formats vex the vex of esped3 and other formats so that people will be able to do that. so that people will be able to do that. so that people will be able to do that. Um but me personally, I think that at Um but me personally, I think that at Um but me personally, I think that at this moment we have enough of formats this moment we have enough of formats this moment we have enough of formats and that would maybe a good uh a good and that would maybe a good uh a good and that would maybe a good uh a good moment to moment to moment to um to unify to this to to one format um to unify to this to to one format um to unify to this to to one format that fits uh all the requirements. that fits uh all the requirements. that fits uh all the requirements. Uh, one more question. From your Uh, one more question. From your Uh, one more question. From your experience, are there any changes would experience, are there any changes would experience, are there any changes would you like to see in Vex? Um, yeah. Um, yeah. Um, yeah. Um, it would be good to for for Um, it would be good to for for Um, it would be good to for for um most of uh of the fields that are in um most of uh of the fields that are in um most of uh of the fields that are in uh in the format. uh it was pretty easy uh in the format. uh it was pretty easy uh in the format. uh it was pretty easy to generate it and it it is um quite to generate it and it it is um quite to generate it and it it is um quite reasonable. Um however uh in many reasonable. Um however uh in many reasonable. Um however uh in many standards that there are fields that standards that there are fields that standards that there are fields that um contain important information but are um contain important information but are um contain important information but are not totally machine readable. not totally machine readable. not totally machine readable. uh contain basically uh contain basically uh contain basically text. And for us and machine uh machine text. And for us and machine uh machine text. And for us and machine uh machine processing uh we really prefer machine processing uh we really prefer machine processing uh we really prefer machine readable uh readable uh readable uh fields enumerations of uh of different fields enumerations of uh of different fields enumerations of uh of different situations so that we can then uh use it situations so that we can then uh use it situations so that we can then uh use it in in processing in the embedded field. in in processing in the embedded field. in in processing in the embedded field. um uh people are really asking for um uh people are really asking for um uh people are really asking for completely automated completely automated completely automated solutions. Many many product solutions. Many many product solutions. Many many product manufacturers they they do not have manufacturers they they do not have manufacturers they they do not have basically security teams. So they are basically security teams. So they are basically security teams. So they are not able to uh to have people uh filling not able to uh to have people uh filling not able to uh to have people uh filling entries manual especially for hundreds entries manual especially for hundreds entries manual especially for hundreds packages that they have. Hi Martha. Question from Silva living Hi Martha. Question from Silva living Hi Martha. Question from Silva living around Gro by the way and just a around Gro by the way and just a around Gro by the way and just a question. You mentioned the fact you are question. You mentioned the fact you are question. You mentioned the fact you are looking for like uh solutions tools to looking for like uh solutions tools to looking for like uh solutions tools to merge vex results from various tools. merge vex results from various tools. merge vex results from various tools. Can you describe a little bit more like Can you describe a little bit more like Can you describe a little bit more like this use case? My understanding is this use case? My understanding is this use case? My understanding is perhaps you're using different tools perhaps you're using different tools perhaps you're using different tools which are able to produce this vex which are able to produce this vex which are able to produce this vex document and the idea behind is to merge document and the idea behind is to merge document and the idea behind is to merge the duplicate whatever the information the duplicate whatever the information the duplicate whatever the information from these various uh tools. Is that is from these various uh tools. Is that is from these various uh tools. Is that is that correct? Uh yeah, in the embedded that correct? Uh yeah, in the embedded that correct? Uh yeah, in the embedded field uh quite often one device has field uh quite often one device has field uh quite often one device has multiple processors multiple processors multiple processors uh and those processors for those uh and those processors for those uh and those processors for those processors when you build software you processors when you build software you processors when you build software you usually use different tool chains. So um usually use different tool chains. So um usually use different tool chains. So um you may end up with different you will you may end up with different you will you may end up with different you will quite likely end up with different quite likely end up with different quite likely end up with different sbombs and also different vexes. Uh it sbombs and also different vexes. Uh it sbombs and also different vexes. Uh it may even happen that you will end up in may even happen that you will end up in may even happen that you will end up in different formats from each of those different formats from each of those different formats from each of those processors. processors. processors. Um and Um and Um and uh there is basically a need to be able uh there is basically a need to be able uh there is basically a need to be able convert from any format to any format so convert from any format to any format so convert from any format to any format so that you can do merging. So the that you can do merging. So the that you can do merging. So the challenges are around the fact standards challenges are around the fact standards challenges are around the fact standards are different plus multiple files. Yeah. are different plus multiple files. Yeah. are different plus multiple files. Yeah. Okay. Thank you. Okay. Thank you. Okay. Thank you. We have another question. Uh why does We have another question. Uh why does We have another question. Uh why does YTO care about VEX? Are YTO-based YTO care about VEX? Are YTO-based YTO care about VEX? Are YTO-based distributions pushing for VEX? distributions pushing for VEX? distributions pushing for VEX? Uh there are people who are asking me Uh there are people who are asking me Uh there are people who are asking me about VEX about VEX about VEX uh to uh to output it. Um, I can tell uh to uh to output it. Um, I can tell uh to uh to output it. Um, I can tell you that I've been working on the CV you that I've been working on the CV you that I've been working on the CV checking code for the Yokto project for checking code for the Yokto project for checking code for the Yokto project for the last few years and they there's just the last few years and they there's just the last few years and they there's just more and more interest uh in this in the more and more interest uh in this in the more and more interest uh in this in the code itself in the correctness of code itself in the correctness of code itself in the correctness of results. So there are more and more results. So there are more and more results. So there are more and more companies that want to companies that want to companies that want to output correct output correct output correct uh information about the uh information about the uh information about the vulnerabilities nonvulnerabilities that vulnerabilities nonvulnerabilities that vulnerabilities nonvulnerabilities that they have in the embedded code for the they have in the embedded code for the they have in the embedded code for the regulatory reasons and for other regulatory reasons and for other regulatory reasons and for other reasons. Uh so um the embedded reasons. Uh so um the embedded reasons. Uh so um the embedded field doesn't have really much knowledge field doesn't have really much knowledge field doesn't have really much knowledge about vex itself yet. They are currently about vex itself yet. They are currently about vex itself yet. They are currently mostly about generating sbombs and mostly about generating sbombs and mostly about generating sbombs and eventually generating CV related eventually generating CV related eventually generating CV related information. Uh but for me that will be information. Uh but for me that will be information. Uh but for me that will be that's a very likely next that's a very likely next that's a very likely next step. Um and in in many cases they do step. Um and in in many cases they do step. Um and in in many cases they do vex like behavior but it happens mostly vex like behavior but it happens mostly vex like behavior but it happens mostly in uh in spreadsheets when when customers ask. spreadsheets when when customers ask. spreadsheets when when customers ask. So moving to a machine readable format So moving to a machine readable format So moving to a machine readable format maybe that's would be a good idea. That maybe that's would be a good idea. That maybe that's would be a good idea. That would be my answer. We have a followup on the question about We have a followup on the question about We have a followup on the question about where VEX should live. So they're asking where VEX should live. So they're asking where VEX should live. So they're asking uh is there any specific preference for uh is there any specific preference for uh is there any specific preference for ETSI, ISO, OSS, IETF, open SSF or ETSI, ISO, OSS, IETF, open SSF or ETSI, ISO, OSS, IETF, open SSF or something independent? something independent? something independent? Uh on opensource place and the Uh on opensource place and the Uh on opensource place and the specification specification specification uh for the embedded crowd, it must be uh for the embedded crowd, it must be uh for the embedded crowd, it must be open source. So you you don't need to open source. So you you don't need to open source. So you you don't need to pay to access it. That already removes pay to access it. That already removes pay to access it. That already removes some of the organizations from the list. Other than that, I do not have a strong Other than that, I do not have a strong Other than that, I do not have a strong uh preference as long as it stays open uh preference as long as it stays open uh preference as long as it stays open source. Um I I'm in the room and I missed most Um I I'm in the room and I missed most Um I I'm in the room and I missed most of the first half at least of your talk. of the first half at least of your talk. of the first half at least of your talk. So apologies for that. But So apologies for that. But So apologies for that. But um from your experience, are there um from your experience, are there um from your experience, are there changes you would like to see to VEX? It changes you would like to see to VEX? It changes you would like to see to VEX? It seemed like there might be, but I I seemed like there might be, but I I seemed like there might be, but I I didn't quite catch that. Yeah. Um so didn't quite catch that. Yeah. Um so didn't quite catch that. Yeah. Um so there are two there are two main there are two there are two main there are two there are two main aspects. Uh first is this the um the aspects. Uh first is this the um the aspects. Uh first is this the um the expressions of vulnerability statuses. expressions of vulnerability statuses. expressions of vulnerability statuses. It doesn't allow to express everything It doesn't allow to express everything It doesn't allow to express everything that we would like to. And I have that we would like to. And I have that we would like to. And I have examples to share with everyone who examples to share with everyone who examples to share with everyone who wants to uh who has discuss that. Uh and wants to uh who has discuss that. Uh and wants to uh who has discuss that. Uh and the second uh the second less important the second uh the second less important the second uh the second less important uh issue that we had uh is that uh some uh issue that we had uh is that uh some uh issue that we had uh is that uh some fields fields fields are designed for human readable are designed for human readable are designed for human readable uh content. uh content. uh content. while um the information is important while um the information is important while um the information is important and it's not available in a machine and it's not available in a machine and it's not available in a machine readable uh field at the same time can uh can uh can show examples time can uh can uh can show examples time can uh can uh can show examples also of that uh when we have a time to also of that uh when we have a time to also of that uh when we have a time to talk in more detail. So for me those are talk in more detail. So for me those are talk in more detail. So for me those are the two most important the two most important the two most important uh issues. Um other than that uh issues. Um other than that uh issues. Um other than that um at the basically level all of the vex um at the basically level all of the vex um at the basically level all of the vex formats that we have had a look uh they formats that we have had a look uh they formats that we have had a look uh they fulfill the fulfill the fulfill the role just fine. Uh I to be honest I don't fine. Uh I to be honest I don't fine. Uh I to be honest I don't understand vex that much. It's something understand vex that much. It's something understand vex that much. It's something I learned today. So uh my question is I learned today. So uh my question is I learned today. So uh my question is that can YTO be used like a debugger for that can YTO be used like a debugger for that can YTO be used like a debugger for something let's say bassband because something let's say bassband because something let's say bassband because like you have a PhD in telecom and so uh like you have a PhD in telecom and so uh like you have a PhD in telecom and so uh can it be used as a GDB for something can it be used as a GDB for something can it be used as a GDB for something like bassband because uh it's uh gets like bassband because uh it's uh gets like bassband because uh it's uh gets very complex when you debug something very complex when you debug something very complex when you debug something like that. Uh you can like that. Uh you can like that. Uh you can definitely create a di diagnostic uh definitely create a di diagnostic uh definitely create a di diagnostic uh hardware device like um telecom protocol hardware device like um telecom protocol hardware device like um telecom protocol monitoring or or something like that monitoring or or something like that monitoring or or something like that with with the octop with with the octop with with the octop project but you would probably you would project but you would probably you would project but you would probably you would probably need to develop a little bit of probably need to develop a little bit of probably need to develop a little bit of software to do the actual analysis but software to do the actual analysis but software to do the actual analysis but everything else that you need to create everything else that you need to create everything else that you need to create that device you would probably find that device you would probably find that device you would probably find inside. inside. inside. So is uh YTO would would consider going So is uh YTO would would consider going So is uh YTO would would consider going in that direction towards like the open in that direction towards like the open in that direction towards like the open source development of tools like that. source development of tools like that. source development of tools like that. Uh this up to the community because PE Uh this up to the community because PE Uh this up to the community because PE pe uh people contribute pe uh people contribute pe uh people contribute uh recipes to build uh the tools that uh recipes to build uh the tools that uh recipes to build uh the tools that they want to. So if there is interest they want to. So if there is interest they want to. So if there is interest that people interested then then that's that people interested then then that's that people interested then then that's going to happen. I think that's all uh we have. We don't I think that's all uh we have. We don't I think that's all uh we have. We don't have any more questions and we're right have any more questions and we're right have any more questions and we're right on time. Thank you so much. Thank you.