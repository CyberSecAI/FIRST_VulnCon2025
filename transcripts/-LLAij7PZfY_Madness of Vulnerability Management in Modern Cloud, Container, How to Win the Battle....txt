Kind: captions Language: en All right. Hello everyone. How are you All right. Hello everyone. How are you All right. Hello everyone. How are you guys doing guys doing guys doing today? Good. So, we have a little bit of today? Good. So, we have a little bit of today? Good. So, we have a little bit of a YOLO agile presentation. So, my a YOLO agile presentation. So, my a YOLO agile presentation. So, my co-speaker unfortunately is sick. So, we co-speaker unfortunately is sick. So, we co-speaker unfortunately is sick. So, we had to had to had to swap Nate. So, James is the new swap Nate. So, James is the new swap Nate. So, James is the new Nate. So, we're gonna do this a little Nate. So, we're gonna do this a little Nate. So, we're gonna do this a little bit in the agile way. But, welcome bit in the agile way. But, welcome bit in the agile way. But, welcome everyone. Thank you for coming to our everyone. Thank you for coming to our everyone. Thank you for coming to our talk. Um we're going to talk about talk. Um we're going to talk about talk. Um we're going to talk about vulnerability threatcentric approach and vulnerability threatcentric approach and vulnerability threatcentric approach and a practitioner to practitioner approach a practitioner to practitioner approach a practitioner to practitioner approach on vulnerability on vulnerability on vulnerability management. I've been in this industry management. I've been in this industry management. I've been in this industry quite a while. Um I've seen things that quite a while. Um I've seen things that quite a while. Um I've seen things that you human can't imagine things fixed by you human can't imagine things fixed by you human can't imagine things fixed by SLA product team asking to fix SLA product team asking to fix SLA product team asking to fix Kubernetes cluster by patching system or Kubernetes cluster by patching system or Kubernetes cluster by patching system or by tracing who owns that particular by tracing who owns that particular by tracing who owns that particular node. So, I've seen it all. And who can node. So, I've seen it all. And who can node. So, I've seen it all. And who can mention where I take this meme or this mention where I take this meme or this mention where I take this meme or this picture? picture? picture? Yes. Fantastic. We have nerds in the Yes. Fantastic. We have nerds in the Yes. Fantastic. We have nerds in the room. I'm glad because I'm going to use room. I'm glad because I'm going to use room. I'm glad because I'm going to use plenty of jokes around the presentation plenty of jokes around the presentation plenty of jokes around the presentation because because because somebody said if you talk about heavy somebody said if you talk about heavy somebody said if you talk about heavy stuff, you should have a kitten picture stuff, you should have a kitten picture stuff, you should have a kitten picture or a meme. So this presentation is going or a meme. So this presentation is going or a meme. So this presentation is going to be full of jokes, memes and also very to be full of jokes, memes and also very to be full of jokes, memes and also very deep serious stuff and we try to balance deep serious stuff and we try to balance deep serious stuff and we try to balance it across. So works. Yeah. So we have Nate Sander So works. Yeah. So we have Nate Sander So works. Yeah. So we have Nate Sander here or James is a new Nate. I'm Franchescoon for Folks Franks Nate. I'm Franchescoon for Folks Franks Nate. I'm Franchescoon for Folks Franks or for Friends Franks. I've been in this or for Friends Franks. I've been in this or for Friends Franks. I've been in this industry for 25 years and counting. I've industry for 25 years and counting. I've industry for 25 years and counting. I've been leading application security and been leading application security and been leading application security and cloud security program. And what I'm cloud security program. And what I'm cloud security program. And what I'm going to use on this speaker note is in going to use on this speaker note is in going to use on this speaker note is in this speaker presentation is you can this speaker presentation is you can this speaker presentation is you can argue with people but you can't argue argue with people but you can't argue argue with people but you can't argue with data. It's very easy to argue or with data. It's very easy to argue or with data. It's very easy to argue or have an opinion about something or a have an opinion about something or a have an opinion about something or a vulnerability on exploitability but data vulnerability on exploitability but data vulnerability on exploitability but data is actually hard facts. So it's very is actually hard facts. So it's very is actually hard facts. So it's very hard to argue with hard to argue with hard to argue with people if you have data. So people if you have data. So people if you have data. So unfortunately my core speaker is not unfortunately my core speaker is not unfortunately my core speaker is not here. So James is a new Nate. Hello. You here. So James is a new Nate. Hello. You here. So James is a new Nate. Hello. You want to take it off? We've transformed. want to take it off? We've transformed. want to take it off? We've transformed. Yes. My background uh until 8 months ago Yes. My background uh until 8 months ago Yes. My background uh until 8 months ago I was a security engineer uh at I was a security engineer uh at I was a security engineer uh at different cloudnative companies. So, different cloudnative companies. So, different cloudnative companies. So, Reliquest and uh some different startups Reliquest and uh some different startups Reliquest and uh some different startups and then most recently at Pedager duty and then most recently at Pedager duty and then most recently at Pedager duty where I was a part of our initiatives to where I was a part of our initiatives to where I was a part of our initiatives to get Fed ramp authorized and we obviously get Fed ramp authorized and we obviously get Fed ramp authorized and we obviously have a very cloudnative architecture have a very cloudnative architecture have a very cloudnative architecture stack and so uh I was just as much in stack and so uh I was just as much in stack and so uh I was just as much in the in the weeds of all that and now I the in the weeds of all that and now I the in the weeds of all that and now I do Lacatio which is just a way to try to do Lacatio which is just a way to try to do Lacatio which is just a way to try to help uh engineers find security tools help uh engineers find security tools help uh engineers find security tools that they can use to make their lives that they can use to make their lives that they can use to make their lives easier hopefully. easier hopefully. easier hopefully. Go for it. Go for it. Go for it. So at a high level what we're trying to So at a high level what we're trying to So at a high level what we're trying to accomplish in this talk is two accomplish in this talk is two accomplish in this talk is two overarching ideas. The first idea is how overarching ideas. The first idea is how overarching ideas. The first idea is how has the cloud really change the way that has the cloud really change the way that has the cloud really change the way that we need to approach um vulnerability we need to approach um vulnerability we need to approach um vulnerability management and the idea of even context management and the idea of even context management and the idea of even context and bringing context to all of these and bringing context to all of these and bringing context to all of these things from uh application security things from uh application security things from uh application security owners to infrastructure security people owners to infrastructure security people owners to infrastructure security people to cloud security people. How do we to cloud security people. How do we to cloud security people. How do we unify that story in a way that makes unify that story in a way that makes unify that story in a way that makes sense? And then the second part is how sense? And then the second part is how sense? And then the second part is how do we prioritize vulnerabilities in a do we prioritize vulnerabilities in a do we prioritize vulnerabilities in a way that actually um allows us to better way that actually um allows us to better way that actually um allows us to better deal with this new scope of deal with this new scope of deal with this new scope of vulnerability management that we're vulnerability management that we're vulnerability management that we're dealing with. And so that's the threat dealing with. And so that's the threat dealing with. And so that's the threat ccentric uh idea that Frank's going to ccentric uh idea that Frank's going to ccentric uh idea that Frank's going to be talking a lot more about in terms of be talking a lot more about in terms of be talking a lot more about in terms of how does a vulnerability actually how does a vulnerability actually how does a vulnerability actually translate to a real risk or a real translate to a real risk or a real translate to a real risk or a real threat that's happening. Switch over to the oldfashioned way. Switch over to the oldfashioned way. Switch over to the oldfashioned way. All right. So, we're going to start by All right. So, we're going to start by All right. So, we're going to start by saying to put your hands up if you saying to put your hands up if you saying to put your hands up if you believe that your company has a believe that your company has a believe that your company has a functional vulnerability management functional vulnerability management functional vulnerability management program and if you believe that it program and if you believe that it program and if you believe that it covers all areas and scope of covers all areas and scope of covers all areas and scope of vulnerabilities and if you are vulnerabilities and if you are vulnerabilities and if you are prioritizing all your findings by a prioritizing all your findings by a prioritizing all your findings by a normalized normalized normalized risk. Is that for all three? We got one. risk. Is that for all three? We got one. risk. Is that for all three? We got one. So the goal of our presentation really So the goal of our presentation really So the goal of our presentation really is to say that we don't believe you and is to say that we don't believe you and is to say that we don't believe you and to see that hopefully by the end of it to see that hopefully by the end of it to see that hopefully by the end of it is to show uh why this is a lot more is to show uh why this is a lot more is to show uh why this is a lot more complicated than it feels like. And the complicated than it feels like. And the complicated than it feels like. And the main context for this is uh how many of main context for this is uh how many of main context for this is uh how many of you have been doing vulnerability you have been doing vulnerability you have been doing vulnerability management since like 2015 and before management since like 2015 and before management since like 2015 and before which it's weird to be able to say that which it's weird to be able to say that which it's weird to be able to say that now because I was always like the now because I was always like the now because I was always like the youngest guy and now I'm not 2015. Um, youngest guy and now I'm not 2015. Um, youngest guy and now I'm not 2015. Um, but when I was doing this, right, I was but when I was doing this, right, I was but when I was doing this, right, I was at different MSPs on vSphere type at different MSPs on vSphere type at different MSPs on vSphere type architectures and data centers and architectures and data centers and architectures and data centers and vulnerability management was honestly so vulnerability management was honestly so vulnerability management was honestly so much more simple in those days. Um, much more simple in those days. Um, much more simple in those days. Um, because we were either using a because we were either using a because we were either using a network-based scanner that was checking network-based scanner that was checking network-based scanner that was checking the headers of different uh systems that the headers of different uh systems that the headers of different uh systems that were out there and saying here's what were out there and saying here's what were out there and saying here's what version it's on, here's the version to version it's on, here's the version to version it's on, here's the version to move to and that that was kind of it. Or move to and that that was kind of it. Or move to and that that was kind of it. Or maybe we were advanced in using like maybe we were advanced in using like maybe we were advanced in using like tenable and scanning different instances tenable and scanning different instances tenable and scanning different instances for what vulnerabilities are there and for what vulnerabilities are there and for what vulnerabilities are there and moving on from that place. But with the moving on from that place. But with the moving on from that place. But with the cloud, we have really seen just the cloud, we have really seen just the cloud, we have really seen just the explosion of vulnerabilities. And I explosion of vulnerabilities. And I explosion of vulnerabilities. And I think a lot of us bought into this idea, think a lot of us bought into this idea, think a lot of us bought into this idea, if you were like me, of doing shift left if you were like me, of doing shift left if you were like me, of doing shift left scanning and it's going to make all of scanning and it's going to make all of scanning and it's going to make all of our lives easier because we're going to our lives easier because we're going to our lives easier because we're going to get all of these uh vulnerabilities get all of these uh vulnerabilities get all of these uh vulnerabilities fixed earlier. And I think an unexpected fixed earlier. And I think an unexpected fixed earlier. And I think an unexpected side effect of that was actually side effect of that was actually side effect of that was actually uncovering the nightmarish complexity of uncovering the nightmarish complexity of uncovering the nightmarish complexity of vulnerabilities that exist in modern vulnerabilities that exist in modern vulnerabilities that exist in modern environments because no longer are we environments because no longer are we environments because no longer are we just looking at that base OS level of just looking at that base OS level of just looking at that base OS level of what what OS are we on? what do we need what what OS are we on? what do we need what what OS are we on? what do we need to move to? But now we're looking at uh to move to? But now we're looking at uh to move to? But now we're looking at uh software composition analysis. We're software composition analysis. We're software composition analysis. We're looking at container vulnerabilities. looking at container vulnerabilities. looking at container vulnerabilities. We're having to trace those We're having to trace those We're having to trace those vulnerabilities as they're deployed out vulnerabilities as they're deployed out vulnerabilities as they're deployed out to production. companies have adopted to production. companies have adopted to production. companies have adopted open source in a way that uh I was going open source in a way that uh I was going open source in a way that uh I was going to say I don't think anyone really could to say I don't think anyone really could to say I don't think anyone really could have predicted the scale and the speed have predicted the scale and the speed have predicted the scale and the speed in which like I as a developer I can in which like I as a developer I can in which like I as a developer I can increase our attack surface in uh two increase our attack surface in uh two increase our attack surface in uh two lines of code that just say import uh lines of code that just say import uh lines of code that just say import uh Python or not Python but import pedantic Python or not Python but import pedantic Python or not Python but import pedantic or import the open AI agents SDK and all or import the open AI agents SDK and all or import the open AI agents SDK and all of a sudden I've opened this whole scope of a sudden I've opened this whole scope of a sudden I've opened this whole scope of vulnerabilities um that before we of vulnerabilities um that before we of vulnerabilities um that before we were honestly just blind to because we were honestly just blind to because we were honestly just blind to because we were just sort of scanning systems and were just sort of scanning systems and were just sort of scanning systems and in light of that we are creating a ton in light of that we are creating a ton in light of that we are creating a ton of pain that I've experienced that I'm of pain that I've experienced that I'm of pain that I've experienced that I'm sure everyone in here has experienced. sure everyone in here has experienced. sure everyone in here has experienced. uh especially when you try to take a uh especially when you try to take a uh especially when you try to take a modern cloud environment and suddenly modern cloud environment and suddenly modern cloud environment and suddenly you are asked to account to fed ramp you are asked to account to fed ramp you are asked to account to fed ramp timelines where you have to meet these timelines where you have to meet these timelines where you have to meet these SLAs's uh for 30 60 180 uh on different SLAs's uh for 30 60 180 uh on different SLAs's uh for 30 60 180 uh on different on high mediums and lows and or 3090 180 on high mediums and lows and or 3090 180 on high mediums and lows and or 3090 180 and how you're actually trying to meet and how you're actually trying to meet and how you're actually trying to meet these remediation timelines in a way these remediation timelines in a way these remediation timelines in a way that uh honestly just doesn't scale with that uh honestly just doesn't scale with that uh honestly just doesn't scale with the amount of scanning that we're trying the amount of scanning that we're trying the amount of scanning that we're trying to do and it we we've really become lost to do and it we we've really become lost to do and it we we've really become lost in this in this in this of different scan types and of different scan types and of different scan types and vulnerabilities and figuring out how vulnerabilities and figuring out how vulnerabilities and figuring out how we're even going to remediate them in we're even going to remediate them in we're even going to remediate them in the first place. the first place. the first place. So raise of handle quick So raise of handle quick So raise of handle quick question how high or how many question how high or how many question how high or how many vulnerability do we have right now in vulnerability do we have right now in vulnerability do we have right now in the Nvidia who can guess a the Nvidia who can guess a the Nvidia who can guess a number number number sorry a little bit sorry a little bit sorry a little bit less little bit more 262,000 or when I check last check more 262,000 or when I check last check more 262,000 or when I check last check it was 262,000 Chris you remember it was 262,000 Chris you remember it was 262,000 Chris you remember last you did how many Wait. Yeah. And we seen an increase of 40x Yeah. And we seen an increase of 40x Yeah. And we seen an increase of 40x from 2015. So a dramatic increase in the from 2015. So a dramatic increase in the from 2015. So a dramatic increase in the number of vulnerability. We can keep number of vulnerability. We can keep number of vulnerability. We can keep pace of it. And if we keep on growing at pace of it. And if we keep on growing at pace of it. And if we keep on growing at this particular rate, we'll probably by this particular rate, we'll probably by this particular rate, we'll probably by 2031 we'll see a million worth of 2031 we'll see a million worth of 2031 we'll see a million worth of vulnerability if we keep on growing at vulnerability if we keep on growing at vulnerability if we keep on growing at this space. So this is not doom and this space. So this is not doom and this space. So this is not doom and gloom but it's just to say there is a gloom but it's just to say there is a gloom but it's just to say there is a lot of them. There is a lot of lot of them. There is a lot of lot of them. There is a lot of vulnerability and there are very few of vulnerability and there are very few of vulnerability and there are very few of us because we are growing at basically us because we are growing at basically us because we are growing at basically 6% year on year in term of vulnerability 6% year on year in term of vulnerability 6% year on year in term of vulnerability management budget invested well that's management budget invested well that's management budget invested well that's the your staffing line probably looks the your staffing line probably looks the your staffing line probably looks very different than the NVD very different than the NVD very different than the NVD vulnerability vulnerability vulnerability line totally and things are not going to line totally and things are not going to line totally and things are not going to get easier but they're going to get get easier but they're going to get get easier but they're going to get worse and I'm not painting doom and worse and I'm not painting doom and worse and I'm not painting doom and gloom but the reality of it is gloom but the reality of it is gloom but the reality of it is everybody's vibe coding out there uh or everybody's vibe coding out there uh or everybody's vibe coding out there uh or 50% of new code gener generated these 50% of new code gener generated these 50% of new code gener generated these vibes codes. vibes codes. vibes codes. Who's aware of the vibe coding industry? Who's aware of the vibe coding industry? Who's aware of the vibe coding industry? Hands Hands Hands up. So vibe coding is just LLM or code up. So vibe coding is just LLM or code up. So vibe coding is just LLM or code generated that was the old stack trace generated that was the old stack trace generated that was the old stack trace copy and paste. Now we just accelerated copy and paste. Now we just accelerated copy and paste. Now we just accelerated it with LLM and saying can you just it with LLM and saying can you just it with LLM and saying can you just generate this and there is a very generate this and there is a very generate this and there is a very welldefined difference from um I think welldefined difference from um I think welldefined difference from um I think my friend James Monaco have created a my friend James Monaco have created a my friend James Monaco have created a whole course on how you can buy code whole course on how you can buy code whole course on how you can buy code securely things and what are the prompt securely things and what are the prompt securely things and what are the prompt that you can ask an LLM but 90% of the that you can ask an LLM but 90% of the that you can ask an LLM but 90% of the people that are out there will people that are out there will people that are out there will not ask secure prompt or how to generate not ask secure prompt or how to generate not ask secure prompt or how to generate secure secure secure code and our coder are not the only one code and our coder are not the only one code and our coder are not the only one who's going to be in there but also who's going to be in there but also who's going to be in there but also attacker are fundamentally developing attacker are fundamentally developing attacker are fundamentally developing GPT style code scanner or finder of GPT style code scanner or finder of GPT style code scanner or finder of exploit and generation of exploit and exploit and generation of exploit and exploit and generation of exploit and that's why exploitation time went from that's why exploitation time went from that's why exploitation time went from from a critical perspective from 15 days from a critical perspective from 15 days from a critical perspective from 15 days to 3 minutes from declaration point to 3 minutes from declaration point to 3 minutes from declaration point that's a good example of jet brains that's a good example of jet brains that's a good example of jet brains being declared and cloudfare uh being declared and cloudfare uh being declared and cloudfare uh identifying the first exploit after 3 identifying the first exploit after 3 identifying the first exploit after 3 minutes of exploitation I I posted on minutes of exploitation I I posted on minutes of exploitation I I posted on Twitter after the ingress nightmare Twitter after the ingress nightmare Twitter after the ingress nightmare vulnerability came out and I just copied vulnerability came out and I just copied vulnerability came out and I just copied that blog blog post into uh chatbt and that blog blog post into uh chatbt and that blog blog post into uh chatbt and said create an exploit and then it very said create an exploit and then it very said create an exploit and then it very happily created a payload for me and happily created a payload for me and happily created a payload for me and asked if I would like it to have rce or asked if I would like it to have rce or asked if I would like it to have rce or have a C2 server to call home to and so have a C2 server to call home to and so have a C2 server to call home to and so it really is like as soon as a it really is like as soon as a it really is like as soon as a vulnerability gets declared you're able vulnerability gets declared you're able vulnerability gets declared you're able to just create an exploit automatically to just create an exploit automatically to just create an exploit automatically even for someone like me that doesn't even for someone like me that doesn't even for someone like me that doesn't even know C but all of a sudden I have even know C but all of a sudden I have even know C but all of a sudden I have the ability to create C exploits with the ability to create C exploits with the ability to create C exploits with shared libraries and really just a new shared libraries and really just a new shared libraries and really just a new level of attack sophistication. Yeah. level of attack sophistication. Yeah. level of attack sophistication. Yeah. And look, we're not coder experts. So And look, we're not coder experts. So And look, we're not coder experts. So somebody with a little bit more somebody with a little bit more somebody with a little bit more knowledge can generate something more knowledge can generate something more knowledge can generate something more refined. But the ultimate thing refined. But the ultimate thing refined. But the ultimate thing is this tool have given attacker scale, is this tool have given attacker scale, is this tool have given attacker scale, speed and evolution and if we don't speed and evolution and if we don't speed and evolution and if we don't adapt they're going to adapt they're going to adapt they're going to win. But one of the challenge that we win. But one of the challenge that we win. But one of the challenge that we have in this industry is we seeing have in this industry is we seeing have in this industry is we seeing application security and environment application security and environment application security and environment security or cloud security and security or cloud security and security or cloud security and infrastructure security as two separate infrastructure security as two separate infrastructure security as two separate things and in a way they are separated. things and in a way they are separated. things and in a way they are separated. So we're going to go through the So we're going to go through the So we're going to go through the presentation saying they're the same. presentation saying they're the same. presentation saying they're the same. They're linked to each other, but They're linked to each other, but They're linked to each other, but they're also different things. And I they're also different things. And I they're also different things. And I don't have a real answer for that, but don't have a real answer for that, but don't have a real answer for that, but they are cor they definitely correlate they are cor they definitely correlate they are cor they definitely correlate to each other. And as a vulnerability to each other. And as a vulnerability to each other. And as a vulnerability management program, we need to realize management program, we need to realize management program, we need to realize that we need to cover both of them. And that we need to cover both of them. And that we need to cover both of them. And a vulnerability management program that a vulnerability management program that a vulnerability management program that cover one area doesn't cover the others cover one area doesn't cover the others cover one area doesn't cover the others is a failure. Well, I think there's a is a failure. Well, I think there's a is a failure. Well, I think there's a huge question of how do we scale this huge question of how do we scale this huge question of how do we scale this where I was blown away by uh meeting where I was blown away by uh meeting where I was blown away by uh meeting with former Netflix teams who whenever a with former Netflix teams who whenever a with former Netflix teams who whenever a new vulnerability shows up, they'll new vulnerability shows up, they'll new vulnerability shows up, they'll threat hunt in their environment for threat hunt in their environment for threat hunt in their environment for indicators that that vulnerability's indicators that that vulnerability's indicators that that vulnerability's been exploited. And that's just a level been exploited. And that's just a level been exploited. And that's just a level of maturity that I've never been a part of maturity that I've never been a part of maturity that I've never been a part of where it's like I'm lucky when a of where it's like I'm lucky when a of where it's like I'm lucky when a vulnerability shows up that I can even vulnerability shows up that I can even vulnerability shows up that I can even get it ticketed and get the remediation get it ticketed and get the remediation get it ticketed and get the remediation process going in the first place. But process going in the first place. But process going in the first place. But really, it's what we should be doing is really, it's what we should be doing is really, it's what we should be doing is is checking for have we been exploited is checking for have we been exploited is checking for have we been exploited for this? And it requires coordination for this? And it requires coordination for this? And it requires coordination across the security operations team, across the security operations team, across the security operations team, DevOps, dev, and a level of uh cross DevOps, dev, and a level of uh cross DevOps, dev, and a level of uh cross team coordination that most team coordination that most team coordination that most organizations just really struggle with organizations just really struggle with organizations just really struggle with because the skill set is so crazily because the skill set is so crazily because the skill set is so crazily diverse between a developer and a diverse between a developer and a diverse between a developer and a security operations security operations security operations analyst. And the way we traditionally analyst. And the way we traditionally analyst. And the way we traditionally handle things is we just run scanner. handle things is we just run scanner. handle things is we just run scanner. And the scanners are tend to be at least And the scanners are tend to be at least And the scanners are tend to be at least blind to the context where things runs. blind to the context where things runs. blind to the context where things runs. But the nature of application security, But the nature of application security, But the nature of application security, Kubernetes, code, uh, web dust and so on Kubernetes, code, uh, web dust and so on Kubernetes, code, uh, web dust and so on is so complicated that sometime as is so complicated that sometime as is so complicated that sometime as security professional, we just give up security professional, we just give up security professional, we just give up and say fix all of this stuff by SLA. and say fix all of this stuff by SLA. and say fix all of this stuff by SLA. And by the way, can you try to figure And by the way, can you try to figure And by the way, can you try to figure out what stuff do you out what stuff do you out what stuff do you own? What is the result of that? Show of own? What is the result of that? Show of own? What is the result of that? Show of hand if any developer has ever listened hand if any developer has ever listened hand if any developer has ever listened to you after you say fix all of this to you after you say fix all of this to you after you say fix all of this stuff by SLA X, Y, and Zed. who's been stuff by SLA X, Y, and Zed. who's been stuff by SLA X, Y, and Zed. who's been lucky enough to been listened to after lucky enough to been listened to after lucky enough to been listened to after that sentence? that sentence? that sentence? No one. Maybe the first time, but then No one. Maybe the first time, but then No one. Maybe the first time, but then they learned pretty quickly not to do they learned pretty quickly not to do they learned pretty quickly not to do it. And the the way we tend to approach it. And the the way we tend to approach it. And the the way we tend to approach this is just dump all of this this is just dump all of this this is just dump all of this into Excel spreadsheet, PowerBI into Excel spreadsheet, PowerBI into Excel spreadsheet, PowerBI generated dashboard. Here's all of the generated dashboard. Here's all of the generated dashboard. Here's all of the problem that we have in problem that we have in problem that we have in this code scanner result. And then this code scanner result. And then this code scanner result. And then developer go and find your own problem. developer go and find your own problem. developer go and find your own problem. And the challenge with this And the challenge with this And the challenge with this is attacker needs to be right one time is attacker needs to be right one time is attacker needs to be right one time while developer and defender needs to be while developer and defender needs to be while developer and defender needs to be right all of the right all of the right all of the time. And what they happen is you get time. And what they happen is you get time. And what they happen is you get the bonus of shock executive saying we the bonus of shock executive saying we the bonus of shock executive saying we have spent tons of money on developer have spent tons of money on developer have spent tons of money on developer tools and shift left and scanner. We tools and shift left and scanner. We tools and shift left and scanner. We scan all of our environment. Why can't scan all of our environment. Why can't scan all of our environment. Why can't this be resolved? this be resolved? this be resolved? Well, because of two reason, asset Well, because of two reason, asset Well, because of two reason, asset ownership and attribution and fixes and ownership and attribution and fixes and ownership and attribution and fixes and collaboration. Four reason collaboration. Four reason collaboration. Four reason actually. So, I'm not going to bother actually. So, I'm not going to bother actually. So, I'm not going to bother you with this, you with this, you with this, but shock executive, we introduce SLA but shock executive, we introduce SLA but shock executive, we introduce SLA while we're not fixing while we're not fixing while we're not fixing stuff. And the other rational is the stuff. And the other rational is the stuff. And the other rational is the other reason other reason other reason is we get a superstar vulnerability a is we get a superstar vulnerability a is we get a superstar vulnerability a month where we used to have a superstar month where we used to have a superstar month where we used to have a superstar vulnerability on a yearly basis. vulnerability on a yearly basis. vulnerability on a yearly basis. This is just the last probably three This is just the last probably three This is just the last probably three four months of major vulnerability being four months of major vulnerability being four months of major vulnerability being declared and I think in the last month declared and I think in the last month declared and I think in the last month we had TJ action and ingress nightmare we had TJ action and ingress nightmare we had TJ action and ingress nightmare just in a month and your and uh the just in a month and your and uh the just in a month and your and uh the nextjs off bypass. It was like I was nextjs off bypass. It was like I was nextjs off bypass. It was like I was writing all this stuff on TJ actions and writing all this stuff on TJ actions and writing all this stuff on TJ actions and then the next JS off came out and then then the next JS off came out and then then the next JS off came out and then it was two days later ingress nightmare it was two days later ingress nightmare it was two days later ingress nightmare happened and I'm like I didn't even have happened and I'm like I didn't even have happened and I'm like I didn't even have time to figure out what the next JS off time to figure out what the next JS off time to figure out what the next JS off was and now we've got the next thing. was and now we've got the next thing. was and now we've got the next thing. And the nature of these pieces, they're And the nature of these pieces, they're And the nature of these pieces, they're going to keep on popping up. NPM was the going to keep on popping up. NPM was the going to keep on popping up. NPM was the latest one that North Korea trade actor latest one that North Korea trade actor latest one that North Korea trade actor are now targeting. So being able to say, are now targeting. So being able to say, are now targeting. So being able to say, I have this problem on this package, who I have this problem on this package, who I have this problem on this package, who owns these particular things and can we owns these particular things and can we owns these particular things and can we focus on a campaign on seeing are these focus on a campaign on seeing are these focus on a campaign on seeing are these things exploitable and who needs to fix things exploitable and who needs to fix things exploitable and who needs to fix it is not anymore an it is not anymore an it is not anymore an option. We need to get to that point. option. We need to get to that point. option. We need to get to that point. And to get to that point, we need a And to get to that point, we need a And to get to that point, we need a concept of application, a concept of concept of application, a concept of concept of application, a concept of environment and a concept of attributing environment and a concept of attributing environment and a concept of attributing all of these things to the right folks. all of these things to the right folks. all of these things to the right folks. So the question we shouldn't we should So the question we shouldn't we should So the question we shouldn't we should be asking is not anymore how many be asking is not anymore how many be asking is not anymore how many problem we have and how low should we go problem we have and how low should we go problem we have and how low should we go but really who owns what and how but really who owns what and how but really who owns what and how important it is and should we fix it but important it is and should we fix it but important it is and should we fix it but most importantly is it reachable or most importantly is it reachable or most importantly is it reachable or because I'm I was dyslexic and we were because I'm I was dyslexic and we were because I'm I was dyslexic and we were looking at this um we call it is it looking at this um we call it is it looking at this um we call it is it racist. You want to take it away? Oh yeah, the You want to take it away? Oh yeah, the You want to take it away? Oh yeah, the uh from being I I think of myself uh from being I I think of myself uh from being I I think of myself fundamentally as a DevOps person at fundamentally as a DevOps person at fundamentally as a DevOps person at heart and so slamming my head into the heart and so slamming my head into the heart and so slamming my head into the vulnerability problem um at every vulnerability problem um at every vulnerability problem um at every organization I've been at has been such organization I've been at has been such organization I've been at has been such a learning experience as far as uh the a learning experience as far as uh the a learning experience as far as uh the difficulty of trying to treat cloud difficulty of trying to treat cloud difficulty of trying to treat cloud vulnerabilities the same way that we vulnerabilities the same way that we vulnerabilities the same way that we used to treat on premise ones. And it's used to treat on premise ones. And it's used to treat on premise ones. And it's because the the picture we're trying to because the the picture we're trying to because the the picture we're trying to create is so much more complicated than create is so much more complicated than create is so much more complicated than it used to be. Um, even to just think of it used to be. Um, even to just think of it used to be. Um, even to just think of a basic asset management system where it a basic asset management system where it a basic asset management system where it would work if you were slow, like every would work if you were slow, like every would work if you were slow, like every time you add a new server to your data time you add a new server to your data time you add a new server to your data center rack and you're spinning up new center rack and you're spinning up new center rack and you're spinning up new uh VMs on it, like you can do that with uh VMs on it, like you can do that with uh VMs on it, like you can do that with a spreadsheet, like it's still not the a spreadsheet, like it's still not the a spreadsheet, like it's still not the greatest, but it's possible. But when greatest, but it's possible. But when greatest, but it's possible. But when we're talking about Kubernetes doing we're talking about Kubernetes doing we're talking about Kubernetes doing automatic orchestration of what automatic orchestration of what automatic orchestration of what containers to deploy, how many instances containers to deploy, how many instances containers to deploy, how many instances of it, different uh uh base oss, of it, different uh uh base oss, of it, different uh uh base oss, different application oss, all getting different application oss, all getting different application oss, all getting packaged into the same libraries, the packaged into the same libraries, the packaged into the same libraries, the difficulty of trying to build this difficulty of trying to build this difficulty of trying to build this picture has just been absolutely picture has just been absolutely picture has just been absolutely crushing for people to try to to move to crushing for people to try to to move to crushing for people to try to to move to the cloud and track things in the same the cloud and track things in the same the cloud and track things in the same way that they used to. And a lot of it way that they used to. And a lot of it way that they used to. And a lot of it is because uh vulnerability management is because uh vulnerability management is because uh vulnerability management has really evolved from a CVE ccentric has really evolved from a CVE ccentric has really evolved from a CVE ccentric um this the simplicity of like a patch um this the simplicity of like a patch um this the simplicity of like a patch Tuesday deployment which we're all Tuesday deployment which we're all Tuesday deployment which we're all familiar with like that that was most familiar with like that that was most familiar with like that that was most organizations still have a very well- organizations still have a very well- organizations still have a very well- definfined patch thing for window a definfined patch thing for window a definfined patch thing for window a patching process for Windows servers patching process for Windows servers patching process for Windows servers where uh you have a control group that where uh you have a control group that where uh you have a control group that you roll out maybe a week after the fact you roll out maybe a week after the fact you roll out maybe a week after the fact and then uh slowly roll that out to the and then uh slowly roll that out to the and then uh slowly roll that out to the rest of the fleet. But the challenge now rest of the fleet. But the challenge now rest of the fleet. But the challenge now is what does that even look like in a is what does that even look like in a is what does that even look like in a cloud environment where I can't even uh cloud environment where I can't even uh cloud environment where I can't even uh determine if an open source maintainer determine if an open source maintainer determine if an open source maintainer has made a patch like do I have my has made a patch like do I have my has made a patch like do I have my developers make a patch for the developers make a patch for the developers make a patch for the maintainer and then you roll that all maintainer and then you roll that all maintainer and then you roll that all the way down through the container the way down through the container the way down through the container process to deployment um we are really process to deployment um we are really process to deployment um we are really involving all these different teams with involving all these different teams with involving all these different teams with different specialties and what we're different specialties and what we're different specialties and what we're asking v management people to do is the asking v management people to do is the asking v management people to do is the hardest thing of all which is to be an hardest thing of all which is to be an hardest thing of all which is to be an expert in all of these things right like expert in all of these things right like expert in all of these things right like how are you supposed to have the how are you supposed to have the how are you supposed to have the technical ability to both respond do uh technical ability to both respond do uh technical ability to both respond do uh cross-sight scripting and SQL injection cross-sight scripting and SQL injection cross-sight scripting and SQL injection as well as a Windows vulnerability as as well as a Windows vulnerability as as well as a Windows vulnerability as well as uh buffer overflow with a uh well as uh buffer overflow with a uh well as uh buffer overflow with a uh Linux package across different dros Linux package across different dros Linux package across different dros across different infrastructure. It's an across different infrastructure. It's an across different infrastructure. It's an impossible task to uh try to impossible task to uh try to impossible task to uh try to contextualize it in one person's head contextualize it in one person's head contextualize it in one person's head all of this fix and remediation all of this fix and remediation all of this fix and remediation information. And so in the face of all information. And so in the face of all information. And so in the face of all of this, a lot of us have had to face of this, a lot of us have had to face of this, a lot of us have had to face this decision of building versus buying. this decision of building versus buying. this decision of building versus buying. And we get stuck in what I would say is And we get stuck in what I would say is And we get stuck in what I would say is this endless building phase. Um where at this endless building phase. Um where at this endless building phase. Um where at different organizations I've been a part different organizations I've been a part different organizations I've been a part of, you end up having four or five more of, you end up having four or five more of, you end up having four or five more than that. Uh security engineers who you than that. Uh security engineers who you than that. Uh security engineers who you are asking to make Python scripts, are asking to make Python scripts, are asking to make Python scripts, manipulating CSVs, Excel spreadsheets, manipulating CSVs, Excel spreadsheets, manipulating CSVs, Excel spreadsheets, messing with pandas, trying Yeah. trying messing with pandas, trying Yeah. trying messing with pandas, trying Yeah. trying to code their way out of this problem. to code their way out of this problem. to code their way out of this problem. Um because it's always it sort of is Um because it's always it sort of is Um because it's always it sort of is just the organic thing where we're just just the organic thing where we're just just the organic thing where we're just solving problems as we go along and we solving problems as we go along and we solving problems as we go along and we end up stuck where we're asking security end up stuck where we're asking security end up stuck where we're asking security engineers to do something that we're not engineers to do something that we're not engineers to do something that we're not good at doing, right? Like a lot of the good at doing, right? Like a lot of the good at doing, right? Like a lot of the work that I was doing some basic like BA work that I was doing some basic like BA work that I was doing some basic like BA type dashboarding, it would probably be type dashboarding, it would probably be type dashboarding, it would probably be better to ask like a secondyear BA better to ask like a secondyear BA better to ask like a secondyear BA person to do because they actually know person to do because they actually know person to do because they actually know what they're doing. They've been trained what they're doing. They've been trained what they're doing. They've been trained on it. They know how to do it. But we've on it. They know how to do it. But we've on it. They know how to do it. But we've got security people who are good at got security people who are good at got security people who are good at vulnerability analysis and incident vulnerability analysis and incident vulnerability analysis and incident response and finding uh and the response and finding uh and the response and finding uh and the prioritization piece, but we're having prioritization piece, but we're having prioritization piece, but we're having them do development work on the one side them do development work on the one side them do development work on the one side and build entire uh in-house products and build entire uh in-house products and build entire uh in-house products and then on the other side do business and then on the other side do business and then on the other side do business anal uh analyst work to try to dashboard anal uh analyst work to try to dashboard anal uh analyst work to try to dashboard and communicate this to different and communicate this to different and communicate this to different stakeholders. And so we're really stakeholders. And so we're really stakeholders. And so we're really putting a ton of pressure um when we try putting a ton of pressure um when we try putting a ton of pressure um when we try to build these things ourselves uh to do to build these things ourselves uh to do to build these things ourselves uh to do this. And then on the other side, uh I this. And then on the other side, uh I this. And then on the other side, uh I could ask you to raise your hand if could ask you to raise your hand if could ask you to raise your hand if you've ever been disappointed when you've ever been disappointed when you've ever been disappointed when you've bought a platform, but I'm sure you've bought a platform, but I'm sure you've bought a platform, but I'm sure everyone would uh participate in that everyone would uh participate in that everyone would uh participate in that where we we try to buy these solutions where we we try to buy these solutions where we we try to buy these solutions that also don't quite fit our that also don't quite fit our that also don't quite fit our environment because what I've learned environment because what I've learned environment because what I've learned from doing this for so long is that from doing this for so long is that from doing this for so long is that everyone's environment is a mess in a everyone's environment is a mess in a everyone's environment is a mess in a different way. Um I the most recent different way. Um I the most recent different way. Um I the most recent example was a company uh that has uh a example was a company uh that has uh a example was a company uh that has uh a lot of Java expertise and so their lot of Java expertise and so their lot of Java expertise and so their DevOps team is compiling their DevOps team is compiling their DevOps team is compiling their JavaScript applications with a Java app JavaScript applications with a Java app JavaScript applications with a Java app on top of it. And if you're a vendor on top of it. And if you're a vendor on top of it. And if you're a vendor like how are you accounting for that in like how are you accounting for that in like how are you accounting for that in uh the process you're building? And so uh the process you're building? And so uh the process you're building? And so it really is this difficulty of the it really is this difficulty of the it really is this difficulty of the platforms not being customizable enough platforms not being customizable enough platforms not being customizable enough for what people need. And then on the for what people need. And then on the for what people need. And then on the other side we get stuck asking people to other side we get stuck asking people to other side we get stuck asking people to do things that we're not really trained do things that we're not really trained do things that we're not really trained at. like I'm not my background is not at. like I'm not my background is not at. like I'm not my background is not computer science, my background is not computer science, my background is not computer science, my background is not business analytics, it's security and business analytics, it's security and business analytics, it's security and infrastructure. Um and so what we have infrastructure. Um and so what we have infrastructure. Um and so what we have to present today is the quick fix for to present today is the quick fix for to present today is the quick fix for that. And the answer is there's not a that. And the answer is there's not a that. And the answer is there's not a quick fix and there's really not a quick fix and there's really not a quick fix and there's really not a single answer because this vulnerability single answer because this vulnerability single answer because this vulnerability thing that we are trying to do is thing that we are trying to do is thing that we are trying to do is extremely complicated. And so we need to extremely complicated. And so we need to extremely complicated. And so we need to take a step back and think about what is take a step back and think about what is take a step back and think about what is a vulnerability management program. And a vulnerability management program. And a vulnerability management program. And the answer is that it is very different the answer is that it is very different the answer is that it is very different depending on your organization and your depending on your organization and your depending on your organization and your goals. Something that I find extremely goals. Something that I find extremely goals. Something that I find extremely useful is to be realistic about the useful is to be realistic about the useful is to be realistic about the vulnerability management program that vulnerability management program that vulnerability management program that you're trying to achieve for compliance. you're trying to achieve for compliance. you're trying to achieve for compliance. And that's where we play a lot of games And that's where we play a lot of games And that's where we play a lot of games with like asset scoping and um patch with like asset scoping and um patch with like asset scoping and um patch management systems and like oh well management systems and like oh well management systems and like oh well that's in scope that's not like we we that's in scope that's not like we we that's in scope that's not like we we use this kind of scanning but not this use this kind of scanning but not this use this kind of scanning but not this kind. But that just solves part of the kind. But that just solves part of the kind. But that just solves part of the compliance problem, but it doesn't get compliance problem, but it doesn't get compliance problem, but it doesn't get at what we're actually trying to do, at what we're actually trying to do, at what we're actually trying to do, which is create an overarching way to which is create an overarching way to which is create an overarching way to reduce risk for the business by actually reduce risk for the business by actually reduce risk for the business by actually making progress towards remediation. And making progress towards remediation. And making progress towards remediation. And I think that's been the biggest gap of I think that's been the biggest gap of I think that's been the biggest gap of this whole uh issue is that we haven't this whole uh issue is that we haven't this whole uh issue is that we haven't been focused enough on how do we been focused enough on how do we been focused enough on how do we actually fix vulnerabilities. We've been actually fix vulnerabilities. We've been actually fix vulnerabilities. We've been talking instead a lot about how do we talking instead a lot about how do we talking instead a lot about how do we discover vulnerabilities? How do we discover vulnerabilities? How do we discover vulnerabilities? How do we prioritize them? But it creates an issue prioritize them? But it creates an issue prioritize them? But it creates an issue where we're not surfacing issues to where we're not surfacing issues to where we're not surfacing issues to developers in a way where they can developers in a way where they can developers in a way where they can actually fix actually fix actually fix things. things. things. So, and this is one of my favorite one So, and this is one of my favorite one So, and this is one of my favorite one from press uh from press uh from press uh the things that we should focus on is the things that we should focus on is the things that we should focus on is just a fraction of vulnerability. So just a fraction of vulnerability. So just a fraction of vulnerability. So instead of looking at the whole problem instead of looking at the whole problem instead of looking at the whole problem scope, we should focus on a fraction of scope, we should focus on a fraction of scope, we should focus on a fraction of issue and we're here not to just paint issue and we're here not to just paint issue and we're here not to just paint doom and gloom on this industry but also doom and gloom on this industry but also doom and gloom on this industry but also to give step forward but step forward to give step forward but step forward to give step forward but step forward not with magic security dust and I have not with magic security dust and I have not with magic security dust and I have some magic security dust that you can some magic security dust that you can some magic security dust that you can sprinkle on your favorite vulnerability sprinkle on your favorite vulnerability sprinkle on your favorite vulnerability management tool to make the management tool to make the management tool to make the vulnerability disappear. But no, jokes vulnerability disappear. But no, jokes vulnerability disappear. But no, jokes on the on the on the side. Attributing what's side. Attributing what's side. Attributing what's really a vulnerability and who owns it really a vulnerability and who owns it really a vulnerability and who owns it is is is complicated. And I've been talking about complicated. And I've been talking about complicated. And I've been talking about application security and cloud security application security and cloud security application security and cloud security being the same and being the same and being the same and being one part of an of a vulnerability being one part of an of a vulnerability being one part of an of a vulnerability management program. And here I'm showing management program. And here I'm showing management program. And here I'm showing you the two things are separated. So we you the two things are separated. So we you the two things are separated. So we need to recognize that the life cycle of need to recognize that the life cycle of need to recognize that the life cycle of a software and the way we fix a software a software and the way we fix a software a software and the way we fix a software is very different from how we patch a is very different from how we patch a is very different from how we patch a system, how we deal with Kubernetes and system, how we deal with Kubernetes and system, how we deal with Kubernetes and maybe container are just the borderline maybe container are just the borderline maybe container are just the borderline that you see in there and the way you that you see in there and the way you that you see in there and the way you prioritize things is very prioritize things is very prioritize things is very different. So if we want to do a quick different. So if we want to do a quick different. So if we want to do a quick exercise and I'm going to go quickly exercise and I'm going to go quickly exercise and I'm going to go quickly through it on how to can you reduce the through it on how to can you reduce the through it on how to can you reduce the number of vulnerability by the data that number of vulnerability by the data that number of vulnerability by the data that you have available. You can take your you have available. You can take your you have available. You can take your 200 and plus total number of 200 and plus total number of 200 and plus total number of vulnerability. You can look at the one vulnerability. You can look at the one vulnerability. You can look at the one that are actually where you have exploit that are actually where you have exploit that are actually where you have exploit available and verified exploit with your available and verified exploit with your available and verified exploit with your favorite cave, CISA cave, any cave that favorite cave, CISA cave, any cave that favorite cave, CISA cave, any cave that you have available out there and then you have available out there and then you have available out there and then you can take your favorite EPSS methods you can take your favorite EPSS methods you can take your favorite EPSS methods and rep prioritize the one that are more and rep prioritize the one that are more and rep prioritize the one that are more popular. Just with that you get a popular. Just with that you get a popular. Just with that you get a fraction of the total number of fraction of the total number of fraction of the total number of vulnerability that you have available in vulnerability that you have available in vulnerability that you have available in your system to a your system to a your system to a very minute number and then you can layer on top of number and then you can layer on top of number and then you can layer on top of that the criticality the business that the criticality the business that the criticality the business element is these things even running and element is these things even running and element is these things even running and we can touch this in a second but I we can touch this in a second but I we can touch this in a second but I would like to also touch point on what would like to also touch point on what would like to also touch point on what is the concept of exploitability what is is the concept of exploitability what is is the concept of exploitability what is an exploit an exploit an exploit an exploitable exploit. Who can give me an exploitable exploit. Who can give me an exploitable exploit. Who can give me a definition of what's an exploit or a definition of what's an exploit or a definition of what's an exploit or what's exploitable? How do you consider exploitable? How do you consider exploitable? How do you consider something to be a priority? And when we something to be a priority? And when we something to be a priority? And when we talk to the developer and say this is talk to the developer and say this is talk to the developer and say this is exploitable, what that actually means? Okay. means? Okay. means? Okay. a PC or a piece of code that is using a a PC or a piece of code that is using a a PC or a piece of code that is using a vulnerability. I would say something that is exploitable. Is it use out there? This thing doesn't there? This thing doesn't there? This thing doesn't work. Was it a zero day? Then now it's work. Was it a zero day? Then now it's work. Was it a zero day? Then now it's become an exploit. Is it easily to be become an exploit. Is it easily to be become an exploit. Is it easily to be automatable? Attack vector, remote code automatable? Attack vector, remote code automatable? Attack vector, remote code execution, these kind of style of execution, these kind of style of execution, these kind of style of things. Do we have data out there? CTI, things. Do we have data out there? CTI, things. Do we have data out there? CTI, EPSS, evidence that is exploitable out EPSS, evidence that is exploitable out EPSS, evidence that is exploitable out there. Is it actively used by thread there. Is it actively used by thread there. Is it actively used by thread actors? And we have more refined actors? And we have more refined actors? And we have more refined evidence. Is this particular exploit evidence. Is this particular exploit evidence. Is this particular exploit being used being used being used by thread actor or at scale? This is by thread actor or at scale? This is by thread actor or at scale? This is what I define exploitable. And then my what I define exploitable. And then my what I define exploitable. And then my favorite one is it really reachable. favorite one is it really reachable. favorite one is it really reachable. Reachable from a network perspective, Reachable from a network perspective, Reachable from a network perspective, reachable from a code perspective, reachable from a code perspective, reachable from a code perspective, reachable from a container perspective. reachable from a container perspective. reachable from a container perspective. I think the reason this is so I think the reason this is so I think the reason this is so complicated too is we like to talk about complicated too is we like to talk about complicated too is we like to talk about CVE as though they're all the same CVE as though they're all the same CVE as though they're all the same because most CVEes follow a pattern of because most CVEes follow a pattern of because most CVEes follow a pattern of if an attacker injects this payload into if an attacker injects this payload into if an attacker injects this payload into this function, then an exploit can this function, then an exploit can this function, then an exploit can happen or they can do something to the happen or they can do something to the happen or they can do something to the system they're not supposed to. But a system they're not supposed to. But a system they're not supposed to. But a lot of CVEes are really more broad than lot of CVEes are really more broad than lot of CVEes are really more broad than that where they're saying um if you if that where they're saying um if you if that where they're saying um if you if you have this that's public facing if you have this that's public facing if you have this that's public facing if you use this software in this specific you use this software in this specific you use this software in this specific way um not the big log forj issue but an way um not the big log forj issue but an way um not the big log forj issue but an earlier log forj issue was if it's earlier log forj issue was if it's earlier log forj issue was if it's behind an Apache chainsaw server then behind an Apache chainsaw server then behind an Apache chainsaw server then it's in trouble and it's this it's in trouble and it's this it's in trouble and it's this contextualized uh exploit exploitability contextualized uh exploit exploitability contextualized uh exploit exploitability is so complicated because every CBE is is so complicated because every CBE is is so complicated because every CBE is actually so different as much as we want actually so different as much as we want actually so different as much as we want to try to standardize them in a way as to try to standardize them in a way as to try to standardize them in a way as much as we can. much as we can. much as we can. So the way to approach this is to one of So the way to approach this is to one of So the way to approach this is to one of my favorite one is the pyramid of my favorite one is the pyramid of my favorite one is the pyramid of priority. So if we take the priority. So if we take the priority. So if we take the vulnerability the raw vulnerability data vulnerability the raw vulnerability data vulnerability the raw vulnerability data they usually come from scanner we have they usually come from scanner we have they usually come from scanner we have tons of tons of tons of them and we tend to be reactive on hey them and we tend to be reactive on hey them and we tend to be reactive on hey you have this vulnerability fixed you have this vulnerability fixed you have this vulnerability fixed critical that's that's where you get critical that's that's where you get critical that's that's where you get alert fatigue. If you go up and up and alert fatigue. If you go up and up and alert fatigue. If you go up and up and up on evidence of up on evidence of up on evidence of exploitation on evidence of reachability exploitation on evidence of reachability exploitation on evidence of reachability from a network perspective, from a from a network perspective, from a from a network perspective, from a container perspective, from a library container perspective, from a library container perspective, from a library perspective and eventually when you perspective and eventually when you perspective and eventually when you don't have any of these information, the don't have any of these information, the don't have any of these information, the threat type that each vulnerability threat type that each vulnerability threat type that each vulnerability carries and are at those vulnerability a carries and are at those vulnerability a carries and are at those vulnerability a good DNA that tells us is this going to good DNA that tells us is this going to good DNA that tells us is this going to be exploitable or not. So we go from a be exploitable or not. So we go from a be exploitable or not. So we go from a lot of problems to a very few lot of problems to a very few lot of problems to a very few one. So do you want to serve us the one. So do you want to serve us the one. So do you want to serve us the silver bullet again? That's right. This silver bullet again? That's right. This silver bullet again? That's right. This time it's for real. Oh, not quite. So it time it's for real. Oh, not quite. So it time it's for real. Oh, not quite. So it is still complicated, but there are at is still complicated, but there are at is still complicated, but there are at least some answers that we have for some least some answers that we have for some least some answers that we have for some of this. And the the first thing is to of this. And the the first thing is to of this. And the the first thing is to recognize that a lot of our CVE data can recognize that a lot of our CVE data can recognize that a lot of our CVE data can be very uh chaotic and unclassified be very uh chaotic and unclassified be very uh chaotic and unclassified where there are actually a lot of pieces where there are actually a lot of pieces where there are actually a lot of pieces of this that we can stitch together in of this that we can stitch together in of this that we can stitch together in order to determine the exploitability of order to determine the exploitability of order to determine the exploitability of a particular vulnerability. And one of a particular vulnerability. And one of a particular vulnerability. And one of the most uh underexplored I think is the most uh underexplored I think is the most uh underexplored I think is just the C.WE we data in particular just the C.WE we data in particular just the C.WE we data in particular where there is a reason that when people where there is a reason that when people where there is a reason that when people do vulnerability research they will do vulnerability research they will do vulnerability research they will often keep researching until they find often keep researching until they find often keep researching until they find remote code execution which would be the remote code execution which would be the remote code execution which would be the the CWE that's attached to the CV and the CWE that's attached to the CV and the CWE that's attached to the CV and it's because they know that a remote it's because they know that a remote it's because they know that a remote code execution will get a lot more code execution will get a lot more code execution will get a lot more attention from people um and there's a attention from people um and there's a attention from people um and there's a reason behind that and it's that reason behind that and it's that reason behind that and it's that attackers are more likely to exploit uh attackers are more likely to exploit uh attackers are more likely to exploit uh remote code execution than they are uh remote code execution than they are uh remote code execution than they are uh different kinds of vulnerabilities and different kinds of vulnerabilities and different kinds of vulnerabilities and so when we classify data using more so when we classify data using more so when we classify data using more things that are available to us to try things that are available to us to try things that are available to us to try to connect them to the actual exploit to connect them to the actual exploit to connect them to the actual exploit that an attacker will do. It unlocks a that an attacker will do. It unlocks a that an attacker will do. It unlocks a lot of prioritization data. But more lot of prioritization data. But more lot of prioritization data. But more than just the prioritization side, I than just the prioritization side, I than just the prioritization side, I think more and more uh from working with think more and more uh from working with think more and more uh from working with different vendors in the space, from different vendors in the space, from different vendors in the space, from doing this, it's clear that asset doing this, it's clear that asset doing this, it's clear that asset ownership is still the foundation of a ownership is still the foundation of a ownership is still the foundation of a vulnerability management program. And vulnerability management program. And vulnerability management program. And the problem is that asset ownership the problem is that asset ownership the problem is that asset ownership hasn't quite caught up to cloud hasn't quite caught up to cloud hasn't quite caught up to cloud architecture. And uh really what we're architecture. And uh really what we're architecture. And uh really what we're trying to do when we talk about asset trying to do when we talk about asset trying to do when we talk about asset ownership is go from this totally ownership is go from this totally ownership is go from this totally chaotic mess of um really it is this is chaotic mess of um really it is this is chaotic mess of um really it is this is so challenging because I can think of so challenging because I can think of so challenging because I can think of different problems I've had with uh data different problems I've had with uh data different problems I've had with uh data management across assets based on the management across assets based on the management across assets based on the scanner I was using at a time. And so scanner I was using at a time. And so scanner I was using at a time. And so since I've worked in so many different since I've worked in so many different since I've worked in so many different companies, I've used every vulnerability companies, I've used every vulnerability companies, I've used every vulnerability scanner out there and they all just scanner out there and they all just scanner out there and they all just contextualize things in different contextualize things in different contextualize things in different frustrating ways where some of them will frustrating ways where some of them will frustrating ways where some of them will show containers as like container show containers as like container show containers as like container process paths which is like the worst process paths which is like the worst process paths which is like the worst nightmare. Um but then you've got like nightmare. Um but then you've got like nightmare. Um but then you've got like sometimes they'll have a container name. sometimes they'll have a container name. sometimes they'll have a container name. Um but every container is unique and Um but every container is unique and Um but every container is unique and sometimes they'll standardize to like a sometimes they'll standardize to like a sometimes they'll standardize to like a base image but it's not always the right base image but it's not always the right base image but it's not always the right base image because there's an internal base image because there's an internal base image because there's an internal deployment pipeline. Um or you have uh deployment pipeline. Um or you have uh deployment pipeline. Um or you have uh different ways to categorize li software different ways to categorize li software different ways to categorize li software libraries and different container libraries and different container libraries and different container scanners pick up different software scanners pick up different software scanners pick up different software libraries and other ones and there there libraries and other ones and there there libraries and other ones and there there is just a mess of complexity um based a is just a mess of complexity um based a is just a mess of complexity um based a lot on your scanner is going to lot on your scanner is going to lot on your scanner is going to interpret uh exactly the particular interpret uh exactly the particular interpret uh exactly the particular frustrations you've had trying to frustrations you've had trying to frustrations you've had trying to standardize this data across containers standardize this data across containers standardize this data across containers cloud assets cloud assets cloud assets um and the like. And so really what we um and the like. And so really what we um and the like. And so really what we need to do is figure out take a step need to do is figure out take a step need to do is figure out take a step back and say how do we identify the back and say how do we identify the back and say how do we identify the owner of these particular things. And owner of these particular things. And owner of these particular things. And finding the owner is way more finding the owner is way more finding the owner is way more complicated um than it should be because complicated um than it should be because complicated um than it should be because a lot of tools try to do this especially a lot of tools try to do this especially a lot of tools try to do this especially automatically by looking at like get automatically by looking at like get automatically by looking at like get commit history. But the problem is uh commit history. But the problem is uh commit history. But the problem is uh developers aren't typically around for developers aren't typically around for developers aren't typically around for 10 15 years at a company and usually 10 15 years at a company and usually 10 15 years at a company and usually that's where most of the vulnerabilities that's where most of the vulnerabilities that's where most of the vulnerabilities are and so the person who committed the are and so the person who committed the are and so the person who committed the vulnerability is just no longer there vulnerability is just no longer there vulnerability is just no longer there and it's like okay well that doesn't and it's like okay well that doesn't and it's like okay well that doesn't work and then we have these uh older work and then we have these uh older work and then we have these uh older pieces of infrastructure that don't have pieces of infrastructure that don't have pieces of infrastructure that don't have a clear asset owner or the lines between a clear asset owner or the lines between a clear asset owner or the lines between who owns an asset changes multiple times who owns an asset changes multiple times who owns an asset changes multiple times as a piece of code is moving to as a piece of code is moving to as a piece of code is moving to production. And so a particular app team production. And so a particular app team production. And so a particular app team might own the code for their app, but might own the code for their app, but might own the code for their app, but another team might be like the front-end another team might be like the front-end another team might be like the front-end team manages all of the libraries for team manages all of the libraries for team manages all of the libraries for that application, but then the DevOps that application, but then the DevOps that application, but then the DevOps team might own the pipeline or the team might own the pipeline or the team might own the pipeline or the infrastructure as code for certain infrastructure as code for certain infrastructure as code for certain pieces of the infrastructure, but not pieces of the infrastructure, but not pieces of the infrastructure, but not other pieces of the infrastructure. And other pieces of the infrastructure. And other pieces of the infrastructure. And then on top of that, like as teams then on top of that, like as teams then on top of that, like as teams change, different tagging mechanisms change, different tagging mechanisms change, different tagging mechanisms change. And really it just gets at um change. And really it just gets at um change. And really it just gets at um there is a huge data problem in trying there is a huge data problem in trying there is a huge data problem in trying to find the owner of a particular asset to find the owner of a particular asset to find the owner of a particular asset and what's really important is when we and what's really important is when we and what's really important is when we look at these vulnerabilities is to not look at these vulnerabilities is to not look at these vulnerabilities is to not focus on like a CVE by CVE basis but to focus on like a CVE by CVE basis but to focus on like a CVE by CVE basis but to try to look at the asset that it's on try to look at the asset that it's on try to look at the asset that it's on and figure out who is even the right and figure out who is even the right and figure out who is even the right person to try to fix this. And it's only person to try to fix this. And it's only person to try to fix this. And it's only when we've contextualized all of this when we've contextualized all of this when we've contextualized all of this together that we can move from this together that we can move from this together that we can move from this crazy vulnerability data that's just crazy vulnerability data that's just crazy vulnerability data that's just coming in and it feels like a giant mess coming in and it feels like a giant mess coming in and it feels like a giant mess because we're trying to figure out what because we're trying to figure out what because we're trying to figure out what person to fix each CVE because uh we person to fix each CVE because uh we person to fix each CVE because uh we don't have a clear view of who owns this don't have a clear view of who owns this don't have a clear view of who owns this asset which is really what we should be asset which is really what we should be asset which is really what we should be striving for as we move to the as we striving for as we move to the as we striving for as we move to the as we move to trying to fix this stuff in the move to trying to fix this stuff in the move to trying to fix this stuff in the cloud. So who owns it is it important cloud. So who owns it is it important cloud. So who owns it is it important and then when do we need to fix it by is and then when do we need to fix it by is and then when do we need to fix it by is the last piece that we need to the last piece that we need to the last piece that we need to communicate to developers. communicate to developers. communicate to developers. Absolutely. So if we try to move from Absolutely. So if we try to move from Absolutely. So if we try to move from doom and gloom to actual solution, the doom and gloom to actual solution, the doom and gloom to actual solution, the four question and the four horsemen of four question and the four horsemen of four question and the four horsemen of the apocalypse that we need to address the apocalypse that we need to address the apocalypse that we need to address is who owns asset in the software world is who owns asset in the software world is who owns asset in the software world and who owns assets in the application and who owns assets in the application and who owns assets in the application world. What what are those assets world. What what are those assets world. What what are those assets transforming into? If you take a transforming into? If you take a transforming into? If you take a container file, it morph from a piece of container file, it morph from a piece of container file, it morph from a piece of code into something you deploy in a code into something you deploy in a code into something you deploy in a registry to a running nodes that run registry to a running nodes that run registry to a running nodes that run somewhere. So that is a concept that we somewhere. So that is a concept that we somewhere. So that is a concept that we call lineage and different team owns call lineage and different team owns call lineage and different team owns different part of that. So the different part of that. So the different part of that. So the development team owns the code piece of development team owns the code piece of development team owns the code piece of it but the operational teams normally it but the operational teams normally it but the operational teams normally owns the running of it. So we need to owns the running of it. So we need to owns the running of it. So we need to recognize that container are really the recognize that container are really the recognize that container are really the hinge point between environment and hinge point between environment and hinge point between environment and application and most importantly app application and most importantly app application and most importantly app traceability. So which app get built in traceability. So which app get built in traceability. So which app get built in which container that can run where which container that can run where which container that can run where because that's where things get very because that's where things get very because that's where things get very complicated. So if you want to summarize complicated. So if you want to summarize complicated. So if you want to summarize attribution, attribution, attribution, leanage, traceability and code tocloud leanage, traceability and code tocloud leanage, traceability and code tocloud richability are the four horsemen that richability are the four horsemen that richability are the four horsemen that we need to address. And addressing a we need to address. And addressing a we need to address. And addressing a container and apologies if the image is container and apologies if the image is container and apologies if the image is not shown very much. But you have on the not shown very much. But you have on the not shown very much. But you have on the right a running right a running right a running container that you can trace it back to container that you can trace it back to container that you can trace it back to the number of images that are in your the number of images that are in your the number of images that are in your registry and the number of version for registry and the number of version for registry and the number of version for each image that is actually stored and each image that is actually stored and each image that is actually stored and not all of them are actually running. So not all of them are actually running. So not all of them are actually running. So the first scheme through this could be the first scheme through this could be the first scheme through this could be just look at your container that are just look at your container that are just look at your container that are running which image is actually running running which image is actually running running which image is actually running and then screen down all of the and then screen down all of the and then screen down all of the vulnerability that traditionally your vulnerability that traditionally your vulnerability that traditionally your CSPM or your favorite container scanner CSPM or your favorite container scanner CSPM or your favorite container scanner will very likely give you happily saying will very likely give you happily saying will very likely give you happily saying hey look at how many problem we find hey look at how many problem we find hey look at how many problem we find because I think James you mentioned it because I think James you mentioned it because I think James you mentioned it on your talk uh on your talk uh on your talk uh yesterday we measure the quality of yesterday we measure the quality of yesterday we measure the quality of security scanner but how many problem security scanner but how many problem security scanner but how many problem they can find, not how many solution it they can find, not how many solution it they can find, not how many solution it can give us and not how precise those can give us and not how precise those can give us and not how precise those things are. So and unfortunately we are things are. So and unfortunately we are things are. So and unfortunately we are the problem as industry not vendors but the problem as industry not vendors but the problem as industry not vendors but as consumer that we try to measure as consumer that we try to measure as consumer that we try to measure scanners by the number of noise and the scanners by the number of noise and the scanners by the number of noise and the number of things they find not the number of things they find not the number of things they find not the number of things they give us to number of things they give us to number of things they give us to remediate. Well, that's this creates remediate. Well, that's this creates remediate. Well, that's this creates such a mess because uh often in such a mess because uh often in such a mess because uh often in organizations like you have different organizations like you have different organizations like you have different team. So you have an application team. So you have an application team. So you have an application security team that owns all of the security team that owns all of the security team that owns all of the scanning on the left and they might even scanning on the left and they might even scanning on the left and they might even themselves use several different vendors themselves use several different vendors themselves use several different vendors to do that scanning and they often also to do that scanning and they often also to do that scanning and they often also have container scanning as a capability have container scanning as a capability have container scanning as a capability which is why containers really are the which is why containers really are the which is why containers really are the lynch pin that tie this whole thing lynch pin that tie this whole thing lynch pin that tie this whole thing together where the infrastructure team together where the infrastructure team together where the infrastructure team might have one multiple CNAP tools that might have one multiple CNAP tools that might have one multiple CNAP tools that are scanning the container registry. are scanning the container registry. are scanning the container registry. Then you have the appsec team also Then you have the appsec team also Then you have the appsec team also having tools that scan the container having tools that scan the container having tools that scan the container registry. So you have a ton of registry. So you have a ton of registry. So you have a ton of duplicates just from that scanning duplicates just from that scanning duplicates just from that scanning alone. But then you layer in all of the alone. But then you layer in all of the alone. But then you layer in all of the code scanning that's happening and SCA code scanning that's happening and SCA code scanning that's happening and SCA scanning against the deployed image and scanning against the deployed image and scanning against the deployed image and the level of dduplication and data the level of dduplication and data the level of dduplication and data standardization creates just a massive standardization creates just a massive standardization creates just a massive problem across these teams that problem across these teams that problem across these teams that sometimes don't even communicate. Yeah. sometimes don't even communicate. Yeah. sometimes don't even communicate. Yeah. So ultimately even if you look at just So ultimately even if you look at just So ultimately even if you look at just container sometime to fix a problem. So container sometime to fix a problem. So container sometime to fix a problem. So sometime when you scan a container and sometime when you scan a container and sometime when you scan a container and you get a number of vulnerabilities you get a number of vulnerabilities you get a number of vulnerabilities sometime you need to decide is this sometime you need to decide is this sometime you need to decide is this problem coming from the application or problem coming from the application or problem coming from the application or the base image or the source the base image or the source the base image or the source image and if we take an approach a image and if we take an approach a image and if we take an approach a simple approach on up there there is simple approach on up there there is simple approach on up there there is sanki yamo that has a vulnerability that sanki yamo that has a vulnerability that sanki yamo that has a vulnerability that particular library get built in an particular library get built in an particular library get built in an application that then get built in a application that then get built in a application that then get built in a container and that is your pre-live container and that is your pre-live container and that is your pre-live before you deploy an application so just before you deploy an application so just before you deploy an application so just in that space you probably have scanned in that space you probably have scanned in that space you probably have scanned the application with three different the application with three different the application with three different scanner a container scanner a container scanner a container llinter an SCA tool a SAS tool and you llinter an SCA tool a SAS tool and you llinter an SCA tool a SAS tool and you might have probably have received might have probably have received might have probably have received already twice the number of already twice the number of already twice the number of vulnerabilities now you deploy the vulnerabilities now you deploy the vulnerabilities now you deploy the application in your live environment and application in your live environment and application in your live environment and that's a number of version that gets that's a number of version that gets that's a number of version that gets scanned so you already are three four scanned so you already are three four scanned so you already are three four five time the same vulnerability five time the same vulnerability five time the same vulnerability reported by different tools a number of reported by different tools a number of reported by different tools a number of times and then you have your favorite times and then you have your favorite times and then you have your favorite CSPM M that report your running images. CSPM M that report your running images. CSPM M that report your running images. So just in that particular journey you So just in that particular journey you So just in that particular journey you have multiple vulnerability that are the have multiple vulnerability that are the have multiple vulnerability that are the same vulnerability in just different same vulnerability in just different same vulnerability in just different state being reported. And that's one state being reported. And that's one state being reported. And that's one concept we call contextual dduplication. concept we call contextual dduplication. concept we call contextual dduplication. That's something we've been really That's something we've been really That's something we've been really focusing on as Fenix to actually remove focusing on as Fenix to actually remove focusing on as Fenix to actually remove the libraries in a container that are the libraries in a container that are the libraries in a container that are not fixable in that container, but not fixable in that container, but not fixable in that container, but really tracing it back to which repo and really tracing it back to which repo and really tracing it back to which repo and which library you actually need to which library you actually need to which library you actually need to recommend to your engineering team to recommend to your engineering team to recommend to your engineering team to fix because ultimately you don't want to fix because ultimately you don't want to fix because ultimately you don't want to report vulnerability. You want to report vulnerability. You want to report vulnerability. You want to recommend remediation to the right folks recommend remediation to the right folks recommend remediation to the right folks because that's the only thing is going because that's the only thing is going because that's the only thing is going to get an action out there. to get an action out there. to get an action out there. So what we discussed in the previous So what we discussed in the previous So what we discussed in the previous slide is what I call reachability slide is what I call reachability slide is what I call reachability analysis or the fourability analysis analysis or the fourability analysis analysis or the fourability analysis methods and I'll invite you to any methods and I'll invite you to any methods and I'll invite you to any vendor that you go through and I mention vendor that you go through and I mention vendor that you go through and I mention we do reachability analysis ask them we do reachability analysis ask them we do reachability analysis ask them which of the four reachability analysis which of the four reachability analysis which of the four reachability analysis do you do you do reachability analysis do you do you do reachability analysis do you do you do reachability analysis on the code level so is that particular on the code level so is that particular on the code level so is that particular library being loaded or reachable do you library being loaded or reachable do you library being loaded or reachable do you do reachability analysis at container Is do reachability analysis at container Is do reachability analysis at container Is that container being reachable from a that container being reachable from a that container being reachable from a network perspective or is that network perspective or is that network perspective or is that particular software being loaded in a particular software being loaded in a particular software being loaded in a container that is actually network container that is actually network container that is actually network reachable? And then you have your reachable? And then you have your reachable? And then you have your favorite CTI or network reachability favorite CTI or network reachability favorite CTI or network reachability analysis. I'm not going to give you a analysis. I'm not going to give you a analysis. I'm not going to give you a master class on reachability analysis. master class on reachability analysis. master class on reachability analysis. But what I want to touch on is after all this talk what we want to is after all this talk what we want to is after all this talk what we want to get to is what are the critical that get to is what are the critical that get to is what are the critical that really matters. What are the things that really matters. What are the things that really matters. What are the things that we can switch we can switch we can switch off? And what I like to do is switching off? And what I like to do is switching off? And what I like to do is switching off vulnerability. Not reporting more, off vulnerability. Not reporting more, off vulnerability. Not reporting more, but actually reporting less but actually reporting less but actually reporting less vulnerability. And to report less, you vulnerability. And to report less, you vulnerability. And to report less, you really need to look at is the particular really need to look at is the particular really need to look at is the particular vulnerability exploitable? Is that vulnerability exploitable? Is that vulnerability exploitable? Is that particular vulnerability reachable? Is particular vulnerability reachable? Is particular vulnerability reachable? Is that particular vulnerability a critical that particular vulnerability a critical that particular vulnerability a critical in this particular context where I'm in this particular context where I'm in this particular context where I'm deploying? And most importantly, who deploying? And most importantly, who deploying? And most importantly, who needs to fix that? needs to fix that? needs to fix that? So if you walk the path to So if you walk the path to So if you walk the path to CVSS, I will say you probably are in the CVSS, I will say you probably are in the CVSS, I will say you probably are in the ancient Roman time where people are ancient Roman time where people are ancient Roman time where people are building weapons with bronze or maybe building weapons with bronze or maybe building weapons with bronze or maybe silver like those are not the tool that silver like those are not the tool that silver like those are not the tool that we can use to measure we can use to measure we can use to measure risk. What we should measure risk is and risk. What we should measure risk is and risk. What we should measure risk is and this is the journey that every company this is the journey that every company this is the journey that every company goes through when trying to do an goes through when trying to do an goes through when trying to do an implementation of vulnerability implementation of vulnerability implementation of vulnerability management program from traditional CVSS management program from traditional CVSS management program from traditional CVSS to something more enriched because to something more enriched because to something more enriched because ultimately is about how do I fit all of ultimately is about how do I fit all of ultimately is about how do I fit all of this data point into a matrix system this data point into a matrix system this data point into a matrix system that tells me ultimately do I fix it do that tells me ultimately do I fix it do that tells me ultimately do I fix it do I ignore it do I look at it tomorrow I ignore it do I look at it tomorrow I ignore it do I look at it tomorrow that's I'm just picturing perfectly uh that's I'm just picturing perfectly uh that's I'm just picturing perfectly uh the CISOs I've worked with and we buy a the CISOs I've worked with and we buy a the CISOs I've worked with and we buy a scanner and they just say, "Show me how scanner and they just say, "Show me how scanner and they just say, "Show me how many criticals. How many criticals do we many criticals. How many criticals do we many criticals. How many criticals do we have?" And then it's like, "All right, have?" And then it's like, "All right, have?" And then it's like, "All right, we have 200." And then over time, as the we have 200." And then over time, as the we have 200." And then over time, as the as the months and the years go by, they as the months and the years go by, they as the months and the years go by, they start getting more nuanced slowly with start getting more nuanced slowly with start getting more nuanced slowly with with that question of like, "All right, with that question of like, "All right, with that question of like, "All right, well, the number of critical like what well, the number of critical like what well, the number of critical like what are the real criticals?" And then I just are the real criticals?" And then I just are the real criticals?" And then I just remember constantly being like, "James, remember constantly being like, "James, remember constantly being like, "James, no, what are the real criticals?" And I no, what are the real criticals?" And I no, what are the real criticals?" And I think it gets to like that's a very think it gets to like that's a very think it gets to like that's a very complicated question that uh the number complicated question that uh the number complicated question that uh the number of CBSS criticals doesn't uh remotely of CBSS criticals doesn't uh remotely of CBSS criticals doesn't uh remotely tell us. Yeah. So if you want to take tell us. Yeah. So if you want to take tell us. Yeah. So if you want to take something out of something out of something out of this what we use in Phoenix and in this what we use in Phoenix and in this what we use in Phoenix and in general what I like to use as part of a general what I like to use as part of a general what I like to use as part of a riskbased approach is fourdimensional riskbased approach is fourdimensional riskbased approach is fourdimensional risk. So CVSS is one of them. How bad is risk. So CVSS is one of them. How bad is risk. So CVSS is one of them. How bad is potentially a particular vulnerability? potentially a particular vulnerability? potentially a particular vulnerability? Your business context where that Your business context where that Your business context where that particular vulnerability manifest in particular vulnerability manifest in particular vulnerability manifest in term of how important is that term of how important is that term of how important is that application or where that application application or where that application application or where that application run and that where that application runs run and that where that application runs run and that where that application runs gives me the other two dimension that is gives me the other two dimension that is gives me the other two dimension that is reachability analysis. Is this reachability analysis. Is this reachability analysis. Is this particular application running on a set particular application running on a set particular application running on a set of container? Yes. No. or an image that of container? Yes. No. or an image that of container? Yes. No. or an image that is actually running somewhere and is is actually running somewhere and is is actually running somewhere and is that image or that running image that image or that running image that image or that running image actually network reachable. So that's actually network reachable. So that's actually network reachable. So that's the concept of the different concept of the concept of the different concept of the concept of the different concept of reachability analysis and then is this reachability analysis and then is this reachability analysis and then is this particular vulnerability actually particular vulnerability actually particular vulnerability actually exploitable and do I have evidence of exploitable and do I have evidence of exploitable and do I have evidence of exploitation and that's a very nuance exploitation and that's a very nuance exploitation and that's a very nuance question and you have different data question and you have different data question and you have different data point depending on different style of point depending on different style of point depending on different style of vulnerability from a patching vulnerability from a patching vulnerability from a patching perspective from a traditional library perspective from a traditional library perspective from a traditional library perspective you have EPSS CTI and other perspective you have EPSS CTI and other perspective you have EPSS CTI and other methods that tells you attackers are methods that tells you attackers are methods that tells you attackers are actually using this vulnerability right actually using this vulnerability right actually using this vulnerability right from a library perspective and from a from a library perspective and from a from a library perspective and from a software perspective that's way more software perspective that's way more software perspective that's way more complicated to answer that question. So complicated to answer that question. So complicated to answer that question. So you need to have different data point you need to have different data point you need to have different data point for different type of vulnerability and for different type of vulnerability and for different type of vulnerability and that's why I like the concept of that's why I like the concept of that's why I like the concept of probability of exploitation because it's probability of exploitation because it's probability of exploitation because it's driven and it different from each type driven and it different from each type driven and it different from each type of asset that you own and if you want to of asset that you own and if you want to of asset that you own and if you want to do things at do things at do things at scale again I'm going to go back to scale again I'm going to go back to scale again I'm going to go back to application security and environment application security and environment application security and environment security you need to really make these security you need to really make these security you need to really make these two environment correlate to each other two environment correlate to each other two environment correlate to each other but need to recognize that they are but need to recognize that they are but need to recognize that they are different beasts and one method of different beasts and one method of different beasts and one method of approach that I used to like when approach that I used to like when approach that I used to like when deploying things at scale back in my deploying things at scale back in my deploying things at scale back in my financial institution days financial institution days financial institution days was you need to give the freedom to was you need to give the freedom to was you need to give the freedom to teams to operate and decide how they teams to operate and decide how they teams to operate and decide how they want to tackle this problem because SLA want to tackle this problem because SLA want to tackle this problem because SLA don't help don't help don't help anyone who has used SLA in this room anyone who has used SLA in this room anyone who has used SLA in this room before service level before service level before service level agreement how many time you seen SLA agreement how many time you seen SLA agreement how many time you seen SLA being being being missed lots of missed lots of missed lots of time. Yeah. Because SLA is a flat line time. Yeah. Because SLA is a flat line time. Yeah. Because SLA is a flat line that you say this is the timeline where that you say this is the timeline where that you say this is the timeline where you should demarcate and they are you should demarcate and they are you should demarcate and they are consistently getting breached and consistently getting breached and consistently getting breached and consistently getting missed. Another consistently getting missed. Another consistently getting missed. Another approach that I like much more is this approach that I like much more is this approach that I like much more is this is the bar that you should hit from a is the bar that you should hit from a is the bar that you should hit from a risk perspective. The way you're going risk perspective. The way you're going risk perspective. The way you're going to tackle that is completely up to you. to tackle that is completely up to you. to tackle that is completely up to you. So one of the method that we use in So one of the method that we use in So one of the method that we use in Phoenix and uh it comes from our Phoenix and uh it comes from our Phoenix and uh it comes from our experience back in the financial experience back in the financial experience back in the financial institution days was this is the level institution days was this is the level institution days was this is the level that your application need to hit in that your application need to hit in that your application need to hit in term of risk level you as a team go and term of risk level you as a team go and term of risk level you as a team go and figure out if you patching a system if figure out if you patching a system if figure out if you patching a system if you tackle a library by library you tackle a library by library you tackle a library by library approach. If you fix an entire bill approach. If you fix an entire bill approach. If you fix an entire bill file, if you decommission an entire file, if you decommission an entire file, if you decommission an entire application, it's completely up to you application, it's completely up to you application, it's completely up to you as a team to figure out the approach to as a team to figure out the approach to as a team to figure out the approach to best hit that target. But you give and best hit that target. But you give and best hit that target. But you give and treat engineers like adults, not like treat engineers like adults, not like treat engineers like adults, not like toddlers with SLA. Well, I think the key toddlers with SLA. Well, I think the key toddlers with SLA. Well, I think the key thing that I found helpful is to thing that I found helpful is to thing that I found helpful is to communicate to them that this is not communicate to them that this is not communicate to them that this is not going to stop happening. because a lot going to stop happening. because a lot going to stop happening. because a lot of times they can get a ton of of times they can get a ton of of times they can get a ton of vulnerability tickets maybe over the vulnerability tickets maybe over the vulnerability tickets maybe over the course of 3 months and say all right course of 3 months and say all right course of 3 months and say all right we're going to take an engineer for a we're going to take an engineer for a we're going to take an engineer for a sprint and we're just going to heads sprint and we're just going to heads sprint and we're just going to heads down fix all this stuff and then then down fix all this stuff and then then down fix all this stuff and then then they're surprised when 3 months later they're surprised when 3 months later they're surprised when 3 months later there are a ton more CDs and they're there are a ton more CDs and they're there are a ton more CDs and they're like didn't we just do all this work to like didn't we just do all this work to like didn't we just do all this work to fix it and so it's just communicating fix it and so it's just communicating fix it and so it's just communicating like how can we strategically like what like how can we strategically like what like how can we strategically like what is going on that we can't have a is going on that we can't have a is going on that we can't have a sustainable patch process on this sustainable patch process on this sustainable patch process on this service and then how can I help you as a service and then how can I help you as a service and then how can I help you as a security stakeholder who can easily get security stakeholder who can easily get security stakeholder who can easily get up the executive chain a lot more easily up the executive chain a lot more easily up the executive chain a lot more easily than like a a a junior software than like a a a junior software than like a a a junior software developer veloper can to say how can we developer veloper can to say how can we developer veloper can to say how can we as a team work towards these things as a team work towards these things as a team work towards these things because we ultimately have the same because we ultimately have the same because we ultimately have the same goals like developers also want goals like developers also want goals like developers also want ephemeral infrastructure they want ephemeral infrastructure they want ephemeral infrastructure they want elegant deployment systems they don't elegant deployment systems they don't elegant deployment systems they don't like flaky applications and flaky tests like flaky applications and flaky tests like flaky applications and flaky tests but the problem is they can't get tech but the problem is they can't get tech but the problem is they can't get tech debt prioritized but security is sort of debt prioritized but security is sort of debt prioritized but security is sort of the secret weapon to hey if security the secret weapon to hey if security the secret weapon to hey if security saying we have this tech debt problem saying we have this tech debt problem saying we have this tech debt problem developer saying we have this tech debt developer saying we have this tech debt developer saying we have this tech debt problem devops is saying we have this problem devops is saying we have this problem devops is saying we have this tech debt problem we need to actually tech debt problem we need to actually tech debt problem we need to actually fix this stuff um it allows us to go fix this stuff um it allows us to go fix this stuff um it allows us to go together and make a business case for it together and make a business case for it together and make a business case for it as opposed to just constantly trying to as opposed to just constantly trying to as opposed to just constantly trying to every 6 months we're surprised again every 6 months we're surprised again every 6 months we're surprised again that there are more vulnerabilities on that there are more vulnerabilities on that there are more vulnerabilities on these these these images and the way we trade risk on all images and the way we trade risk on all images and the way we trade risk on all of this and if you want to take of this and if you want to take of this and if you want to take something away don't reinvent the wheel something away don't reinvent the wheel something away don't reinvent the wheel like risk is risk and has never changed like risk is risk and has never changed like risk is risk and has never changed and don't believe anyone that tells you and don't believe anyone that tells you and don't believe anyone that tells you we have a new way to tackle risk because we have a new way to tackle risk because we have a new way to tackle risk because that's that's that's BS. So just use the basic BS. So just use the basic BS. So just use the basic formula how bad it is what is the formula how bad it is what is the formula how bad it is what is the likelihood of an event to potentially likelihood of an event to potentially likelihood of an event to potentially happen and that's where you can play happen and that's where you can play happen and that's where you can play with different point and that's where with different point and that's where with different point and that's where you can play with different typology of you can play with different typology of you can play with different typology of asset like is something reachable is asset like is something reachable is asset like is something reachable is something likely to be exploited and something likely to be exploited and something likely to be exploited and those are the question that you can those are the question that you can those are the question that you can answer in what we call probability of answer in what we call probability of answer in what we call probability of exploitation what risk called really the exploitation what risk called really the exploitation what risk called really the likelihood of exploitation and then how likelihood of exploitation and then how likelihood of exploitation and then how bad it is from an impact bad it is from an impact bad it is from an impact perspective. So I've been teasing you perspective. So I've been teasing you perspective. So I've been teasing you about a threatentric approach. I've been about a threatentric approach. I've been about a threatentric approach. I've been talking about threats all this time. So talking about threats all this time. So talking about threats all this time. So let's show really what it is a let's show really what it is a let's show really what it is a threatentic approach. threatentic approach. threatentic approach. So from all of the vulnerability we're So from all of the vulnerability we're So from all of the vulnerability we're looking at right now a really basic looking at right now a really basic looking at right now a really basic effect of is something exploitable is effect of is something exploitable is effect of is something exploitable is something not exploitable. But can we go something not exploitable. But can we go something not exploitable. But can we go beyond that? Can we look at the beyond that? Can we look at the beyond that? Can we look at the vulnerability and try to understand do vulnerability and try to understand do vulnerability and try to understand do we have a DNA of the vulnerability that we have a DNA of the vulnerability that we have a DNA of the vulnerability that are exploitable? What are the are exploitable? What are the are exploitable? What are the characteristics of specific characteristics of specific characteristics of specific vulnerability that turns into a vulnerability that turns into a vulnerability that turns into a ransomware attack a zero day? Something ransomware attack a zero day? Something ransomware attack a zero day? Something that threat actors use and look at more that threat actors use and look at more that threat actors use and look at more and more. So that's the question we and more. So that's the question we and more. So that's the question we started asking ourself um to get to the started asking ourself um to get to the started asking ourself um to get to the point and to answer that question we point and to answer that question we point and to answer that question we look at two category of problem CVE look at two category of problem CVE look at two category of problem CVE based and CWE base because in based and CWE base because in based and CWE base because in traditional patching method you have traditional patching method you have traditional patching method you have CVbased vulnerability but in the CVbased vulnerability but in the CVbased vulnerability but in the software world you have CWE base so can software world you have CWE base so can software world you have CWE base so can you find a common denominator that tells you find a common denominator that tells you find a common denominator that tells you the DNA of specific vulnerability you the DNA of specific vulnerability you the DNA of specific vulnerability that leads to an exploit a zero day or a that leads to an exploit a zero day or a that leads to an exploit a zero day or a ransom attack and are there patterns ransom attack and are there patterns ransom attack and are there patterns that are common between all of that are common between all of that are common between all of them? I'm going to skip quickly this them? I'm going to skip quickly this them? I'm going to skip quickly this part and look at the juicy part. So, one part and look at the juicy part. So, one part and look at the juicy part. So, one method that we looked at originally was method that we looked at originally was method that we looked at originally was can we trace back vulnerability with CWE can we trace back vulnerability with CWE can we trace back vulnerability with CWE car TDP and miter an attack and that led car TDP and miter an attack and that led car TDP and miter an attack and that led us somewhere initially but CWE are us somewhere initially but CWE are us somewhere initially but CWE are missing most of the time. Chris has done missing most of the time. Chris has done missing most of the time. Chris has done a fantastic job on the talk. uh a fantastic job on the talk. uh a fantastic job on the talk. uh yesterday on covering the gap between yesterday on covering the gap between yesterday on covering the gap between CWE and we apply the same methodology or CWE and we apply the same methodology or CWE and we apply the same methodology or a similar methodology on threat type to a similar methodology on threat type to a similar methodology on threat type to actually classify and you have the actually classify and you have the actually classify and you have the threat mapper up there to understand threat mapper up there to understand threat mapper up there to understand really the DNA of specific vulnerability really the DNA of specific vulnerability really the DNA of specific vulnerability and invite you to play with it to and invite you to play with it to and invite you to play with it to understand the DNA of specific understand the DNA of specific understand the DNA of specific vulnerability type and if you want to vulnerability type and if you want to vulnerability type and if you want to look at the methodology that we use and look at the methodology that we use and look at the methodology that we use and all of the to process because it's a all of the to process because it's a all of the to process because it's a lengthy to process you can look at our lengthy to process you can look at our lengthy to process you can look at our white paper down white paper down white paper down there. But if we just look at the there. But if we just look at the there. But if we just look at the vulnerability type and James mentioned vulnerability type and James mentioned vulnerability type and James mentioned it before, CW are it before, CW are it before, CW are usually not looked at because 50% of the usually not looked at because 50% of the usually not looked at because 50% of the MVD is actually not really being MVD is actually not really being MVD is actually not really being classified with vulnerability. So what classified with vulnerability. So what classified with vulnerability. So what we did is using an LLM based approach to we did is using an LLM based approach to we did is using an LLM based approach to actually classify and reclassify actually classify and reclassify actually classify and reclassify vulnerability in these two methods that vulnerability in these two methods that vulnerability in these two methods that is called root cause and threat impact is called root cause and threat impact is called root cause and threat impact and we seen a fairly good distribution. and we seen a fairly good distribution. and we seen a fairly good distribution. We haven't seen any emerging threats We haven't seen any emerging threats We haven't seen any emerging threats from all of the NVD reclassification. uh from all of the NVD reclassification. uh from all of the NVD reclassification. uh we looked at trending between the years we looked at trending between the years we looked at trending between the years and has something changed between 2018 and has something changed between 2018 and has something changed between 2018 and onward where we kind of can and onward where we kind of can and onward where we kind of can demarcate the born of modern demarcate the born of modern demarcate the born of modern vulnerabilities versus the old vulnerabilities versus the old vulnerabilities versus the old vulnerabilities. So if you look at for vulnerabilities. So if you look at for vulnerabilities. So if you look at for example um cross-ite scripting we've example um cross-ite scripting we've example um cross-ite scripting we've been reducing those classes of been reducing those classes of been reducing those classes of vulnerability or denial of service where vulnerability or denial of service where vulnerability or denial of service where we've seen remote code execution raising we've seen remote code execution raising we've seen remote code execution raising up from the up from the up from the ranks. Now so far we haven't seen ranks. Now so far we haven't seen ranks. Now so far we haven't seen anything that give us a good indicator anything that give us a good indicator anything that give us a good indicator or of that particular DNA element of a or of that particular DNA element of a or of that particular DNA element of a vulnerability that gives us good vulnerability that gives us good vulnerability that gives us good exploitation. So we've been looking at exploitation. So we've been looking at exploitation. So we've been looking at the wrong data. So we start looking at the wrong data. So we start looking at the wrong data. So we start looking at all our threat intelligence and open all our threat intelligence and open all our threat intelligence and open source threat intelligence available source threat intelligence available source threat intelligence available data and we start seeing patterns. We data and we start seeing patterns. We data and we start seeing patterns. We start seeing the raise of remote code start seeing the raise of remote code start seeing the raise of remote code execution buffer overflow as a threat execution buffer overflow as a threat execution buffer overflow as a threat impact and over the years this is much impact and over the years this is much impact and over the years this is much more clear. Remote code execution has more clear. Remote code execution has more clear. Remote code execution has been used consistently as a method of been used consistently as a method of been used consistently as a method of exploitation for zero day as well as exploitation for zero day as well as exploitation for zero day as well as memory corruption. And it's logical if memory corruption. And it's logical if memory corruption. And it's logical if you think about it as an attacker. What you think about it as an attacker. What you think about it as an attacker. What do you want? You want something that is do you want? You want something that is do you want? You want something that is remotely trigable that going to enable remotely trigable that going to enable remotely trigable that going to enable you to move across exploitation and you to move across exploitation and you to move across exploitation and limiting of the memory um and get above limiting of the memory um and get above limiting of the memory um and get above the boundaries. And then we start the boundaries. And then we start the boundaries. And then we start looking at from uh all of the ransomware looking at from uh all of the ransomware looking at from uh all of the ransomware data that we have available as well as data that we have available as well as data that we have available as well as CISAV flag as ransomware data at that CISAV flag as ransomware data at that CISAV flag as ransomware data at that particular threat type and threat impact particular threat type and threat impact particular threat type and threat impact that are relevant. again remote code that are relevant. again remote code that are relevant. again remote code execution execution execution and memory corruption were the one that and memory corruption were the one that and memory corruption were the one that were more prevalent as a DNA method of were more prevalent as a DNA method of were more prevalent as a DNA method of something that led into an exploit and something that led into an exploit and something that led into an exploit and as well it was so clear that almost 40% as well it was so clear that almost 40% as well it was so clear that almost 40% of all of the exploit on a set of 400 of all of the exploit on a set of 400 of all of the exploit on a set of 400 400 um ransomware used vulnerability 400 um ransomware used vulnerability 400 um ransomware used vulnerability have the same characteristics and same have the same characteristics and same have the same characteristics and same impact type. So we start using this impact type. So we start using this impact type. So we start using this information to start information to start information to start predicting are this vulnerability going predicting are this vulnerability going predicting are this vulnerability going to be likely to be exploited and can we to be likely to be exploited and can we to be likely to be exploited and can we use this information to predict if use this information to predict if use this information to predict if something's going to become a zero day something's going to become a zero day something's going to become a zero day or if something's going to become an or if something's going to become an or if something's going to become an exploitation and the answer is exploitation and the answer is exploitation and the answer is yes. We have more data that are yes. We have more data that are yes. We have more data that are available but I'm not going to bother available but I'm not going to bother available but I'm not going to bother you with too much data because it keeps you with too much data because it keeps you with too much data because it keeps on saying the same thing. So we used on saying the same thing. So we used on saying the same thing. So we used fundamentally a method that reclassify fundamentally a method that reclassify fundamentally a method that reclassify or tell us if these indicator are a good or tell us if these indicator are a good or tell us if these indicator are a good indicator of exploitation or indicator of exploitation or indicator of exploitation or ransomware then we can give or use this ransomware then we can give or use this ransomware then we can give or use this as an additional flag when we don't have as an additional flag when we don't have as an additional flag when we don't have any other method of information and this any other method of information and this any other method of information and this is particularly true in software where is particularly true in software where is particularly true in software where you don't have any threat available you don't have any threat available you don't have any threat available information or in your CVE base where information or in your CVE base where information or in your CVE base where you have millions of vulnerability where you have millions of vulnerability where you have millions of vulnerability where do you focus you focus fus on the one do you focus you focus fus on the one do you focus you focus fus on the one that are more likely to be exploited, that are more likely to be exploited, that are more likely to be exploited, more likely to be triggered remotely. So more likely to be triggered remotely. So more likely to be triggered remotely. So again, if you want to look at how we use again, if you want to look at how we use again, if you want to look at how we use this threat and threat impact, you can this threat and threat impact, you can this threat and threat impact, you can scan this. This is available as part of scan this. This is available as part of scan this. This is available as part of our threat intelligence and threat our threat intelligence and threat our threat intelligence and threat visualization across code, clouds, uh visualization across code, clouds, uh visualization across code, clouds, uh software and so on. And if you want to software and so on. And if you want to software and so on. And if you want to look at the methodology and more of the look at the methodology and more of the look at the methodology and more of the data that we use as an approach, there data that we use as an approach, there data that we use as an approach, there is the white paper out there. So, I'm is the white paper out there. So, I'm is the white paper out there. So, I'm going to leave some room for the going to leave some room for the going to leave some room for the question, but in question, but in question, but in conclusion, did we answer the question? conclusion, did we answer the question? conclusion, did we answer the question? Did we give you the silver bullet to Did we give you the silver bullet to Did we give you the silver bullet to prioritize vulnerability or do we give prioritize vulnerability or do we give prioritize vulnerability or do we give you the silver bullet to shoot yourself you the silver bullet to shoot yourself you the silver bullet to shoot yourself when you see a lot of vulnerability? We when you see a lot of vulnerability? We when you see a lot of vulnerability? We hope that in all of this journey we hope that in all of this journey we hope that in all of this journey we given you the magic security does that given you the magic security does that given you the magic security does that helps you discerning between different helps you discerning between different helps you discerning between different vulnerability and different vulnerability and different vulnerability and different vulnerability categories and realizing vulnerability categories and realizing vulnerability categories and realizing that this beast is complicated and the that this beast is complicated and the that this beast is complicated and the way you approach software vulnerability way you approach software vulnerability way you approach software vulnerability and the way you approach library and the way you approach library and the way you approach library vulnerabilities and container vulnerabilities and container vulnerabilities and container vulnerability needs to be different but vulnerability needs to be different but vulnerability needs to be different but the method that you use to prioritize the method that you use to prioritize the method that you use to prioritize needs to be consistent so that you can needs to be consistent so that you can needs to be consistent so that you can give your engineers a good indic give your engineers a good indic give your engineers a good indic indication of what to fix indication of what to fix indication of what to fix first. Thank you for your time. Questions for the folks in the room. If Questions for the folks in the room. If Questions for the folks in the room. If you have a question, please raise your you have a question, please raise your you have a question, please raise your hand and one of us will bring you a hand and one of us will bring you a hand and one of us will bring you a microphone virtual because they're so thoroughly virtual because they're so thoroughly virtual because they're so thoroughly satisfied with how to fix. They we shock satisfied with how to fix. They we shock satisfied with how to fix. They we shock you. Yes, virtual folks uh please place you. Yes, virtual folks uh please place you. Yes, virtual folks uh please place your questions in the discord. First of your questions in the discord. First of your questions in the discord. First of all, and it's very nice to see that mean all, and it's very nice to see that mean all, and it's very nice to see that mean we are doing similar uh vulnerability we are doing similar uh vulnerability we are doing similar uh vulnerability sization in our company and we use the sization in our company and we use the sization in our company and we use the existence of the exploit as a one of the existence of the exploit as a one of the existence of the exploit as a one of the criteria to define the priority of the criteria to define the priority of the criteria to define the priority of the single stream. However, the fact that single stream. However, the fact that single stream. However, the fact that the CV can be exploited doesn't mean the CV can be exploited doesn't mean the CV can be exploited doesn't mean that it's exploited. Correct? We use we that it's exploited. Correct? We use we that it's exploited. Correct? We use we enrich the we set cyber threat enrich the we set cyber threat enrich the we set cyber threat intelligence sources uh the behavior of intelligence sources uh the behavior of intelligence sources uh the behavior of each CV to understand its its each CV to understand its its each CV to understand its its exploitability uh towards the war and exploitability uh towards the war and exploitability uh towards the war and against our company. Of course if we against our company. Of course if we against our company. Of course if we detect anything which is related to our detect anything which is related to our detect anything which is related to our company this triggers another parameter company this triggers another parameter company this triggers another parameter which is the popularity of the CV. So if which is the popularity of the CV. So if which is the popularity of the CV. So if we for example from a web application we for example from a web application we for example from a web application firewall and any kind of ADR etc we firewall and any kind of ADR etc we firewall and any kind of ADR etc we detect any indicator of compreise that detect any indicator of compreise that detect any indicator of compreise that any indicator tell us that a specific CV any indicator tell us that a specific CV any indicator tell us that a specific CV is exploited against us this is is exploited against us this is is exploited against us this is increasing the priority of the specific increasing the priority of the specific increasing the priority of the specific CV uh when there is when the CV is just CV uh when there is when the CV is just CV uh when there is when the CV is just exploitable uh we say is disclosed the exploitable uh we say is disclosed the exploitable uh we say is disclosed the exploit is available but until it is not exploit is available but until it is not exploit is available but until it is not really exploited let's say exploited in really exploited let's say exploited in really exploited let's say exploited in the while until we don't have a real the while until we don't have a real the while until we don't have a real evidence that this CV is getting evidence that this CV is getting evidence that this CV is getting exploited we do not increase the rating exploited we do not increase the rating exploited we do not increase the rating of the specific CV CV we keep it in a of the specific CV CV we keep it in a of the specific CV CV we keep it in a let's say downside and we keep it under let's say downside and we keep it under let's say downside and we keep it under monitoring es especially for those monitoring es especially for those monitoring es especially for those specific CV that can be more dangerous specific CV that can be more dangerous specific CV that can be more dangerous and uh whenever then we detect something and uh whenever then we detect something and uh whenever then we detect something we increase the rating uh in regards of we increase the rating uh in regards of we increase the rating uh in regards of the SLA what we have uh detected as a the SLA what we have uh detected as a the SLA what we have uh detected as a very uh can say very meaningful for the very uh can say very meaningful for the very uh can say very meaningful for the team who is going then to apply the team who is going then to apply the team who is going then to apply the remedation with the specific CV is to remedation with the specific CV is to remedation with the specific CV is to communicate to them when the CV when communicate to them when the CV when communicate to them when the CV when there is a patch for the specific CV. So there is a patch for the specific CV. So there is a patch for the specific CV. So um maybe it's not every it's not in um maybe it's not every it's not in um maybe it's not every it's not in every company but in our company there every company but in our company there every company but in our company there there are some team that applies the there are some team that applies the there are some team that applies the patches another team that let's say that patches another team that let's say that patches another team that let's say that monitors the network to the team that monitors the network to the team that monitors the network to the team that monitors the network we reach out to monitors the network we reach out to monitors the network we reach out to apply the mitigation if there is a apply the mitigation if there is a apply the mitigation if there is a specific signature for the CV but specific signature for the CV but specific signature for the CV but patching team don't need to know about patching team don't need to know about patching team don't need to know about the CV until there is not a batch for the CV until there is not a batch for the CV until there is not a batch for the specific CV so we as a cyber the specific CV so we as a cyber the specific CV so we as a cyber security we are trying to let's say to security we are trying to let's say to security we are trying to let's say to spread split the responsibility within spread split the responsibility within spread split the responsibility within the company and to ensure that we talk the company and to ensure that we talk the company and to ensure that we talk to the every team actually we talk to to the every team actually we talk to to the every team actually we talk to the exact team who can really actionate the exact team who can really actionate the exact team who can really actionate uh something against a specific uh something against a specific uh something against a specific vulnerability. Uh and with this method vulnerability. Uh and with this method vulnerability. Uh and with this method whenever we get we go to the team with whenever we get we go to the team with whenever we get we go to the team with the patch and we talk and we tell to the patch and we talk and we tell to the patch and we talk and we tell to them look this CV was released three them look this CV was released three them look this CV was released three months ago. We apply the mitigation in months ago. We apply the mitigation in months ago. We apply the mitigation in the meantime but now you can apply the the meantime but now you can apply the the meantime but now you can apply the patch then SLA are getting quite well patch then SLA are getting quite well patch then SLA are getting quite well respected. We have a very tight SLA for respected. We have a very tight SLA for respected. We have a very tight SLA for critical because we issue our own our critical because we issue our own our critical because we issue our own our own critical rating. we never copy the own critical rating. we never copy the own critical rating. we never copy the vendor rating and in that case we have vendor rating and in that case we have vendor rating and in that case we have six days SLA for patching critical six days SLA for patching critical six days SLA for patching critical vulnerability worldwide and I will say vulnerability worldwide and I will say vulnerability worldwide and I will say the team is going very well is is the team is going very well is is the team is going very well is is patching uh within the SLA. Yeah, that's patching uh within the SLA. Yeah, that's patching uh within the SLA. Yeah, that's a very good point because you actually a very good point because you actually a very good point because you actually don't have discovery time SLA but you don't have discovery time SLA but you don't have discovery time SLA but you have remediation SLA what we call have remediation SLA what we call have remediation SLA what we call remediation SLA discovery time SLA are remediation SLA discovery time SLA are remediation SLA discovery time SLA are on us we take the responsibility of the on us we take the responsibility of the on us we take the responsibility of the of the discovery SLA and we ensure that of the discovery SLA and we ensure that of the discovery SLA and we ensure that that the correct team is informed about that the correct team is informed about that the correct team is informed about what they have to do on the other hand what they have to do on the other hand what they have to do on the other hand network team don't care about patching network team don't care about patching network team don't care about patching they care about deploying the signature they care about deploying the signature they care about deploying the signature so we balance somehow the risk in in so we balance somehow the risk in in so we balance somehow the risk in in this way and for the part of Kubernetes this way and for the part of Kubernetes this way and for the part of Kubernetes which was quite interesting a question which was quite interesting a question which was quite interesting a question that I have for Our approach is that I have for Our approach is that I have for Our approach is currently to not wait for any detection. currently to not wait for any detection. currently to not wait for any detection. So we are uh working at registry level So we are uh working at registry level So we are uh working at registry level and we our aim this is a big project and we our aim this is a big project and we our aim this is a big project which is current under development but which is current under development but which is current under development but our aim is to uh scan the repository our aim is to uh scan the repository our aim is to uh scan the repository before any kind of deploy before any before any kind of deploy before any before any kind of deploy before any kind of container image and tell to the kind of container image and tell to the kind of container image and tell to the team what image they can deploy uh team what image they can deploy uh team what image they can deploy uh before it is getting runtime. Of course, before it is getting runtime. Of course, before it is getting runtime. Of course, if it is something is already running if it is something is already running if it is something is already running that has a higher priority but this that has a higher priority but this that has a higher priority but this method is helping us also in kind of method is helping us also in kind of method is helping us also in kind of giving to the team to the glob to giving to the team to the glob to giving to the team to the glob to everyone kind of awareness of their everyone kind of awareness of their everyone kind of awareness of their library of their registries and what we library of their registries and what we library of their registries and what we did basically is uh we created a rule did basically is uh we created a rule did basically is uh we created a rule that every kind of application owner who that every kind of application owner who that every kind of application owner who wants to use Kubernetes has to load wants to use Kubernetes has to load wants to use Kubernetes has to load their repository in Azure container regs their repository in Azure container regs their repository in Azure container regs container regist and we scan directly container regist and we scan directly container regist and we scan directly that part. So you can all of the version that part. So you can all of the version that part. So you can all of the version of all of the container that get of all of the container that get of all of the container that get generated the full register stack and generated the full register stack and generated the full register stack and then we get back to the application then we get back to the application then we get back to the application owner with a list of libraries that can owner with a list of libraries that can owner with a list of libraries that can be used. There are of course some edge be used. There are of course some edge be used. There are of course some edge cases when there is a business reason cases when there is a business reason cases when there is a business reason that this specific library has to be that this specific library has to be that this specific library has to be used but in that case we apply a used but in that case we apply a used but in that case we apply a specific let's say sync calling around specific let's say sync calling around specific let's say sync calling around the the library. We keep it we keep the the the library. We keep it we keep the the the library. We keep it we keep the library under the rider. uh and then if library under the rider. uh and then if library under the rider. uh and then if something changes for example there is a something changes for example there is a something changes for example there is a an an update of the CV that the CV is an an update of the CV that the CV is an an update of the CV that the CV is getting publicly exploited whatever we getting publicly exploited whatever we getting publicly exploited whatever we close it directly we give to them few close it directly we give to them few close it directly we give to them few days and they need to change the library days and they need to change the library days and they need to change the library as soon as possible this is helping as as soon as possible this is helping as as soon as possible this is helping as as well for the part of the SLA to as well for the part of the SLA to as well for the part of the SLA to reduce the the overall risk and u yeah reduce the the overall risk and u yeah reduce the the overall risk and u yeah that this is what what I wanted to ask that this is what what I wanted to ask that this is what what I wanted to ask why you think we should be waiting to to why you think we should be waiting to to why you think we should be waiting to to scan the I don't I don't really like the scan the I don't I don't really like the scan the I don't I don't really like the fact that the image is is already fact that the image is is already fact that the image is is already running is already vulnerable running is already vulnerable running is already vulnerable Then we scan it and we detect that this Then we scan it and we detect that this Then we scan it and we detect that this is vulnerable. We get back to them to is vulnerable. We get back to them to is vulnerable. We get back to them to say something. So I would like to handle say something. So I would like to handle say something. So I would like to handle the problem before it is getting a the problem before it is getting a the problem before it is getting a runtime. Yeah, that's shift left. But runtime. Yeah, that's shift left. But runtime. Yeah, that's shift left. But then you have as well. Thank you for the then you have as well. Thank you for the then you have as well. Thank you for the question is very rich question. question is very rich question. question is very rich question. So if the image is running like the So if the image is running like the So if the image is running like the reality of it is that organization are reality of it is that organization are reality of it is that organization are not blocking deployment before the image not blocking deployment before the image not blocking deployment before the image get run. So a lot of us have started get run. So a lot of us have started get run. So a lot of us have started looking at container cloud and start looking at container cloud and start looking at container cloud and start scanning things when things are already scanning things when things are already scanning things when things are already in production. Second, you have library in production. Second, you have library in production. Second, you have library that become vulnerable when they're that become vulnerable when they're that become vulnerable when they're already deployed. And the challenge that already deployed. And the challenge that already deployed. And the challenge that you have is really do you look at all of you have is really do you look at all of you have is really do you look at all of the image that you have in all of your the image that you have in all of your the image that you have in all of your registry. Do you know that if that image registry. Do you know that if that image registry. Do you know that if that image is running and even if you know where is running and even if you know where is running and even if you know where that image got generated? So that's kind that image got generated? So that's kind that image got generated? So that's kind of the question that you should be of the question that you should be of the question that you should be asking. If you have the leisure to block asking. If you have the leisure to block asking. If you have the leisure to block all the all the all the deployment at before runtime that's even deployment at before runtime that's even deployment at before runtime that's even better because then you stop the bleed better because then you stop the bleed better because then you stop the bleed before the things becomes vulnerable. before the things becomes vulnerable. before the things becomes vulnerable. But a lot of organization don't have But a lot of organization don't have But a lot of organization don't have that leisure. Even in financial service that leisure. Even in financial service that leisure. Even in financial service we were struggling to we were struggling to we were struggling to block container image before they they block container image before they they block container image before they they got vulnerable and sometimes because we got vulnerable and sometimes because we got vulnerable and sometimes because we inherited a lot of deployments we had to inherited a lot of deployments we had to inherited a lot of deployments we had to fix those and we had to trace back where fix those and we had to trace back where fix those and we had to trace back where is that particular image coming from and is that particular image coming from and is that particular image coming from and which team needs to maintain it but which team needs to maintain it but which team needs to maintain it but thank you for the for the thank you for the for the thank you for the for the question any other question or I think question any other question or I think question any other question or I think we have minutes if not we are Fenix we have minutes if not we are Fenix we have minutes if not we are Fenix security we're out there if you want to security we're out there if you want to security we're out there if you want to keep on chatting about vulnerability But keep on chatting about vulnerability But keep on chatting about vulnerability But thank you so much for your time. I hope thank you so much for your time. I hope thank you so much for your time. I hope I'll be enlightened a little bit and I'll be enlightened a little bit and I'll be enlightened a little bit and giving you a different way to tackle giving you a different way to tackle giving you a different way to tackle vulnerability. Thank you.