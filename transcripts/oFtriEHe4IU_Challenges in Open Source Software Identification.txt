Kind: captions Language: en Thank Thank Thank you. All right, let's get started. And I you. All right, let's get started. And I you. All right, let's get started. And I apologize for my voice getting over a apologize for my voice getting over a apologize for my voice getting over a little cold. Um, all right, so a little little cold. Um, all right, so a little little cold. Um, all right, so a little bit about myself. My name is Martin. I bit about myself. My name is Martin. I bit about myself. My name is Martin. I work at Red Hat. I've been on the work at Red Hat. I've been on the work at Red Hat. I've been on the product security team at Red Hat for product security team at Red Hat for product security team at Red Hat for about 13 years. Um, and today we're about 13 years. Um, and today we're about 13 years. Um, and today we're going to talk about uh open source going to talk about uh open source going to talk about uh open source software software software identification. Um, quick agenda. We're identification. Um, quick agenda. We're identification. Um, quick agenda. We're going to talk about what software going to talk about what software going to talk about what software identity actually means. Then we're identity actually means. Then we're identity actually means. Then we're going to look at some of the going to look at some of the going to look at some of the standardized formats that that try to standardized formats that that try to standardized formats that that try to solve the problem of identifying solve the problem of identifying solve the problem of identifying software. We're going to look at the software. We're going to look at the software. We're going to look at the usage in the available data sets that we usage in the available data sets that we usage in the available data sets that we have today. So like the CV records data have today. So like the CV records data have today. So like the CV records data set and set and set and OSV and and then we're going to discuss OSV and and then we're going to discuss OSV and and then we're going to discuss some issues with that come with software some issues with that come with software some issues with that come with software identity and and we're going to have identity and and we're going to have identity and and we're going to have probably plenty of time for Q&amp;A because probably plenty of time for Q&amp;A because probably plenty of time for Q&amp;A because I think this was a 60-minute talk but I I think this was a 60-minute talk but I I think this was a 60-minute talk but I think I have like 30 minutes of slides think I have like 30 minutes of slides think I have like 30 minutes of slides so we'll see. Um so when we talk about so we'll see. Um so when we talk about so we'll see. Um so when we talk about software identity what that what does software identity what that what does software identity what that what does that actually mean? Um, essentially that actually mean? Um, essentially that actually mean? Um, essentially we're trying to identify a set of we're trying to identify a set of we're trying to identify a set of attributes that we can assign to attributes that we can assign to attributes that we can assign to something to be able to identify it something to be able to identify it something to be able to identify it within its broader ecosystem. And the within its broader ecosystem. And the within its broader ecosystem. And the broader ecosystem here is doing a lot of broader ecosystem here is doing a lot of broader ecosystem here is doing a lot of handwaving because essentially we care handwaving because essentially we care handwaving because essentially we care about the topic of identity within a about the topic of identity within a about the topic of identity within a specific scope. Right? So for us it's specific scope. Right? So for us it's specific scope. Right? So for us it's most likely vulnerability management. So most likely vulnerability management. So most likely vulnerability management. So a lot of the stuff that we're going to a lot of the stuff that we're going to a lot of the stuff that we're going to talk about is software identity in the talk about is software identity in the talk about is software identity in the context of CVEEs and advisories and context of CVEEs and advisories and context of CVEEs and advisories and security data right so other software security data right so other software security data right so other software identity schemes probably exist and they identity schemes probably exist and they identity schemes probably exist and they have their own purposes you know but have their own purposes you know but have their own purposes you know but what we are going to talk about today is what we are going to talk about today is what we are going to talk about today is the ones that are fit specifically into the ones that are fit specifically into the ones that are fit specifically into our ecosystem. Um, so if you have the our ecosystem. Um, so if you have the our ecosystem. Um, so if you have the identity of something, what is the identity of something, what is the identity of something, what is the minimal requirement for that identity? minimal requirement for that identity? minimal requirement for that identity? So you must be able to easily retrieve So you must be able to easily retrieve So you must be able to easily retrieve it, right? So if you're observing a it, right? So if you're observing a it, right? So if you're observing a thing, you should be really quickly be thing, you should be really quickly be thing, you should be really quickly be able to tell what it is and determine able to tell what it is and determine able to tell what it is and determine its identity. Um, and then you want to its identity. Um, and then you want to its identity. Um, and then you want to do something with that identity, right? do something with that identity, right? do something with that identity, right? So you must have a set of tools that So you must have a set of tools that So you must have a set of tools that support understanding that piece of support understanding that piece of support understanding that piece of identity. Um if we think of like some identity. Um if we think of like some identity. Um if we think of like some some of the simpler solutions of how can some of the simpler solutions of how can some of the simpler solutions of how can you identify a thing, anything, right? you identify a thing, anything, right? you identify a thing, anything, right? Um the first thing that comes to mind is Um the first thing that comes to mind is Um the first thing that comes to mind is model and serial numbers, right? You can model and serial numbers, right? You can model and serial numbers, right? You can just assign a number to something and just assign a number to something and just assign a number to something and that's it, right? Um so why don't we do that's it, right? Um so why don't we do that's it, right? Um so why don't we do that? Well, it would probably require that? Well, it would probably require that? Well, it would probably require some sort of central databases and it some sort of central databases and it some sort of central databases and it requires a lot of upkeep, right? Every requires a lot of upkeep, right? Every requires a lot of upkeep, right? Every time you release something you have to time you release something you have to time you release something you have to give it a new number and everybody has give it a new number and everybody has give it a new number and everybody has to be made aware of that to be made aware of that to be made aware of that number and essentially it becomes a number and essentially it becomes a number and essentially it becomes a nightmare in tracking numbers all over nightmare in tracking numbers all over nightmare in tracking numbers all over the place and then migrations are the place and then migrations are the place and then migrations are difficult. Um it just comes with a lot difficult. Um it just comes with a lot difficult. Um it just comes with a lot of headaches. Um, alternatively, we of headaches. Um, alternatively, we of headaches. Um, alternatively, we could do hashes, right? So, you hash an could do hashes, right? So, you hash an could do hashes, right? So, you hash an artifact, it produces a unique value. artifact, it produces a unique value. artifact, it produces a unique value. Uh, and that value is reproducible Uh, and that value is reproducible Uh, and that value is reproducible anytime anybody else hashes the thing. anytime anybody else hashes the thing. anytime anybody else hashes the thing. But that But that But that also requires that the thing that you're also requires that the thing that you're also requires that the thing that you're hashing is the same thing every time, hashing is the same thing every time, hashing is the same thing every time, right? So, uh, it requires right? So, uh, it requires right? So, uh, it requires reproducibility of those artifacts. And reproducibility of those artifacts. And reproducibility of those artifacts. And also, hashes similar to some serial also, hashes similar to some serial also, hashes similar to some serial numbers are kind of difficult to numbers are kind of difficult to numbers are kind of difficult to compare. Um, we could also consider compare. Um, we could also consider compare. Um, we could also consider URLs, right? If you host something on URLs, right? If you host something on URLs, right? If you host something on your website and that is is its your website and that is is its your website and that is is its identity, you could use the URL to just identity, you could use the URL to just identity, you could use the URL to just point to it and you know that is the point to it and you know that is the point to it and you know that is the thing. But URLs domains change. Um, and thing. But URLs domains change. Um, and thing. But URLs domains change. Um, and then there's really not really a then there's really not really a then there's really not really a standardized URL format for the identity standardized URL format for the identity standardized URL format for the identity attributes that we require. So if I call attributes that we require. So if I call attributes that we require. So if I call my package something something.txt and my package something something.txt and my package something something.txt and somebody calls it.xml, somebody calls it.xml, somebody calls it.xml, XML, you know, those are two different XML, you know, those are two different XML, you know, those are two different things. So, because we need something, things. So, because we need something, things. So, because we need something, there's standardized things that have there's standardized things that have there's standardized things that have been created by the industry been created by the industry been created by the industry um that solve this issue. The first one, um that solve this issue. The first one, um that solve this issue. The first one, probably the oldest one is called CPE. probably the oldest one is called CPE. probably the oldest one is called CPE. Um it was developed by NIST. I think Um it was developed by NIST. I think Um it was developed by NIST. I think it's around 20 years. I couldn't it's around 20 years. I couldn't it's around 20 years. I couldn't actually find like the first CPE 1.0 actually find like the first CPE 1.0 actually find like the first CPE 1.0 release anywhere. So I think like the release anywhere. So I think like the release anywhere. So I think like the the earliest signs of CPE emerge around the earliest signs of CPE emerge around the earliest signs of CPE emerge around the year the year the year 2007. Um and it's it's one of the oldest 2007. Um and it's it's one of the oldest 2007. Um and it's it's one of the oldest standards for trying to identify standards for trying to identify standards for trying to identify something. Initially it was mostly something. Initially it was mostly something. Initially it was mostly around identifying products. Um it has around identifying products. Um it has around identifying products. Um it has evolved to to its latest version 2.3 and evolved to to its latest version 2.3 and evolved to to its latest version 2.3 and it's used by NVD. It's uh now used quite it's used by NVD. It's uh now used quite it's used by NVD. It's uh now used quite heavily in the CV data set and it has heavily in the CV data set and it has heavily in the CV data set and it has support within the open source ecosystem support within the open source ecosystem support within the open source ecosystem in some tools. Um the newer contender in some tools. Um the newer contender in some tools. Um the newer contender here is Pearl which is a community-led here is Pearl which is a community-led here is Pearl which is a community-led uh standard uh although it's not really uh standard uh although it's not really uh standard uh although it's not really a standard I guess a initiative. Um it's a standard I guess a initiative. Um it's a standard I guess a initiative. Um it's pretty widely adopted in the open source pretty widely adopted in the open source pretty widely adopted in the open source uh uh uh ecosystem. The first specification was ecosystem. The first specification was ecosystem. The first specification was was published in 2017. Uh, I looked that was published in 2017. Uh, I looked that was published in 2017. Uh, I looked that up in git. So, maybe trusting the git up in git. So, maybe trusting the git up in git. So, maybe trusting the git log, I guess, for that one. Um, and then log, I guess, for that one. Um, and then log, I guess, for that one. Um, and then the other two that I'll just mention the other two that I'll just mention the other two that I'll just mention here, but we won't really cover them um here, but we won't really cover them um here, but we won't really cover them um in in today's talk are omnibore, which uh for the purposes of omnibore, which uh for the purposes of omnibore, which uh for the purposes of vulnerability management, I find it a vulnerability management, I find it a vulnerability management, I find it a little bit too complex. And this is not little bit too complex. And this is not little bit too complex. And this is not to knock on omnibore. It's a great to knock on omnibore. It's a great to knock on omnibore. It's a great concept, but identifying vulnerability concept, but identifying vulnerability concept, but identifying vulnerability metadata and pinning it to individual metadata and pinning it to individual metadata and pinning it to individual artifacts feels a little bit too fine artifacts feels a little bit too fine artifacts feels a little bit too fine grained. Um, but nevertheless, it exists grained. Um, but nevertheless, it exists grained. Um, but nevertheless, it exists and um I would love to see some use and um I would love to see some use and um I would love to see some use cases for it and to to prove it out. And cases for it and to to prove it out. And cases for it and to to prove it out. And then we have SWID, which uh is another then we have SWID, which uh is another then we have SWID, which uh is another NIS developed standard that I have not NIS developed standard that I have not NIS developed standard that I have not seen widely adopted really anywhere and seen widely adopted really anywhere and seen widely adopted really anywhere and even the documentation is hidden behind even the documentation is hidden behind even the documentation is hidden behind some ISO standards. So, we're just not some ISO standards. So, we're just not some ISO standards. So, we're just not going to talk about it. Um, so let's going to talk about it. Um, so let's going to talk about it. Um, so let's talk about Pearl first. Uh, Pearl stands talk about Pearl first. Uh, Pearl stands talk about Pearl first. Uh, Pearl stands for package URL and it's a standardized for package URL and it's a standardized for package URL and it's a standardized approach to identifying and locating approach to identifying and locating approach to identifying and locating software artifacts. So it's essentially software artifacts. So it's essentially software artifacts. So it's essentially a single identifier that consists of a single identifier that consists of a single identifier that consists of seven 1 2 3 4 5 6 seven different seven 1 2 3 4 5 6 seven different seven 1 2 3 4 5 6 seven different attributes that have specific meaning uh attributes that have specific meaning uh attributes that have specific meaning uh and specific values that give you enough and specific values that give you enough and specific values that give you enough attributes about the thing that you're attributes about the thing that you're attributes about the thing that you're trying to identify to be able to to trying to identify to be able to to trying to identify to be able to to identify it and locate it. It follows identify it and locate it. It follows identify it and locate it. It follows the URL uh syntax. So every pearl is the URL uh syntax. So every pearl is the URL uh syntax. So every pearl is actually a valid URL as well. This comes actually a valid URL as well. This comes actually a valid URL as well. This comes with a couple of downsides. Um, and here with a couple of downsides. Um, and here with a couple of downsides. Um, and here we can see some examples. So the first we can see some examples. So the first we can see some examples. So the first one is is the identity of a of a one is is the identity of a of a one is is the identity of a of a package, a Debian package that was package, a Debian package that was package, a Debian package that was created in the Debian namespace called created in the Debian namespace called created in the Debian namespace called curl. It has a version and then uh it curl. It has a version and then uh it curl. It has a version and then uh it has a couple of qualifiers that has a couple of qualifiers that has a couple of qualifiers that essentially give you extra data about essentially give you extra data about essentially give you extra data about that component. So this one says that it that component. So this one says that it that component. So this one says that it was specifically the package is built was specifically the package is built was specifically the package is built for the i386 architecture and it was for the i386 architecture and it was for the i386 architecture and it was shipped as part of the Jesse Debian um shipped as part of the Jesse Debian um shipped as part of the Jesse Debian um distribution. Another example is a distribution. Another example is a distribution. Another example is a Python package called Django. Um Pippi Python package called Django. Um Pippi Python package called Django. Um Pippi is one of the uh allowed Pearl types is one of the uh allowed Pearl types is one of the uh allowed Pearl types that essentially define where the that essentially define where the that essentially define where the package lives. So, Pippi is the Python package lives. So, Pippi is the Python package lives. So, Pippi is the Python package index and implicitly you would package index and implicitly you would package index and implicitly you would know at that that such a package would know at that that such a package would know at that that such a package would be treated with the within the scope of be treated with the within the scope of be treated with the within the scope of the Python package index. And the third the Python package index. And the third the Python package index. And the third one is yet another package type for one is yet another package type for one is yet another package type for Golang uh for go modules that identifies Golang uh for go modules that identifies Golang uh for go modules that identifies the the namespace the name of the the the namespace the name of the the the namespace the name of the component and then the subpath actually component and then the subpath actually component and then the subpath actually specifies it within to within a specific specifies it within to within a specific specifies it within to within a specific module within the gen proto package module within the gen proto package module within the gen proto package itself. So Pearl is is pretty widely itself. So Pearl is is pretty widely itself. So Pearl is is pretty widely adopted in a lot of tools. SIFT supports adopted in a lot of tools. SIFT supports adopted in a lot of tools. SIFT supports it which is an SCA solution. Guac, which it which is an SCA solution. Guac, which it which is an SCA solution. Guac, which is a which is a graph-based solution for is a which is a graph-based solution for is a which is a graph-based solution for for showing dependencies supports it. for showing dependencies supports it. for showing dependencies supports it. There's a variety of commercial There's a variety of commercial There's a variety of commercial solutions that also support parsing solutions that also support parsing solutions that also support parsing pearls out of sbombs and cesaf files. Uh pearls out of sbombs and cesaf files. Uh pearls out of sbombs and cesaf files. Uh and then a lot of the standards also are and then a lot of the standards also are and then a lot of the standards also are able to gro it. The cvv5 schema has a able to gro it. The cvv5 schema has a able to gro it. The cvv5 schema has a little asterisk in it and we'll talk little asterisk in it and we'll talk little asterisk in it and we'll talk about that later. about that later. about that later. Um, so when we talk about Pearl, I read Um, so when we talk about Pearl, I read Um, so when we talk about Pearl, I read this really nice analogy of how you can this really nice analogy of how you can this really nice analogy of how you can compare pearls to actual mailing compare pearls to actual mailing compare pearls to actual mailing addresses. And I think it's a pretty addresses. And I think it's a pretty addresses. And I think it's a pretty decent comparison. So a mailing address decent comparison. So a mailing address decent comparison. So a mailing address can be very specific. You can have, for can be very specific. You can have, for can be very specific. You can have, for example, an address uh that points to a example, an address uh that points to a example, an address uh that points to a specific street and a house number specific street and a house number specific street and a house number within a city. Uh, and that essentially within a city. Uh, and that essentially within a city. Uh, and that essentially identifies maybe a component within a identifies maybe a component within a identifies maybe a component within a particular uh ecosystem with its name particular uh ecosystem with its name particular uh ecosystem with its name and a version, right? Then you can go a and a version, right? Then you can go a and a version, right? Then you can go a little bit fi more fine grained and you little bit fi more fine grained and you little bit fi more fine grained and you can identify a specific file name just can identify a specific file name just can identify a specific file name just like you would identify somebody who you like you would identify somebody who you like you would identify somebody who you want to mail a letter to. And then for want to mail a letter to. And then for want to mail a letter to. And then for things that um are not well defined. So things that um are not well defined. So things that um are not well defined. So somebody who lives in a very remote somebody who lives in a very remote somebody who lives in a very remote area, they won't have a really full area, they won't have a really full area, they won't have a really full mailing address. They may just live in mailing address. They may just live in mailing address. They may just live in some village one two three, right? So some village one two three, right? So some village one two three, right? So for those we we can always revert back for those we we can always revert back for those we we can always revert back to some like generic to some like generic to some like generic um identifiers and point to the place um identifiers and point to the place um identifiers and point to the place where you can download the thing and where you can download the thing and where you can download the thing and then absolute worst case you can you then absolute worst case you can you then absolute worst case you can you know you can create an identifier that know you can create an identifier that know you can create an identifier that just has a check sum uh that tells you just has a check sum uh that tells you just has a check sum uh that tells you like this is it this is all I know about like this is it this is all I know about like this is it this is all I know about the thing and and it's a fully well the thing and and it's a fully well the thing and and it's a fully well ststructured ststructured ststructured identifier. Um let's talk about some of identifier. Um let's talk about some of identifier. Um let's talk about some of the downsides of Pearl. This is just an the downsides of Pearl. This is just an the downsides of Pearl. This is just an example one, but as you may have noticed example one, but as you may have noticed example one, but as you may have noticed already, uh, Pearl is mostly based already, uh, Pearl is mostly based already, uh, Pearl is mostly based around identifying packages within around identifying packages within around identifying packages within specific ecosystems. Um, and because specific ecosystems. Um, and because specific ecosystems. Um, and because those are packaged types of software, those are packaged types of software, those are packaged types of software, it's less uh it requires that the it's less uh it requires that the it's less uh it requires that the package is actually defined under a package is actually defined under a package is actually defined under a specific type within the Pearl specific type within the Pearl specific type within the Pearl specification. Um, adding new types is specification. Um, adding new types is specification. Um, adding new types is relatively easy. relatively easy. relatively easy. um but comes with some downsides of um but comes with some downsides of um but comes with some downsides of having some types you know being having some types you know being having some types you know being deprecated and new ones added is a deprecated and new ones added is a deprecated and new ones added is a little bit painful. Um then because little bit painful. Um then because little bit painful. Um then because every pearl is also a valid URL all of every pearl is also a valid URL all of every pearl is also a valid URL all of the contents of the pearl have to be uh the contents of the pearl have to be uh the contents of the pearl have to be uh encoded. So if you have any values, for encoded. So if you have any values, for encoded. So if you have any values, for example, in in this one, I purposefully example, in in this one, I purposefully example, in in this one, I purposefully didn't encode it, but the the colon in didn't encode it, but the the colon in didn't encode it, but the the colon in here technically should be percent here technically should be percent here technically should be percent encoded because otherwise this would be encoded because otherwise this would be encoded because otherwise this would be treated in a different way as a treated in a different way as a treated in a different way as a URL. And the character encoding makes URL. And the character encoding makes URL. And the character encoding makes the pearls not look great. I have some the pearls not look great. I have some the pearls not look great. I have some examples later. uh and it's also a pain examples later. uh and it's also a pain examples later. uh and it's also a pain point for for the people who write the point for for the people who write the point for for the people who write the tools that parse and generate these uh tools that parse and generate these uh tools that parse and generate these uh these strings to do it consistently these strings to do it consistently these strings to do it consistently every every every time. And then because this is a pretty time. And then because this is a pretty time. And then because this is a pretty pretty new standard um there's quite a pretty new standard um there's quite a pretty new standard um there's quite a quite a bit of um undefined behavior quite a bit of um undefined behavior quite a bit of um undefined behavior within the within the within the specification. For example, the specification. For example, the specification. For example, the architecture values and the distribution architecture values and the distribution architecture values and the distribution values are not really defined. the the values are not really defined. the the values are not really defined. the the qualifiers for them are recommended, but qualifiers for them are recommended, but qualifiers for them are recommended, but it's not clear what the values of those it's not clear what the values of those it's not clear what the values of those qualifiers should be. Um, and anytime qualifiers should be. Um, and anytime qualifiers should be. Um, and anytime you leave something open for you leave something open for you leave something open for interpretation, people put random crap interpretation, people put random crap interpretation, people put random crap in there and and then looks bad. Um, the in there and and then looks bad. Um, the in there and and then looks bad. Um, the namespace values, same story. namespace values, same story. namespace values, same story. Um, I've I've seen both of these, for Um, I've I've seen both of these, for Um, I've I've seen both of these, for example, used and they essentially mean example, used and they essentially mean example, used and they essentially mean the same thing, but there is no the same thing, but there is no the same thing, but there is no standardization that says what is a standardization that says what is a standardization that says what is a namespace and how should you use it. namespace and how should you use it. namespace and how should you use it. Um, similarly all of the different Um, similarly all of the different Um, similarly all of the different package types have their own rules about package types have their own rules about package types have their own rules about each of the different each of the different each of the different fields and some of fields and some of fields and some of them some of them are a little bit them some of them are a little bit them some of them are a little bit duplicative of each other. For example, duplicative of each other. For example, duplicative of each other. For example, the Debian package uh tells you to use the Debian package uh tells you to use the Debian package uh tells you to use the epoch which is a part of the version the epoch which is a part of the version the epoch which is a part of the version string um directly in the version field. string um directly in the version field. string um directly in the version field. Whereas for RPMs, which is just another Whereas for RPMs, which is just another Whereas for RPMs, which is just another type of package for another Linux type of package for another Linux type of package for another Linux distribution, the epoch is its own distribution, the epoch is its own distribution, the epoch is its own qualifier. So it would say epoch equals qualifier. So it would say epoch equals qualifier. So it would say epoch equals 1, for example, which is a little bit 1, for example, which is a little bit 1, for example, which is a little bit inconsistent. So there's a lot of grunt inconsistent. So there's a lot of grunt inconsistent. So there's a lot of grunt work that still needs to happen in the work that still needs to happen in the work that still needs to happen in the pro specification to make it like fully pro specification to make it like fully pro specification to make it like fully featured. Um, but we'll get featured. Um, but we'll get featured. Um, but we'll get there. And then I already mentioned the there. And then I already mentioned the there. And then I already mentioned the the the difficulty about adding new the the difficulty about adding new the the difficulty about adding new package types. uh it comes with a lot of package types. uh it comes with a lot of package types. uh it comes with a lot of heated discussions in the in the heated discussions in the in the heated discussions in the in the repository repository repository often. Um so so far we've looked at how often. Um so so far we've looked at how often. Um so so far we've looked at how to identify a specific component within to identify a specific component within to identify a specific component within a specific version. Um but there's often a specific version. Um but there's often a specific version. Um but there's often a need to specify version ranges. So a need to specify version ranges. So a need to specify version ranges. So specifically for CVEes, we always care specifically for CVEes, we always care specifically for CVEes, we always care about pinpointing vulnerable versions. about pinpointing vulnerable versions. about pinpointing vulnerable versions. You know, something is introduced in You know, something is introduced in You know, something is introduced in version one, fixed in version three, and version one, fixed in version three, and version one, fixed in version three, and version four and later are not affected. version four and later are not affected. version four and later are not affected. So, Pearl has its own substandard or So, Pearl has its own substandard or So, Pearl has its own substandard or subspecification within it called subspecification within it called subspecification within it called version range specifier verse that has a version range specifier verse that has a version range specifier verse that has a pretty minimal way to to uh define pretty minimal way to to uh define pretty minimal way to to uh define version ranges as either just a list version ranges as either just a list version ranges as either just a list or version ranges that start and end at or version ranges that start and end at or version ranges that start and end at a certain version number. Each version a certain version number. Each version a certain version number. Each version specifier also tells you how you should specifier also tells you how you should specifier also tells you how you should be able to compare the individual be able to compare the individual be able to compare the individual versions. So for example, Python versions. So for example, Python versions. So for example, Python packages have a very specific way of how packages have a very specific way of how packages have a very specific way of how to compare these versions. But since you to compare these versions. But since you to compare these versions. But since you know that because of the string that is know that because of the string that is know that because of the string that is used here, you know how to compare used here, you know how to compare used here, you know how to compare these, these, these, right? Um because we have many many right? Um because we have many many right? Um because we have many many naming schemes and they all get compared naming schemes and they all get compared naming schemes and they all get compared in weird ways. in weird ways. in weird ways. Um, and if you marry these two together, Um, and if you marry these two together, Um, and if you marry these two together, um, the verse specifier essentially um, the verse specifier essentially um, the verse specifier essentially gets, uh, put into the pearl as its own gets, uh, put into the pearl as its own gets, uh, put into the pearl as its own qualifier. So you can still identify the qualifier. So you can still identify the qualifier. So you can still identify the package itself and then you identify its package itself and then you identify its package itself and then you identify its version ranges within a specific version ranges within a specific version ranges within a specific qualifier. And here you can see that qualifier. And here you can see that qualifier. And here you can see that this is the uh, the unencoded version of this is the uh, the unencoded version of this is the uh, the unencoded version of the Pearl and this is the encoded one. the Pearl and this is the encoded one. the Pearl and this is the encoded one. This is what it actually should be when This is what it actually should be when This is what it actually should be when it's stored in data. But for humans, it's stored in data. But for humans, it's stored in data. But for humans, this is a lot less readable than this this is a lot less readable than this this is a lot less readable than this obviously. But that's, you know, that's obviously. But that's, you know, that's obviously. But that's, you know, that's a UI problem, not a data problem. So a a UI problem, not a data problem. So a a UI problem, not a data problem. So a human, if they need to see a pearl, it human, if they need to see a pearl, it human, if they need to see a pearl, it could be decoded like this or presented could be decoded like this or presented could be decoded like this or presented as separate fields. But in the database, as separate fields. But in the database, as separate fields. But in the database, when you're storing this data, it should when you're storing this data, it should when you're storing this data, it should always be always be always be encoded. All right, let's check at let's encoded. All right, let's check at let's encoded. All right, let's check at let's take a look at the second contender. But take a look at the second contender. But take a look at the second contender. But before I continue, has anybody used before I continue, has anybody used before I continue, has anybody used pearls before? Excellent. A lot of people. All before? Excellent. A lot of people. All before? Excellent. A lot of people. All right. So, let's take a look at right. So, let's take a look at right. So, let's take a look at CPEs. CPEs, much like pearls, are used CPEs. CPEs, much like pearls, are used CPEs. CPEs, much like pearls, are used for identifying things like IT systems, for identifying things like IT systems, for identifying things like IT systems, software, packages. Uh, it's a software, packages. Uh, it's a software, packages. Uh, it's a pretty widely open schema. It allows for pretty widely open schema. It allows for pretty widely open schema. It allows for identifying really anything as long as identifying really anything as long as identifying really anything as long as it fits into one of these specific it fits into one of these specific it fits into one of these specific attributes. So the version 2.2 uh had attributes. So the version 2.2 uh had attributes. So the version 2.2 uh had less of them. Version 2.2 has more of less of them. Version 2.2 has more of less of them. Version 2.2 has more of them. Uh both required certain elements them. Uh both required certain elements them. Uh both required certain elements uh as mandatory to have like a minimal uh as mandatory to have like a minimal uh as mandatory to have like a minimal set. Um the spaces around are just so set. Um the spaces around are just so set. Um the spaces around are just so that we can read this better. But a full that we can read this better. But a full that we can read this better. But a full CPE has them CPE has them CPE has them removed. But there's really not really removed. But there's really not really removed. But there's really not really any guidance on how you should be using any guidance on how you should be using any guidance on how you should be using the individual fields. There's there's the individual fields. There's there's the individual fields. There's there's guidance into what the values mean, but guidance into what the values mean, but guidance into what the values mean, but not really guidance about what you not really guidance about what you not really guidance about what you should put in there. So, these are some should put in there. So, these are some should put in there. So, these are some examples of valid CPEs from the CVE data examples of valid CPEs from the CVE data examples of valid CPEs from the CVE data set. Um, here we can see that the set. Um, here we can see that the set. Um, here we can see that the uh the first one identifies OpenSSL in uh the first one identifies OpenSSL in uh the first one identifies OpenSSL in its version doesn't really use any of its version doesn't really use any of its version doesn't really use any of the previous attributes. Um, I think the the previous attributes. Um, I think the the previous attributes. Um, I think the last one is target hardware, right? So last one is target hardware, right? So last one is target hardware, right? So this is probably the architecture that this is probably the architecture that this is probably the architecture that Windows uh server is running on that we Windows uh server is running on that we Windows uh server is running on that we want to make specific for this want to make specific for this want to make specific for this particular identity. And then GitLab particular identity. And then GitLab particular identity. And then GitLab Enterprise is a software addition Enterprise is a software addition Enterprise is a software addition probably. Um so it allows you to probably. Um so it allows you to probably. Um so it allows you to pinpoint a more specific variant of the pinpoint a more specific variant of the pinpoint a more specific variant of the thing that you're identifying. thing that you're identifying. thing that you're identifying. um it doesn't do of course the job of um it doesn't do of course the job of um it doesn't do of course the job of locating um the the artifact only locating um the the artifact only locating um the the artifact only creating its identity. So this is not creating its identity. So this is not creating its identity. So this is not like pearl uh where you can use a pearl like pearl uh where you can use a pearl like pearl uh where you can use a pearl to technically also download the package to technically also download the package to technically also download the package if you're given its pearl if you're given its pearl if you're given its pearl identity. These are nice examples. These identity. These are nice examples. These identity. These are nice examples. These are less nice and these are actually are less nice and these are actually are less nice and these are actually from the CV data set that somebody from the CV data set that somebody from the CV data set that somebody created. Um, not sure who, but uh, I'm created. Um, not sure who, but uh, I'm created. Um, not sure who, but uh, I'm sure they have their own use cases and sure they have their own use cases and sure they have their own use cases and they're probably valid, but I found them they're probably valid, but I found them they're probably valid, but I found them funny. The first one, I would argue that funny. The first one, I would argue that funny. The first one, I would argue that something went wrong there something went wrong there something went wrong there probably. Um, so some downsides for probably. Um, so some downsides for probably. Um, so some downsides for CPEs. CPEs. CPEs. Um, CPEs, I'll start from the bottom. Um, CPEs, I'll start from the bottom. Um, CPEs, I'll start from the bottom. CPEs are technically supposed to be used CPEs are technically supposed to be used CPEs are technically supposed to be used as as part of this central data set that as as part of this central data set that as as part of this central data set that is maintained as the CP dictionary by is maintained as the CP dictionary by is maintained as the CP dictionary by NIST but in reality I think everybody NIST but in reality I think everybody NIST but in reality I think everybody just minced their own CPS as we can tell just minced their own CPS as we can tell just minced their own CPS as we can tell over here right um and those just make over here right um and those just make over here right um and those just make it into the dictionary without much it into the dictionary without much it into the dictionary without much review right so if I decide I want to review right so if I decide I want to review right so if I decide I want to create my own CPE I put it in the CV create my own CPE I put it in the CV create my own CPE I put it in the CV record and it's collecting into the record and it's collecting into the record and it's collecting into the central CPE dictionary and then it's the central CPE dictionary and then it's the central CPE dictionary and then it's the source of truth source of truth source of truth I don't know that there is any review I don't know that there is any review I don't know that there is any review mechanism that tries to resolve issues mechanism that tries to resolve issues mechanism that tries to resolve issues like the one we see here where we have like the one we see here where we have like the one we see here where we have multiple CPEs that essentially identify multiple CPEs that essentially identify multiple CPEs that essentially identify the same thing but they are all over the the same thing but they are all over the the same thing but they are all over the place. place. place. Um and then I would say that CPEs are Um and then I would say that CPEs are Um and then I would say that CPEs are not as widely adopted in in the tools not as widely adopted in in the tools not as widely adopted in in the tools that exist in the open source ecosystem that exist in the open source ecosystem that exist in the open source ecosystem um for specifically generating and um for specifically generating and um for specifically generating and handling handling handling uh the the identity strengths. Um uh the the identity strengths. Um uh the the identity strengths. Um definitely much less than Pearl. Pearl definitely much less than Pearl. Pearl definitely much less than Pearl. Pearl has a lot of libraries that that are has a lot of libraries that that are has a lot of libraries that that are able in variety of languages that are able in variety of languages that are able in variety of languages that are able to generate it, process it and able to generate it, process it and able to generate it, process it and store it in database whereas I haven't store it in database whereas I haven't store it in database whereas I haven't seen as much of that for CPE. CPE. CPE. Um again with pearls pearls identify a Um again with pearls pearls identify a Um again with pearls pearls identify a single component and then there's the single component and then there's the single component and then there's the verse specifier to identify version verse specifier to identify version verse specifier to identify version ranges. CPEs kind of have the same ranges. CPEs kind of have the same ranges. CPEs kind of have the same thing. CPEs allow you to identify a thing. CPEs allow you to identify a thing. CPEs allow you to identify a specific version, but there's these uh specific version, but there's these uh specific version, but there's these uh special statements that are were special statements that are were special statements that are were originally added uh into the CV records originally added uh into the CV records originally added uh into the CV records by NIST that allow you to specify ranges by NIST that allow you to specify ranges by NIST that allow you to specify ranges of of uh versions the in the NIST data of of uh versions the in the NIST data of of uh versions the in the NIST data set. they were called CP set. they were called CP set. they were called CP configurations and they actually I feel configurations and they actually I feel configurations and they actually I feel like they try to replicate a little bit like they try to replicate a little bit like they try to replicate a little bit more more more uh the composition of the software. So uh the composition of the software. So uh the composition of the software. So they allow you to specify a component they allow you to specify a component they allow you to specify a component and then its dependencies. So for and then its dependencies. So for and then its dependencies. So for example, if you're uh trying to identify example, if you're uh trying to identify example, if you're uh trying to identify a component and make a specific that it a component and make a specific that it a component and make a specific that it runs on the Linux kernel one two three runs on the Linux kernel one two three runs on the Linux kernel one two three then you can express that in a very then you can express that in a very then you can express that in a very specific CPE configuration. specific CPE configuration. specific CPE configuration. Um, I feel like that a little bit Um, I feel like that a little bit Um, I feel like that a little bit replicates what Sbombs do, but oh well. replicates what Sbombs do, but oh well. replicates what Sbombs do, but oh well. Um, anyway, the CP applicability Um, anyway, the CP applicability Um, anyway, the CP applicability statements allow you to define ranges, statements allow you to define ranges, statements allow you to define ranges, mark them as vulnerable or not mark them as vulnerable or not mark them as vulnerable or not vulnerable. I think there was a vulnerable. I think there was a vulnerable. I think there was a presentation yesterday on this topic. presentation yesterday on this topic. presentation yesterday on this topic. Uh, so if you missed that one, I would Uh, so if you missed that one, I would Uh, so if you missed that one, I would uh I recommend watching it. And then uh uh I recommend watching it. And then uh uh I recommend watching it. And then uh the CV program recently published a the CV program recently published a the CV program recently published a quick start guide on how to use the CP quick start guide on how to use the CP quick start guide on how to use the CP applicability applicability applicability statements, but we'll see some examples statements, but we'll see some examples statements, but we'll see some examples of them shortly. Um and I also mentioned of them shortly. Um and I also mentioned of them shortly. Um and I also mentioned this that the two formats obviously this that the two formats obviously this that the two formats obviously they're not really transferable to each they're not really transferable to each they're not really transferable to each other, but there is some sort of an other, but there is some sort of an other, but there is some sort of an effort to convert pearls into CPEs and effort to convert pearls into CPEs and effort to convert pearls into CPEs and vice versa. uh there's a data set that vice versa. uh there's a data set that vice versa. uh there's a data set that tries to publish this data for any found tries to publish this data for any found tries to publish this data for any found pearl in the wild or any found CPE. Uh pearl in the wild or any found CPE. Uh pearl in the wild or any found CPE. Uh the open the data set is open but I'm the open the data set is open but I'm the open the data set is open but I'm not sure how it is created. So if not sure how it is created. So if not sure how it is created. So if somebody from scan oss is here maybe somebody from scan oss is here maybe somebody from scan oss is here maybe they could enlighten us. Um anyway so they could enlighten us. Um anyway so they could enlighten us. Um anyway so let's talk about what these software let's talk about what these software let's talk about what these software identity uh schemes look like in in identity uh schemes look like in in identity uh schemes look like in in practice. Where are they actually used? practice. Where are they actually used? practice. Where are they actually used? Right. Uh the first place is obviously Right. Uh the first place is obviously Right. Uh the first place is obviously CV records. CV records have their own CV records. CV records have their own CV records. CV records have their own affected object which identifies affected object which identifies affected object which identifies something and then identifies the something and then identifies the something and then identifies the version uh that is vulnerable to a CVE. version uh that is vulnerable to a CVE. version uh that is vulnerable to a CVE. Uh and recently the CP applicability Uh and recently the CP applicability Uh and recently the CP applicability statements were added as a supported way statements were added as a supported way statements were added as a supported way to identify software within the CV to identify software within the CV to identify software within the CV record. Um, some of it to me try is record. Um, some of it to me try is record. Um, some of it to me try is replicating the pearl and verse um, way replicating the pearl and verse um, way replicating the pearl and verse um, way of identifying this, but that's okay. CV of identifying this, but that's okay. CV of identifying this, but that's okay. CV records could support any number of CV records could support any number of CV records could support any number of CV any number of uh, ways to identify any number of uh, ways to identify any number of uh, ways to identify things as long as they're kind of things as long as they're kind of things as long as they're kind of interoperable between each interoperable between each interoperable between each other. Um, if you look at the data set, other. Um, if you look at the data set, other. Um, if you look at the data set, um, CP applicability statements are um, CP applicability statements are um, CP applicability statements are really only used by Microsoft and MITER really only used by Microsoft and MITER really only used by Microsoft and MITER today. I haven't really seen any other today. I haven't really seen any other today. I haven't really seen any other uh CNAs use them. Um and then Pearl on uh CNAs use them. Um and then Pearl on uh CNAs use them. Um and then Pearl on the other hand is not really used at all the other hand is not really used at all the other hand is not really used at all within the CV record data set and that's within the CV record data set and that's within the CV record data set and that's mostly because the Pearl usage within CV mostly because the Pearl usage within CV mostly because the Pearl usage within CV records is not well defined. There is records is not well defined. There is records is not well defined. There is support for it. You can put a pearl into support for it. You can put a pearl into support for it. You can put a pearl into any field that is supposed to give you any field that is supposed to give you any field that is supposed to give you information about a version, but that's information about a version, but that's information about a version, but that's not proper pearl support as other not proper pearl support as other not proper pearl support as other specifications uh usually have it. Um so specifications uh usually have it. Um so specifications uh usually have it. Um so this is what an affected object looks this is what an affected object looks this is what an affected object looks like in a in a CVA record. Um this uses like in a in a CVA record. Um this uses like in a in a CVA record. Um this uses the old way of specifying an array of the old way of specifying an array of the old way of specifying an array of CPEs uh which was found to be not CPEs uh which was found to be not CPEs uh which was found to be not sufficient enough and that's why the CPE sufficient enough and that's why the CPE sufficient enough and that's why the CPE applicability statement was added and applicability statement was added and applicability statement was added and the affected object essentially allows the affected object essentially allows the affected object essentially allows you to define ranges of versions and you to define ranges of versions and you to define ranges of versions and then uh for each version range you can then uh for each version range you can then uh for each version range you can tell uh what is affected what isn't tell uh what is affected what isn't tell uh what is affected what isn't affected um and then the vendor and affected um and then the vendor and affected um and then the vendor and product product product values are not really defined well and values are not really defined well and values are not really defined well and not standardized. So they're mostly up not standardized. So they're mostly up not standardized. So they're mostly up to the CNA to to the CNA to to the CNA to provide. Question for the audience. Do provide. Question for the audience. Do provide. Question for the audience. Do you see any mistakes in how these you see any mistakes in how these you see any mistakes in how these versions are are specified here? This versions are are specified here? This versions are are specified here? This was I think taken from one of CISA's uh was I think taken from one of CISA's uh was I think taken from one of CISA's uh enriched enriched enriched records for this particular records for this particular records for this particular vulnerability. less than what? Mhm. Yeah. Um the issue here is first of all Yeah. Um the issue here is first of all Yeah. Um the issue here is first of all the version type should just be semantic the version type should just be semantic the version type should just be semantic versioning. Django uses semantic versioning. Django uses semantic versioning. Django uses semantic versioning and this is not a valid versioning and this is not a valid versioning and this is not a valid version. It should be version. It should be version. It should be 510, right? Because there is no such 510, right? Because there is no such 510, right? Because there is no such thing as 51. So that's that's a f first thing as 51. So that's that's a f first thing as 51. So that's that's a f first like nitpick. Um, and then for the like nitpick. Um, and then for the like nitpick. Um, and then for the version range that starts with 510 and version range that starts with 510 and version range that starts with 510 and goes all the way up to 514, we're goes all the way up to 514, we're goes all the way up to 514, we're defining that that is the affected defining that that is the affected defining that that is the affected range. So the vulnerability affects range. So the vulnerability affects range. So the vulnerability affects anything from 510 to anything from 510 to anything from 510 to 514. And that's all the information we 514. And that's all the information we 514. And that's all the information we have for that range. And then we have have for that range. And then we have have for that range. And then we have two other objects that essentially give two other objects that essentially give two other objects that essentially give us the same information but for us the same information but for us the same information but for different version ranges. So we know different version ranges. So we know different version ranges. So we know what's affected. Well, what about the what's affected. Well, what about the what's affected. Well, what about the rest? Unknown. rest? Unknown. rest? Unknown. So technically we have the information So technically we have the information So technically we have the information in here that 514 is the last in here that 514 is the last in here that 514 is the last uh uh uh version or technically it's the it's the version or technically it's the it's the version or technically it's the it's the version that is fixed but nowhere is it version that is fixed but nowhere is it version that is fixed but nowhere is it explicitly explicitly explicitly stated. So these are just minor details stated. So these are just minor details stated. So these are just minor details of of why it matters to have this data of of why it matters to have this data of of why it matters to have this data to be accurate because if you write a to be accurate because if you write a to be accurate because if you write a program that parses this data and makes program that parses this data and makes program that parses this data and makes determinations of are you affected or determinations of are you affected or determinations of are you affected or not parsing this is not going to tell not parsing this is not going to tell not parsing this is not going to tell the program much. All right, it's just the program much. All right, it's just the program much. All right, it's just going to identify what is affected but going to identify what is affected but going to identify what is affected but then it's not going to tell you what is then it's not going to tell you what is then it's not going to tell you what is not affected unless you make assumptions not affected unless you make assumptions not affected unless you make assumptions which we don't want to do. which we don't want to do. which we don't want to do. Um, this is one of the few usages of Um, this is one of the few usages of Um, this is one of the few usages of Pearl within this within the CV data Pearl within this within the CV data Pearl within this within the CV data set. So, in the version specific fields, set. So, in the version specific fields, set. So, in the version specific fields, you can actually put a Pearl in here. you can actually put a Pearl in here. you can actually put a Pearl in here. Um, but I think there's less than 10 Um, but I think there's less than 10 Um, but I think there's less than 10 records that do this and it's not it's records that do this and it's not it's records that do this and it's not it's not documented well. So, I think we need not documented well. So, I think we need not documented well. So, I think we need better support for Pearl within the CV better support for Pearl within the CV better support for Pearl within the CV record. I think there's an outstanding record. I think there's an outstanding record. I think there's an outstanding issue in the CV schema. It just needs to issue in the CV schema. It just needs to issue in the CV schema. It just needs to be actually worked on. be actually worked on. be actually worked on. Um, and these this is an example of the Um, and these this is an example of the Um, and these this is an example of the CP applicability statement that was CP applicability statement that was CP applicability statement that was recently recently recently added to to the CV schema that allows added to to the CV schema that allows added to to the CV schema that allows you to essentially identify something you to essentially identify something you to essentially identify something and then identify the the version ranges and then identify the the version ranges and then identify the the version ranges uh that something is applicable to. uh that something is applicable to. uh that something is applicable to. Right? So in this this one this is a Right? So in this this one this is a Right? So in this this one this is a very easy one because it's just one very easy one because it's just one very easy one because it's just one statement that says anything uh that statement that says anything uh that statement that says anything uh that starts with this version and ends with starts with this version and ends with starts with this version and ends with this version excluding that version is this version excluding that version is this version excluding that version is uh vulnerable. Um I also looked at what is vulnerable. Um I also looked at what is vulnerable. Um I also looked at what is the most used CPE and in all of the CV the most used CPE and in all of the CV the most used CPE and in all of the CV records and this is a top 10 list. Uh so um I'm not sure what this is actually um I'm not sure what this is actually um I'm not sure what this is actually useful for, but it's interesting to see useful for, but it's interesting to see useful for, but it's interesting to see that Qualcomm is is a very heavy user of that Qualcomm is is a very heavy user of that Qualcomm is is a very heavy user of of very consistent CPEs and apparently of very consistent CPEs and apparently of very consistent CPEs and apparently there's a lot of CVs in their framark. there's a lot of CVs in their framark. there's a lot of CVs in their framark. Um and the Linux kernel, that's that's a Um and the Linux kernel, that's that's a Um and the Linux kernel, that's that's a big one. big one. big one. Um let's take another look uh let's take Um let's take another look uh let's take Um let's take another look uh let's take a look at another data set where where a look at another data set where where a look at another data set where where software identity can be found which is software identity can be found which is software identity can be found which is OSV. Uh OSV is another database of OSV. Uh OSV is another database of OSV. Uh OSV is another database of vulnerabilities. It's it's actually an vulnerabilities. It's it's actually an vulnerabilities. It's it's actually an aggregator. Uh so vulnerabilities are aggregator. Uh so vulnerabilities are aggregator. Uh so vulnerabilities are aggregated from different sources into aggregated from different sources into aggregated from different sources into OSV. They're parsed and they're kind of OSV. They're parsed and they're kind of OSV. They're parsed and they're kind of uh made into one cohesive data set. OSV uh made into one cohesive data set. OSV uh made into one cohesive data set. OSV the OSV schema gives you a way to the OSV schema gives you a way to the OSV schema gives you a way to represent vulnerable ranges as well. It represent vulnerable ranges as well. It represent vulnerable ranges as well. It has its own affected object that defines has its own affected object that defines has its own affected object that defines the identity of the package that you're the identity of the package that you're the identity of the package that you're uh that is affected. Uh and then it does uh that is affected. Uh and then it does uh that is affected. Uh and then it does support pearl. It has it has uh an support pearl. It has it has uh an support pearl. It has it has uh an optional attribute for specifying the optional attribute for specifying the optional attribute for specifying the pearl uh of a given component. The data pearl uh of a given component. The data pearl uh of a given component. The data in OSV is of relatively good quality in OSV is of relatively good quality in OSV is of relatively good quality because it's programmatically created, because it's programmatically created, because it's programmatically created, right? So it's hoovered up from various right? So it's hoovered up from various right? So it's hoovered up from various other sources and it's processed and other sources and it's processed and other sources and it's processed and there's there's there's uh some smart ways to to make it a uh some smart ways to to make it a uh some smart ways to to make it a cohesive data set with uh with uh proper cohesive data set with uh with uh proper cohesive data set with uh with uh proper version numbers. Right? So this is an version numbers. Right? So this is an version numbers. Right? So this is an example of a of a go module uh and its example of a of a go module uh and its example of a of a go module uh and its version ranges. Um it's you know very version ranges. Um it's you know very version ranges. Um it's you know very similar to what we've seen with the similar to what we've seen with the similar to what we've seen with the other ways to specify ranges. other ways to specify ranges. other ways to specify ranges. Essentially, you're always trying to Essentially, you're always trying to Essentially, you're always trying to pinpoint the version that introduced pinpoint the version that introduced pinpoint the version that introduced something and a version that fixed something and a version that fixed something and a version that fixed something and that defines uh you know something and that defines uh you know something and that defines uh you know any anything in between as any anything in between as any anything in between as well. Here we can see the optional pearl well. Here we can see the optional pearl well. Here we can see the optional pearl attribute that allows you to use a pearl attribute that allows you to use a pearl attribute that allows you to use a pearl for the for the name of the component. for the for the name of the component. for the for the name of the component. Right? So this is not going to contain Right? So this is not going to contain Right? So this is not going to contain the version because obviously you want the version because obviously you want the version because obviously you want to use the ranges uh to to give you the to use the ranges uh to to give you the to use the ranges uh to to give you the information about the about the version information about the about the version information about the about the version ranges instead of pinpointing one ranges instead of pinpointing one ranges instead of pinpointing one specific version in the pearl specific version in the pearl specific version in the pearl itself. Um I'll just quickly mention how itself. Um I'll just quickly mention how itself. Um I'll just quickly mention how Red Hat is approaching software Red Hat is approaching software Red Hat is approaching software identification. Uh, in the old days it identification. Uh, in the old days it identification. Uh, in the old days it used to be really easy because Redhead used to be really easy because Redhead used to be really easy because Redhead was primarily a Linux distribution was primarily a Linux distribution was primarily a Linux distribution company and Linux our Linux DRO shipped company and Linux our Linux DRO shipped company and Linux our Linux DRO shipped RPMs and RPMs are really easy to RPMs and RPMs are really easy to RPMs and RPMs are really easy to identify because they have a naming identify because they have a naming identify because they have a naming scheme called Nera name epoch version scheme called Nera name epoch version scheme called Nera name epoch version release architecture and that gives you release architecture and that gives you release architecture and that gives you essentially all the information you need essentially all the information you need essentially all the information you need about a particular RPM. Nowaday things about a particular RPM. Nowaday things about a particular RPM. Nowaday things are a little bit more complicated. Red are a little bit more complicated. Red are a little bit more complicated. Red Hat has about 200 plus products uh from Hat has about 200 plus products uh from Hat has about 200 plus products uh from all sorts of language ecosystems, all all sorts of language ecosystems, all all sorts of language ecosystems, all sorts of packaging mechanisms, container sorts of packaging mechanisms, container sorts of packaging mechanisms, container images, RPMs, RPM modules. And so things images, RPMs, RPM modules. And so things images, RPMs, RPM modules. And so things get a little bit more complicated. This get a little bit more complicated. This get a little bit more complicated. This is when we need to start thinking about is when we need to start thinking about is when we need to start thinking about how to how do we differentiate between a how to how do we differentiate between a how to how do we differentiate between a lot of these components. So you can have lot of these components. So you can have lot of these components. So you can have a Python package that has the same name a Python package that has the same name a Python package that has the same name as an RPM module. We need to be able to as an RPM module. We need to be able to as an RPM module. We need to be able to tell them tell them tell them apart. Um we do use CPE, but we use it apart. Um we do use CPE, but we use it apart. Um we do use CPE, but we use it kind of in a weird way. We only use it kind of in a weird way. We only use it kind of in a weird way. We only use it for identifying specific products. So we for identifying specific products. So we for identifying specific products. So we use it as a product identifier, not a use it as a product identifier, not a use it as a product identifier, not a component identifier. Uh we have all component identifier. Uh we have all component identifier. Uh we have all CPEs um in a single data set that is CPEs um in a single data set that is CPEs um in a single data set that is centrally maintained. Um and we issue centrally maintained. Um and we issue centrally maintained. Um and we issue CPEs per product CPEs per product CPEs per product release. Um and then we use pearls for release. Um and then we use pearls for release. Um and then we use pearls for for components. So to identify a for components. So to identify a for components. So to identify a specific component that is shipped specific component that is shipped specific component that is shipped within a product uh we generate a pearl within a product uh we generate a pearl within a product uh we generate a pearl uh we always namespace it to Red Hat to uh we always namespace it to Red Hat to uh we always namespace it to Red Hat to identify that it was built by Red Hat identify that it was built by Red Hat identify that it was built by Red Hat and and and then and then we pinpoint some then and then we pinpoint some then and then we pinpoint some additional attributes to make uh additional attributes to make uh additional attributes to make uh identifying that component easier in all identifying that component easier in all identifying that component easier in all of our um all of our security data of our um all of our security data of our um all of our security data essentially. Um and then because Pearl essentially. Um and then because Pearl essentially. Um and then because Pearl is a little bit ambiguous when it comes is a little bit ambiguous when it comes is a little bit ambiguous when it comes to the values of certain fields, uh we to the values of certain fields, uh we to the values of certain fields, uh we actually publish a set of guidelines actually publish a set of guidelines actually publish a set of guidelines that detail this is how we use Pearl. that detail this is how we use Pearl. that detail this is how we use Pearl. You know, this is if you see this in a You know, this is if you see this in a You know, this is if you see this in a pearl, it means this. If you see this pearl, it means this. If you see this pearl, it means this. If you see this type, it means this. Um which makes it a type, it means this. Um which makes it a type, it means this. Um which makes it a little bit easier to then have a single little bit easier to then have a single little bit easier to then have a single way to to generate pearls because pearls way to to generate pearls because pearls way to to generate pearls because pearls are a defined identifier. And so if you are a defined identifier. And so if you are a defined identifier. And so if you define it in the same way that I do, define it in the same way that I do, define it in the same way that I do, then that's the intended purpose, right? then that's the intended purpose, right? then that's the intended purpose, right? So that we can create the same identity So that we can create the same identity So that we can create the same identity for the thing that we're looking for the thing that we're looking for the thing that we're looking at. at. at. Um let's talk about some of the Um let's talk about some of the Um let's talk about some of the challenges that that we have with challenges that that we have with challenges that that we have with software software software identification. One is just knowing how identification. One is just knowing how identification. One is just knowing how to relate different components to each to relate different components to each to relate different components to each other. So if we take a look at something other. So if we take a look at something other. So if we take a look at something like Django which is a Python web like Django which is a Python web like Django which is a Python web framework uh the first three pearls framework uh the first three pearls framework uh the first three pearls identify essent essentially the same identify essent essentially the same identify essent essentially the same thing except this is the Python package thing except this is the Python package thing except this is the Python package that is hosted on the Python package that is hosted on the Python package that is hosted on the Python package index that ships Django in a particular index that ships Django in a particular index that ships Django in a particular version. This is the website where you version. This is the website where you version. This is the website where you can download the same source code that can download the same source code that can download the same source code that is present in the Python package index is present in the Python package index is present in the Python package index and this is the GitHub release that also and this is the GitHub release that also and this is the GitHub release that also contains the same same source code. contains the same same source code. contains the same same source code. Right? So these three things are Right? So these three things are Right? So these three things are essentially the same thing. And then to essentially the same thing. And then to essentially the same thing. And then to make it even worse, uh those things make it even worse, uh those things make it even worse, uh those things usually are shipped as part of some usually are shipped as part of some usually are shipped as part of some Linux distributions or other products, Linux distributions or other products, Linux distributions or other products, right? It doesn't have to be Linux right? It doesn't have to be Linux right? It doesn't have to be Linux distros. And in there they take on a distros. And in there they take on a distros. And in there they take on a different name, different uh versioning different name, different uh versioning different name, different uh versioning scheme and they have some additional scheme and they have some additional scheme and they have some additional attributes and their namespace to the attributes and their namespace to the attributes and their namespace to the specific entity that actually built specific entity that actually built specific entity that actually built them. Right? So how can we essentially them. Right? So how can we essentially them. Right? So how can we essentially relate all of these together? Um I don't relate all of these together? Um I don't relate all of these together? Um I don't think this is a problem of the identity think this is a problem of the identity think this is a problem of the identity specifically. It's mostly about specifically. It's mostly about specifically. It's mostly about relationships between these components, relationships between these components, relationships between these components, right? Defining how they relate to each right? Defining how they relate to each right? Defining how they relate to each other. And for that we have another other. And for that we have another other. And for that we have another great standard sbomb, right? So if the great standard sbomb, right? So if the great standard sbomb, right? So if the Python uh maintainer decides that they Python uh maintainer decides that they Python uh maintainer decides that they want to support all of these three want to support all of these three want to support all of these three identities as the thing that they're identities as the thing that they're identities as the thing that they're shipping, they can create an sbomb that shipping, they can create an sbomb that shipping, they can create an sbomb that claims all three of those. If Debian claims all three of those. If Debian claims all three of those. If Debian decides to ship Python 3 Django which is decides to ship Python 3 Django which is decides to ship Python 3 Django which is based on the Pippi package, then they based on the Pippi package, then they based on the Pippi package, then they can release an ESBOM that claims both of can release an ESBOM that claims both of can release an ESBOM that claims both of those and then it has a relationship those and then it has a relationship those and then it has a relationship between those two packages that one is a between those two packages that one is a between those two packages that one is a descendant of the other or an ancestor I descendant of the other or an ancestor I descendant of the other or an ancestor I guess. Um um another challenge is identifying the um another challenge is identifying the um another challenge is identifying the loose things uh like the things that are loose things uh like the things that are loose things uh like the things that are in the remote areas, right? So, how do in the remote areas, right? So, how do in the remote areas, right? So, how do we identify C and C++ components um that we identify C and C++ components um that we identify C and C++ components um that just live on random just live on random just live on random websites? Um, they don't really have a websites? Um, they don't really have a websites? Um, they don't really have a way to way to way to um authoratively claim what they are. We um authoratively claim what they are. We um authoratively claim what they are. We just have to agree as an industry to, just have to agree as an industry to, just have to agree as an industry to, you know, call it the same thing. Um, I you know, call it the same thing. Um, I you know, call it the same thing. Um, I don't really see any other solution than don't really see any other solution than don't really see any other solution than just having like a central list of these just having like a central list of these just having like a central list of these dependencies and give them a unique name dependencies and give them a unique name dependencies and give them a unique name and then use that across the entire data and then use that across the entire data and then use that across the entire data set. In the CV records, the OpenSSL uh set. In the CV records, the OpenSSL uh set. In the CV records, the OpenSSL uh CVE records just use a product of CVE records just use a product of CVE records just use a product of OpenSSL and vendor OpenSSL. Great. But OpenSSL and vendor OpenSSL. Great. But OpenSSL and vendor OpenSSL. Great. But let's make sure that's a standardized let's make sure that's a standardized let's make sure that's a standardized value and use the same for any other uh value and use the same for any other uh value and use the same for any other uh CV records for OpenSSL. Right? If the CV records for OpenSSL. Right? If the CV records for OpenSSL. Right? If the next one says OpenSSL- something, then next one says OpenSSL- something, then next one says OpenSSL- something, then we have a messy data set we have a messy data set we have a messy data set already. And then the third one is just already. And then the third one is just already. And then the third one is just improvements in the in the ecosystem improvements in the in the ecosystem improvements in the in the ecosystem themselves. themselves. themselves. Um the accuracy of this data matters Um the accuracy of this data matters Um the accuracy of this data matters because it essentially ties the one because it essentially ties the one because it essentially ties the one thing that the CVE is related to which thing that the CVE is related to which thing that the CVE is related to which is the thing that you're that is is the thing that you're that is is the thing that you're that is vulnerable, right? all of the other uh vulnerable, right? all of the other uh vulnerable, right? all of the other uh metadata like CVSS and CWE and uh EPSS metadata like CVSS and CWE and uh EPSS metadata like CVSS and CWE and uh EPSS they're additional data that are tied to they're additional data that are tied to they're additional data that are tied to the tuple of a CV ID and the thing that the tuple of a CV ID and the thing that the tuple of a CV ID and the thing that is affected right and if we can't have is affected right and if we can't have is affected right and if we can't have information that is accurate enough to information that is accurate enough to information that is accurate enough to determine that thing then we lose a lot determine that thing then we lose a lot determine that thing then we lose a lot of the other benefits of of the other of the other benefits of of the other of the other benefits of of the other additional metadata uh as well I think I additional metadata uh as well I think I additional metadata uh as well I think I At Vulcon last year, we talked about At Vulcon last year, we talked about At Vulcon last year, we talked about this and it's a year later and I don't this and it's a year later and I don't this and it's a year later and I don't think much has improved. So the CV think much has improved. So the CV think much has improved. So the CV record supports more way to identify record supports more way to identify record supports more way to identify things, but there's still no no things, but there's still no no things, but there's still no no requirement on CNAs to do it accurately requirement on CNAs to do it accurately requirement on CNAs to do it accurately or actually do it in a way that allows or actually do it in a way that allows or actually do it in a way that allows for better downstream use cases, right? for better downstream use cases, right? for better downstream use cases, right? So how can we how can we motivate the So how can we how can we motivate the So how can we how can we motivate the CNAs to do this? And I know it's CNAs to do this? And I know it's CNAs to do this? And I know it's probably a lot of work, but there are probably a lot of work, but there are probably a lot of work, but there are ways to approach that with outreach ways to approach that with outreach ways to approach that with outreach training. You know, we can help the CNAs training. You know, we can help the CNAs training. You know, we can help the CNAs to to improve the data to to improve the data to to improve the data set. And then once we actually submit set. And then once we actually submit set. And then once we actually submit good data, it should actually be trivial good data, it should actually be trivial good data, it should actually be trivial to convert between the different formats to convert between the different formats to convert between the different formats because I think they should be because I think they should be because I think they should be interoperable, right? So if I submit interoperable, right? So if I submit interoperable, right? So if I submit pearls, there is no no reason that those pearls, there is no no reason that those pearls, there is no no reason that those can't become CPEs in the in the backend can't become CPEs in the in the backend can't become CPEs in the in the backend CV record. And if I care about consuming CV record. And if I care about consuming CV record. And if I care about consuming CPEs, then I look at that data. CPEs, then I look at that data. CPEs, then I look at that data. Um, if you if you are a user of Pearl, Um, if you if you are a user of Pearl, Um, if you if you are a user of Pearl, um, the specification needs a lot of um, the specification needs a lot of um, the specification needs a lot of love. There's a lot of issues and open love. There's a lot of issues and open love. There's a lot of issues and open PRs on GitHub. So, I urge you to go and, PRs on GitHub. So, I urge you to go and, PRs on GitHub. So, I urge you to go and, uh, help out because the I think the uh, help out because the I think the uh, help out because the I think the project is drowning in in open issues project is drowning in in open issues project is drowning in in open issues that need to be resolved sooner rather that need to be resolved sooner rather that need to be resolved sooner rather than later to make it less complex than later to make it less complex than later to make it less complex rather than more complex. rather than more complex. rather than more complex. Um, and then my last note in here is Um, and then my last note in here is Um, and then my last note in here is that if we actually nail down the that if we actually nail down the that if we actually nail down the accuracy of this data and allow others accuracy of this data and allow others accuracy of this data and allow others to contribute to the CV records to contribute to the CV records to contribute to the CV records themselves through the ADP program, we themselves through the ADP program, we themselves through the ADP program, we can have a much more cohesive data set can have a much more cohesive data set can have a much more cohesive data set that is able to uh point to an upstream that is able to uh point to an upstream that is able to uh point to an upstream component and then identify all of its component and then identify all of its component and then identify all of its downstream varants. Right? So if I as an downstream varants. Right? So if I as an downstream varants. Right? So if I as an ADP acting on behalf of Red Hat can add ADP acting on behalf of Red Hat can add ADP acting on behalf of Red Hat can add my information about Red Hat specific my information about Red Hat specific my information about Red Hat specific RPMs to something that was uh released RPMs to something that was uh released RPMs to something that was uh released by the curl CNA then the link exists by the curl CNA then the link exists by the curl CNA then the link exists from the upstream curl to the curl RPM from the upstream curl to the curl RPM from the upstream curl to the curl RPM within a Red Hat product. Right? If within a Red Hat product. Right? If within a Red Hat product. Right? If every CNA does this, then we have a every CNA does this, then we have a every CNA does this, then we have a single source of truth that tells you single source of truth that tells you single source of truth that tells you everything you need to know about the everything you need to know about the everything you need to know about the vulnerability and its downstream vulnerability and its downstream vulnerability and its downstream effectiveness, not just the upstream effectiveness, not just the upstream effectiveness, not just the upstream one. And with that, close it out for one. And with that, close it out for one. And with that, close it out for questions and hopefully some discussion. Thank you very much, Martin, for that. Thank you very much, Martin, for that. Thank you very much, Martin, for that. Uh, I realize we are a packed house. Um, Uh, I realize we are a packed house. Um, Uh, I realize we are a packed house. Um, so I will try my best to either toss the so I will try my best to either toss the so I will try my best to either toss the microphone. I'm not throwing it, but uh microphone. I'm not throwing it, but uh microphone. I'm not throwing it, but uh try to get the microphone to you. Uh, is try to get the microphone to you. Uh, is try to get the microphone to you. Uh, is there any questions at this time that we there any questions at this time that we there any questions at this time that we can help engage answers on? Oh. Oh, hey, just me. There you go. Oh. Oh, hey, just me. There you go. Oh. Oh, hey, just me. There you go. Yeah. Um, hi. Thank you for your talk. Yeah. Um, hi. Thank you for your talk. Yeah. Um, hi. Thank you for your talk. Um, amazing. And also thank you for Um, amazing. And also thank you for Um, amazing. And also thank you for asking for CNAs to put push their data asking for CNAs to put push their data asking for CNAs to put push their data into upstream uh uh containers. My into upstream uh uh containers. My into upstream uh uh containers. My question would be after talking about question would be after talking about question would be after talking about those different um namings and standards those different um namings and standards those different um namings and standards um how does Redhead approach kind of a um how does Redhead approach kind of a um how does Redhead approach kind of a mapping between those standards and to mapping between those standards and to mapping between those standards and to make sure that kind of we talk about the make sure that kind of we talk about the make sure that kind of we talk about the equal thing. So um this pearl is equal equal thing. So um this pearl is equal equal thing. So um this pearl is equal to that CPE or basically that pearl is to that CPE or basically that pearl is to that CPE or basically that pearl is some subset of that CPE. Is there some subset of that CPE. Is there some subset of that CPE. Is there anything that you can say on that anything that you can say on that anything that you can say on that regard? We so speaking at the component regard? We so speaking at the component regard? We so speaking at the component identification, we haven't really we identification, we haven't really we identification, we haven't really we haven't really tried to make it haven't really tried to make it haven't really tried to make it um interoperable with with CPE um interoperable with with CPE um interoperable with with CPE specifically CP 2.3. Um but now that CP specifically CP 2.3. Um but now that CP specifically CP 2.3. Um but now that CP applicability is supported in the CV applicability is supported in the CV applicability is supported in the CV records, I think we have some records, I think we have some records, I think we have some exploration to do of how we can convert exploration to do of how we can convert exploration to do of how we can convert our pearls into the CP applicability our pearls into the CP applicability our pearls into the CP applicability statements. um so that we publish the statements. um so that we publish the statements. um so that we publish the same data right um I don't think it same data right um I don't think it same data right um I don't think it should be difficult the the pearl I should be difficult the the pearl I should be difficult the the pearl I think has more data than CPE so I think think has more data than CPE so I think think has more data than CPE so I think it's going to be easier to convert it's going to be easier to convert it's going to be easier to convert pearls to CPEs rather than the other way pearls to CPEs rather than the other way pearls to CPEs rather than the other way around a CPE does not have enough around a CPE does not have enough around a CPE does not have enough information to make a full pearl in most information to make a full pearl in most information to make a full pearl in most cases I think so I think the other part cases I think so I think the other part cases I think so I think the other part might be more difficult but we're might be more difficult but we're might be more difficult but we're starting with pearls so it gets a little starting with pearls so it gets a little starting with pearls so it gets a little bit easier Okay. Is it on? No. Okay. I'll go and Okay. Is it on? No. Okay. I'll go and Okay. Is it on? No. Okay. I'll go and then you um unfortunately I got a lot of then you um unfortunately I got a lot of then you um unfortunately I got a lot of questions for you, Martin. questions for you, Martin. questions for you, Martin. Unfortunately, yes, he works for me. Um Unfortunately, yes, he works for me. Um Unfortunately, yes, he works for me. Um but I want I want to kind of up level but I want I want to kind of up level but I want I want to kind of up level and said from a Red Hat perspective, and said from a Red Hat perspective, and said from a Red Hat perspective, from a ecosystem perspective, you know, from a ecosystem perspective, you know, from a ecosystem perspective, you know, you talked about how we do a standard you talked about how we do a standard you talked about how we do a standard and a standard namespace. So I started and a standard namespace. So I started and a standard namespace. So I started with the namespace because I was like with the namespace because I was like with the namespace because I was like you you almost have to have that to you you almost have to have that to you you almost have to have that to work. work. work. Are you thinking that the CVE program Are you thinking that the CVE program Are you thinking that the CVE program should kind of help push this through? should kind of help push this through? should kind of help push this through? And and you you put something there And and you you put something there And and you you put something there about first class citizens. So, it about first class citizens. So, it about first class citizens. So, it intimated like a taring of those who intimated like a taring of those who intimated like a taring of those who could do it and then ADP for those who could do it and then ADP for those who could do it and then ADP for those who can't. No, that that was a call out to can't. No, that that was a call out to can't. No, that that was a call out to like proper support for pearls within like proper support for pearls within like proper support for pearls within the CV schema, right? We need to be able the CV schema, right? We need to be able the CV schema, right? We need to be able to have a have to have a have to have a have a custom or have a specific object that a custom or have a specific object that a custom or have a specific object that has pearls. Just like we have the CPE has pearls. Just like we have the CPE has pearls. Just like we have the CPE applicability object, there needs to be applicability object, there needs to be applicability object, there needs to be a pearl object that supports pearls and a pearl object that supports pearls and a pearl object that supports pearls and pearl and version ranges. And you know, pearl and version ranges. And you know, pearl and version ranges. And you know, rather than it just being something that rather than it just being something that rather than it just being something that you put in the version field. Okay. And you put in the version field. Okay. And you put in the version field. Okay. And I I'll ask this a second one. The sbomb I I'll ask this a second one. The sbomb I I'll ask this a second one. The sbomb part, you caught my attention. Are you part, you caught my attention. Are you part, you caught my attention. Are you Yeah, unfortunately. He's my esbomb guy. Yeah, unfortunately. He's my esbomb guy. Yeah, unfortunately. He's my esbomb guy. Um, how are you looking for us to refer Um, how are you looking for us to refer Um, how are you looking for us to refer that? Are you looking then that I mean that? Are you looking then that I mean that? Are you looking then that I mean how do I know what's a good esbomb that how do I know what's a good esbomb that how do I know what's a good esbomb that you could refer to? You know what what's you could refer to? You know what what's you could refer to? You know what what's your idea of how we approach that? your idea of how we approach that? your idea of how we approach that? Right? So it depends when you where you Right? So it depends when you where you Right? So it depends when you where you are referring from right so if you're are referring from right so if you're are referring from right so if you're publishing a vex file that vex file can publishing a vex file that vex file can publishing a vex file that vex file can refer to a single component right but refer to a single component right but refer to a single component right but maybe I want to give you the information maybe I want to give you the information maybe I want to give you the information where that component came from maybe where that component came from maybe where that component came from maybe it's you know three layers of upstream it's you know three layers of upstream it's you know three layers of upstream but I would hope that you don't put that but I would hope that you don't put that but I would hope that you don't put that in the vex file you can just refer to in the vex file you can just refer to in the vex file you can just refer to the sbomb that shows you that full the sbomb that shows you that full the sbomb that shows you that full picture and say you know this is the picture and say you know this is the picture and say you know this is the affected component And here is an sbomb affected component And here is an sbomb affected component And here is an sbomb that shows you its provenence. And then that shows you its provenence. And then that shows you its provenence. And then the sbomb itself shows you the entire the sbomb itself shows you the entire the sbomb itself shows you the entire path from the real RPM that contains path from the real RPM that contains path from the real RPM that contains Django all the way to the upstream Django all the way to the upstream Django all the way to the upstream Django source project, right? The I mean the references could right? The I mean the references could right? The I mean the references could just be like a pointer at the at the just be like a pointer at the at the just be like a pointer at the at the sbomb, right? Like here it is. sbomb, right? Like here it is. sbomb, right? Like here it is. Okay, so protos distributed model, Okay, so protos distributed model, Okay, so protos distributed model, right? So the developers can put the pro right? So the developers can put the pro right? So the developers can put the pro into their packages. Yeah. But this into their packages. Yeah. But this into their packages. Yeah. But this introduced a big problem because introduced a big problem because introduced a big problem because developer can do whatever they want even developer can do whatever they want even developer can do whatever they want even they get a training. So for the same they get a training. So for the same they get a training. So for the same like jungle versions they could put 10 like jungle versions they could put 10 like jungle versions they could put 10 or 20 different names. So this is the or 20 different names. So this is the or 20 different names. So this is the alias problem they already been facing alias problem they already been facing alias problem they already been facing even for the centralized CPEs. So for even for the centralized CPEs. So for even for the centralized CPEs. So for example, Red Hat has their namings, example, Red Hat has their namings, example, Red Hat has their namings, Oracle has their own, Microsoft their Oracle has their own, Microsoft their Oracle has their own, Microsoft their own. Yeah. Yeah. You create big problem, own. Yeah. Yeah. You create big problem, own. Yeah. Yeah. You create big problem, right? So how can I identify the same right? So how can I identify the same right? So how can I identify the same version, same thing? Yeah, that's this version, same thing? Yeah, that's this version, same thing? Yeah, that's this slide. We can rely on AI to do some, you slide. We can rely on AI to do some, you slide. We can rely on AI to do some, you know, identification, but know, identification, but know, identification, but there's always going to be multiple there's always going to be multiple there's always going to be multiple identities, right? And we just have to identities, right? And we just have to identities, right? And we just have to be able to define the relationship be able to define the relationship be able to define the relationship between them. Yeah, I don't see any between them. Yeah, I don't see any between them. Yeah, I don't see any solution unless we have centralized one. being published where they have their being published where they have their being published where they have their identity. identity. identity. I mean, that's how the CPE dictionary is I mean, that's how the CPE dictionary is I mean, that's how the CPE dictionary is supposed to work, right? It's supposed supposed to work, right? It's supposed supposed to work, right? It's supposed to be a central data set and here we are. Yeah. Yeah. I don't know the central model also has I don't know the central model also has I don't know the central model also has its downsides. So its downsides. So its downsides. So awesome presentation. Thank you. Uh you awesome presentation. Thank you. Uh you awesome presentation. Thank you. Uh you were very humble and you failed to shout were very humble and you failed to shout were very humble and you failed to shout out your own CNA lint tool which CV lint out your own CNA lint tool which CV lint out your own CNA lint tool which CV lint sorry uh tool which is awesome. Thank sorry uh tool which is awesome. Thank sorry uh tool which is awesome. Thank you. Uh there's a lot of opportunity you. Uh there's a lot of opportunity you. Uh there's a lot of opportunity there to have contribute uh extra there to have contribute uh extra there to have contribute uh extra contributed checks. I think that the contributed checks. I think that the contributed checks. I think that the data that that spits out is really data that that spits out is really data that that spits out is really really helpful really helpful really helpful for doing data driven decision- making for doing data driven decision- making for doing data driven decision- making around how we can uplevel standards around how we can uplevel standards around how we can uplevel standards enforcement for minimum standards for enforcement for minimum standards for enforcement for minimum standards for CVS. And a shout out to Jerry for CVS. And a shout out to Jerry for CVS. And a shout out to Jerry for running a daily analysis of that. So running a daily analysis of that. So running a daily analysis of that. So yeah, um really awesome both of you. yeah, um really awesome both of you. yeah, um really awesome both of you. Thank you. And Jerry had the same Thank you. And Jerry had the same Thank you. And Jerry had the same message yesterday. I was at a sock and I message yesterday. I was at a sock and I message yesterday. I was at a sock and I don't know where he is but if he's here don't know where he is but if he's here don't know where he is but if he's here ah um that like we need we need to be ah um that like we need we need to be ah um that like we need we need to be able to enforce some of these standards able to enforce some of these standards able to enforce some of these standards because it's producing a lot of bad data because it's producing a lot of bad data because it's producing a lot of bad data and then there's a lot of products that and then there's a lot of products that and then there's a lot of products that work on top of that data and produce a work on top of that data and produce a work on top of that data and produce a lot of false positives right so and lot of false positives right so and lot of false positives right so and negatives and negatives right so let's negatives and negatives right so let's negatives and negatives right so let's if you solve the identity it covers like if you solve the identity it covers like if you solve the identity it covers like 90% of those false positives and 90% of those false positives and 90% of those false positives and negatives Yeah, I think especially for for the Yeah, I think especially for for the Yeah, I think especially for for the previous slide that you had up uh it's previous slide that you had up uh it's previous slide that you had up uh it's important to notice that those are in important to notice that those are in important to notice that those are in fact different things. They have a fact different things. They have a fact different things. They have a relationship but uh that relationship relationship but uh that relationship relationship but uh that relationship is it's not the same thing. If I get my is it's not the same thing. If I get my is it's not the same thing. If I get my package from Debian that might be package from Debian that might be package from Debian that might be different than or that is different than different than or that is different than different than or that is different than the one that I get from Fedora. One the one that I get from Fedora. One the one that I get from Fedora. One might have a vulnerability just because might have a vulnerability just because might have a vulnerability just because of the timing and how they compile it. of the timing and how they compile it. of the timing and how they compile it. The other one doesn't have it. The other one doesn't have it. The other one doesn't have it. So things that are distributed to So things that are distributed to So things that are distributed to different channels are different things. different channels are different things. different channels are different things. Um those are not the same thing. They Um those are not the same thing. They Um those are not the same thing. They have a relationship. We need to cover have a relationship. We need to cover have a relationship. We need to cover those things. Um but those are not the those things. Um but those are not the those things. Um but those are not the same thing. Yeah, they're not the same same thing. Yeah, they're not the same same thing. Yeah, they're not the same thing. Um, I would argue that the first thing. Um, I would argue that the first thing. Um, I would argue that the first three are the same thing. Would you three are the same thing. Would you three are the same thing. Would you agree with that? Technically, but If that? Technically, but If that? Technically, but If we yeah if you're on pi there's probably we yeah if you're on pi there's probably we yeah if you're on pi there's probably some extra croft in the package itself some extra croft in the package itself some extra croft in the package itself that isn't maybe present or is present that isn't maybe present or is present that isn't maybe present or is present in the source repository I think what in the source repository I think what in the source repository I think what you're saying um true but then if I go you're saying um true but then if I go you're saying um true but then if I go back to my definition of software back to my definition of software back to my definition of software identity it's like within a specific identity it's like within a specific identity it's like within a specific ecosystem right so for the ecosystem ecosystem right so for the ecosystem ecosystem right so for the ecosystem that we're in vulnerability management I that we're in vulnerability management I that we're in vulnerability management I don't care if it's a onetoone binary don't care if it's a onetoone binary don't care if it's a onetoone binary match of all files else, right? I care match of all files else, right? I care match of all files else, right? I care about the about the about the vulnerabilities. So if the vulnerabilities. So if the vulnerabilities. So if the vulnerability, it's very unlikely, sure vulnerability, it's very unlikely, sure vulnerability, it's very unlikely, sure it may be, that you will have a it may be, that you will have a it may be, that you will have a vulnerability in the Pippi package and vulnerability in the Pippi package and vulnerability in the Pippi package and not have it in the GitHub release, not have it in the GitHub release, not have it in the GitHub release, right? Would you agree with that? Yes. One in a million. But regardless of of regardless of if But regardless of of regardless of if But regardless of of regardless of if you consider these to be unique or not, you consider these to be unique or not, you consider these to be unique or not, um the downstream versions of them need um the downstream versions of them need um the downstream versions of them need to have that extra context of how to have that extra context of how to have that extra context of how they're related to each other. And they're related to each other. And they're related to each other. And that's why you will always see vex that's why you will always see vex that's why you will always see vex statements for probably this and a statements for probably this and a statements for probably this and a separate one for this, right? because separate one for this, right? because separate one for this, right? because you need to it's essentially becomes a you need to it's essentially becomes a you need to it's essentially becomes a different statement of effectiveness different statement of effectiveness different statement of effectiveness just because it's a different thing but just because it's a different thing but just because it's a different thing but it's based on the first thing right it's based on the first thing right it's based on the first thing right so you need to have the context to be so you need to have the context to be so you need to have the context to be able to relate those two each two able to relate those two each two able to relate those two each two together which bomb is I think a good together which bomb is I think a good together which bomb is I think a good good delivery mechanism for that. good delivery mechanism for that. good delivery mechanism for that. So, um I'm trying to figure out if So, um I'm trying to figure out if So, um I'm trying to figure out if you've actually answered the the answer you've actually answered the the answer you've actually answered the the answer to this challenge or not. And I asked to this challenge or not. And I asked to this challenge or not. And I asked the same question in the GitHub or in the same question in the GitHub or in the same question in the GitHub or in the Discord channel was do you have a the Discord channel was do you have a the Discord channel was do you have a solution for tracking these solution for tracking these solution for tracking these relationships within Pearl itself? relationships within Pearl itself? relationships within Pearl itself? Not Pearl. Not Pearl. So I've actually Not Pearl. Not Pearl. So I've actually Not Pearl. Not Pearl. So I've actually seen attempts to encode some of these seen attempts to encode some of these seen attempts to encode some of these relationships in Pearl and they it would relationships in Pearl and they it would relationships in Pearl and they it would look like this and then there would be a look like this and then there would be a look like this and then there would be a qualifier and it would say like qualifier and it would say like qualifier and it would say like downstream equals this, downstream equals this, downstream equals this, right? So your answer is the hierarchy right? So your answer is the hierarchy right? So your answer is the hierarchy within the sbomb itself with the within the sbomb itself with the within the sbomb itself with the relationships. Yeah. Like let's let's relationships. Yeah. Like let's let's relationships. Yeah. Like let's let's leave the hierarchy to the tools that leave the hierarchy to the tools that leave the hierarchy to the tools that actually are meant that were designed actually are meant that were designed actually are meant that were designed for that purpose which is Sbombs, right? for that purpose which is Sbombs, right? for that purpose which is Sbombs, right? And so if you care about these And so if you care about these And so if you care about these relationships, then we need to get uh relationships, then we need to get uh relationships, then we need to get uh everyone to start publishing these everyone to start publishing these everyone to start publishing these sbombs, right? I I I can add a little sbombs, right? I I I can add a little sbombs, right? I I I can add a little bit of extra color to that, not from the bit of extra color to that, not from the bit of extra color to that, not from the sbomb angle, but from the sbomb angle, but from the sbomb angle, but from the OSV angle. Uh we've just added upstream OSV angle. Uh we've just added upstream OSV angle. Uh we've just added upstream as a field to the schema. So you might as a field to the schema. So you might as a field to the schema. So you might have a vulnerability record in say in have a vulnerability record in say in have a vulnerability record in say in this instance pi and then you might have this instance pi and then you might have this instance pi and then you might have a a Red Hat vulnerability identifier for a a Red Hat vulnerability identifier for a a Red Hat vulnerability identifier for the vulnerability in the artifact the vulnerability in the artifact the vulnerability in the artifact shipped from Red Hat and there's there's shipped from Red Hat and there's there's shipped from Red Hat and there's there's a relationship expressed between those a relationship expressed between those a relationship expressed between those two. So so you can two. So so you can two. So so you can say that rather than just having to have say that rather than just having to have say that rather than just having to have an alias or a related, we've now got an an alias or a related, we've now got an an alias or a related, we've now got an upstream as well. So, so that that's upstream as well. So, so that that's upstream as well. So, so that that's another way to to do it from the the another way to to do it from the the another way to to do it from the the vulnerability scanning. Yeah. And vulnerability scanning. Yeah. And vulnerability scanning. Yeah. And all right, at that point I think uh all right, at that point I think uh all right, at that point I think uh we'll wrap this session up. Uh one more we'll wrap this session up. Uh one more we'll wrap this session up. Uh one more round of applause. Thank you. Thank you.